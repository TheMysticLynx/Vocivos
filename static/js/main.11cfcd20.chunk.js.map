{"version":3,"sources":["automation.ts","Api/types.ts","store/index.ts","components/SkeletonLoaders.tsx","components/NavBar.tsx","Api/api.worker.ts","WorkerContext.tsx","components/SignIn.tsx","components/Markets/Buy.tsx","components/Markets/Sell.tsx","components/Ships/Travel.tsx","components/Ships/TravelProgress.tsx","components/Ships/ShipCard.tsx","App.tsx","components/Profile.tsx","components/Ships/PurchaseShipModal.tsx","components/Ships/Available.tsx","components/Ships/ShipsGroup.tsx","components/Ships/Owned.tsx","components/Ships/Ships.tsx","components/Systems/Locations.tsx","components/Systems/Systems.tsx","components/Systems/Location.tsx","components/Money/GetLoadModal.tsx","components/Money/Available.tsx","components/Money/Owned.tsx","components/Money/Worth.tsx","components/Money/Money.tsx","components/Markets/Markets.tsx","components/Systems/Structures/Build.tsx","components/Systems/Structures/BuiltStructures.tsx","components/Systems/Structures/index.tsx","index.tsx"],"names":["Worker_fn","Worker","LoanType","LocationType","CargoType","LoanStatus","initialState","user","credits","loans","ships","username","undefined","account","token","flightPlans","marketData","automateAll","systems","spacetraders","createSlice","name","reducers","reset","state","Object","assign","setUser","payload","setToken","setCredits","addLoan","push","updateLoans","addShip","updateShip","find","x","id","updateShips","addFlightPlan","ship","shipId","location","flightPlanId","spaceAvailable","fuelConsumed","fuel","cargo","good","Fuel","fuelRemaining","quantity","splice","findIndex","removeFlightPlan","destination","updateMarketData","some","item","planet","symbol","map","localStorage","setItem","JSON","stringify","updateGoodPriceAfterBuy","marketplace","order","purchasePricePerUnit","pricePerUnit","updateGoodPriceAfterSell","sellPricePerUnit","setSystems","setAllAutomationState","actions","reducer","store","configureStore","preloadedState","ModalPlaceholder","speed","width","height","viewBox","backgroundColor","foregroundColor","y","rx","ry","CardLoader","HeaderLoader","ProfileLoader","MarketCardLoader","className","NavBar","useSelector","useState","dropDownOpen","setDropDownOpen","ref","useRef","dispatch","useDispatch","useEffect","pageEvent","e","current","contains","target","window","addEventListener","removeEventListener","type","onClick","xmlns","fill","aria-hidden","fillRule","d","clipRule","role","aria-orientation","aria-labelledby","removeItem","Fragment","to","length","toLocaleString","title","strokeWidth","stroke","strokeLinecap","strokeLinejoin","WorkerContext","createContext","WorkerProvider","children","worker","setWorker","apiKey","getItem","parse","ApiWorker","wrap","Api","then","api","Provider","value","GetApiKey","useContext","apiWorker","userName","setUserName","userToken","setUserToken","formValid","setFormValid","signIn","setSignIn","error","setError","disabled","setDisabled","getApiKey","a","preventDefault","getToken","setCredentials","getUser","message","Login","validate","valid","document","querySelector","checkValidity","placeholder","onChange","required","Buy","handleClose","show","setMarketData","selectedMarket","setSelectedMarket","purchaseQuantity","setPurchaseQuantity","working","setWorking","showHideModal","getMarket","data","sort","b","maxQuantity","maxCargo","Math","floor","volumePerUnit","quantityAvailable","purchaseMarket","purchaseOrder","result","market","toLowerCase","split","s","charAt","toUpperCase","slice","join","min","max","parseInt","Sell","sellQuantity","setSellQuantity","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","sellMarket","sellOrder","deleteMarket","deleteOrder","shipInfo","depositGoods","sellPrice","totalVolume","system","locations","Wormhole","Travel","shipError","setLocations","autoBuyFuel","setAutoBuyFuel","getLocations","loc","createFlightPlan","retry","warpJump","flightPlan","startsWith","requiredFuelString","match","ownedShips","htmlFor","checked","TravelProgressBar","props","completed","style","transition","ShipCard","compact","automation","showBuyModal","setBuyModalShow","showSellModal","setSellModalShow","showTravelModal","setTravelModalShow","remainingTime","setRemainingTime","Date","now","time","setTime","interval","setInterval","clearInterval","formatDistanceToNowStrict","arrivesAt","calcProgress","getUnixTime","timeRemainingInSeconds","isFuture","filter","reduce","acc","TravelProgress","manufacturer","enableBackground","weapons","plating","departure","defaultProps","AutomationWorkerApiAction","Profile","messages","status","Current","loan","repaymentAmount","formatDistanceToNow","due","addSuffix","PurchaseShipModal","history","useHistory","loading","setLoading","purchaseShip","buyShip","renderButtons","price","purchaseLocations","Available","setShips","sortOrder","setOrder","sortType","setSortType","showModal","setModalShow","selectedShip","setSelectedShip","GetShips","availableShips","getShips","lowestPrice","prev","curr","sorted","class","transform","version","ShipsGroup","setShipError","collapseHeight","setCollapseHeight","duration","group","localeCompare","sortShips","Owned","shipGroups","setShipGroups","forEach","destinationSystem","UNKNOWN","ordered","keys","obj","key","automateDisabled","z","setAutomation","Ships","exact","activeClassName","path","component","Locations","sortedLocations","setSortedLocations","systemsInfo","temp","GetSystems","sortedSystem","Moon","parent","satellites","structures","satellite","SystemMap","LocationInfo","useParams","locInfo","setLocInfo","getLocation","goBack","structure","ownedBy","GetLoan","requestLoan","newLoan","Startup","amount","termInDays","rate","setLoans","selectedLoan","setSelectedLoan","getLoansAvailable","GetLoans","collateralRequired","response","setResponse","repayLoan","loanId","replayLoan","Worth","uniqueShipCount","setUniqueShipCount","shipPrices","setShipPrices","cargos","setCargos","totalWorth","setTotalWorth","getShipPrices","shipTypes","Map","results","Array","from","entries","shipType","uniques","cargosArray","values","bestValue","markets","locationsWithGood","marketCargo","total","Loans","Markets","automationEnabled","activeSystem","setActiveSystem","changeSystem","updatedAt","getMarketData","formatString","getDataForLocation","getUpdatedTime","getSystemSymbolFromLocation","console","log","distanceBetween","point1","point2","ceil","sqrt","fuelRequired","round","bestRoutes","uniqueLocations","Set","uniqueSystems","bestSystemRoutes","Research","i","cpdv","lastUpdated","existing","routes","getBestRoutes","systemRoute","route","currentTarget","Structures","setStructures","locationsForStructure","setLocationsForStructure","selectedStructure","setSelectedStructure","selectedLocation","setSelectedLocation","getStructures","findStructureLocation","allowedLocationTypes","locationType","getLocationsForStructure","consumes","produces","BuiltStructures","userStructures","setUserStructures","sysLoc","Build","App","automationWorker","setAutomationWorker","FetchAccount","queryFlightPlan","terminatedAt","getSystems","marketDataStore","loadedMarketData","webworkerError","automationWorkerMakeApiCall","action","CreateFlightPlan","MarketData","timer","Timer","start","precision","seconds","automationGetStore","getState","updateState","AutoWorker","Comlink","AutomationWorker","instance","createWorker","stop","SignIn","Location","fallback","Systems","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.11cfcd20.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"automation.worker.js\");\n}\n","export enum LoanType {\n   Startup = 'STARTUP',\n}\n\nexport enum LocationType {\n   Planet = 'PLANET',\n   Moon = 'MOON',\n   GasGiant = 'GAS_GIANT',\n   Asteroid = 'ASTEROID',\n   Wormhole = 'WORMHOLE',\n   Nebula = 'NEBULA',\n}\n\nexport enum CargoType {\n   Chemicals = 'CHEMICALS',\n   Construction = 'CONSTRUCTION_MATERIALS',\n   Consumer = 'CONSUMER_GOODS',\n   Electronics = 'ELECTRONICS',\n   Food = 'FOOD',\n   Fuel = 'FUEL',\n   Machinery = 'MACHINERY',\n   Metals = 'METALS',\n   Research = 'RESEARCH',\n   ShipParts = 'SHIP_PARTS',\n   ShipPlating = 'SHIP_PLATING',\n   Textiles = 'TEXTILES',\n   Drones = 'DRONES',\n}\n\nexport enum LoanStatus {\n   Current = 'CURRENT',\n   Paid = 'PAID',\n   PaidLate = 'PAID_LATE',\n}\n\nexport interface Status {\n   status: string;\n}\n\nexport interface Account {\n   token: string,\n   user: {\n      createdAt: string,\n      credits: number,\n      id: string,\n      email: string,\n      picture: string,\n      updatedAt: string,\n      username: string,\n   }\n}\n\nexport interface Loans {\n   loans: Loan[],\n}\n\nexport interface Loan {\n   type: string,\n   amount: number,\n   collateralRequired: boolean,\n   rate: number,\n   termInDays: number,\n}\n\nexport interface OwnedLoan {\n   due: Date,\n   id: string,\n   repaymentAmount: number,\n   status: LoanStatus,\n   type: LoanType,\n}\n\nexport interface ShipsAvailable {\n   ships: Ship[],\n}\n\nexport interface OwnedShips {\n   ships: OwnedShip[]\n}\n\nexport interface ShipInfo {\n   ship: OwnedShip,\n}\n\nexport interface Ship {\n   class: string,\n   manufacturer: string,\n   maxCargo: number,\n   plating: number,\n   purchaseLocations: PurchaseLocation[],\n   speed: number,\n   type: string,\n   weapons: number,\n}\n\nexport interface OwnedShip {\n   cargo: Cargo[],\n   class: string,\n   flightPlanId?: string,\n   id: string,\n   location?: string,\n   manufacturer: string,\n   maxCargo: number,\n   plating: number,\n   spaceAvailable: number,\n   speed: number,\n   type: string,\n   weapons: number,\n   x: number,\n   y: number,\n}\n\nexport interface BuyShipResponse {\n   credits: number,\n   ship: OwnedShip,\n}\n\nexport interface Cargo {\n   good: CargoType,\n   quantity: number,\n   totalVolume: number,\n}\n\nexport interface PurchaseLocation {\n   location: string,\n   price: number,\n}\n\nexport interface User {\n   user: {\n      credits: number,\n      loans: OwnedLoan[],\n      ships: OwnedShip[],\n      username: string,\n   }\n}\n\nexport interface GetLoanResponse {\n   credits: number,\n   loan: OwnedLoan,\n}\n\nexport interface Location {\n   symbol: string,\n   type: LocationType,\n   name: string,\n   x: number,\n   y: number,\n   ships: {\n      shipId: string,\n      username: string,\n      shipType: string,\n   }[],\n   allowsConstruction: boolean,\n   anomaly?: string,\n   messages?: string[],\n   structures?: Structure[]\n}\n\nexport interface Locations {\n   locations: Location[],\n}\n\nexport interface Structure {\n   id: string,\n   type: LocationType,\n   location: string,\n   ownedBy?: {\n      username: string\n   }\n}\n\nexport interface LocationResponse {\n   location: Location,\n   dockedShips: number,\n}\n\nexport interface System {\n   symbol: string,\n   name: string,\n   locations: Location[],\n}\n\nexport interface Systems {\n   systems: System[],\n}\n\nexport interface Market {\n   location: Planet,\n}\n\nexport interface Marketplace {\n   symbol: string,\n   volumePerUnit: number,\n   pricePerUnit: number,\n   quantityAvailable: number,\n   purchasePricePerUnit: number,\n   sellPricePerUnit: number,\n}\n\nexport interface Planet {\n   marketplace: Marketplace[],\n   name: string,\n   symbol: string,\n   type: string,\n   x: number,\n   y: number,\n}\n\nexport interface Purchase {\n   credits: number,\n   order: Order,\n   ship: OwnedShip,\n}\n\nexport interface Order {\n   good: string,\n   pricePerUnit: number,\n   quantity: number,\n   total: number,\n}\n\nexport interface StructureMaterials {\n   good: CargoType,\n   quantity: number,\n   targetQuantity: number,\n}\n\nexport interface DepositResponse {\n   deposit: {\n      good: CargoType,\n      quantity: number,\n   },\n   structure: Structure,\n}\n\nexport interface Jettison {\n   good: CargoType,\n   quantityRemaining: number,\n   shipId: string,\n}\n\nexport interface FlightPlanRes {\n   flightPlan: FlightPlan,\n}\n\nexport interface FlightPlan {\n   arrivesAt: Date,\n   departure: string,\n   destination: string,\n   distance: number,\n   fuelConsumed: number,\n   fuelRemaining: number,\n   id: string,\n   shipId: string,\n   terminatedAt: Date | null,\n   timeRemainingInSeconds: number,\n}\n\nexport interface AvailableStructures {\n   allowedLocationTypes: LocationType[],\n   consumes: CargoType[],\n   price: number,\n   name: string,\n   produces: CargoType[],\n   symbol: string,\n}\n\nexport interface AvailableStructuresResponse {\n   structures: AvailableStructures[]\n}\n","import { configureStore, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n   FlightPlan, Planet, OwnedLoan, OwnedShip, User, System, CargoType, Purchase, Marketplace,\n} from '../Api/types';\n\nexport interface StoredMarket {\n   updatedAt: number,\n   planet: Planet,\n}\n\ninterface InitialState {\n   user: {\n      credits: number,\n      loans: OwnedLoan[],\n      ships: OwnedShip[],\n      username: string | undefined\n   },\n   account: {\n      token: string,\n      username: string\n   },\n   flightPlans: FlightPlan[],\n   marketData: StoredMarket[],\n   automateAll: boolean,\n   systems: System[],\n}\n\nconst initialState: InitialState = {\n   user: {\n      credits: 0,\n      loans: [],\n      ships: [],\n      username: undefined,\n   },\n   account: {\n      token: '',\n      username: '',\n   },\n   flightPlans: [],\n   marketData: [],\n   automateAll: false,\n   systems: [],\n};\n\nconst spacetraders = createSlice({\n   name: 'spacetraders',\n   initialState,\n   reducers: {\n      reset: (state) => {\n         Object.assign(state, initialState);\n      },\n      setUser: (state, { payload }:PayloadAction<User>) => {\n         state.user = payload.user;\n      },\n      setToken: (state, { payload }:PayloadAction<{ username:string, token:string }>) => {\n         state.account = payload;\n      },\n      setCredits: (state, { payload }:PayloadAction<number>) => {\n         state.user.credits = payload;\n      },\n      addLoan: (state, { payload }:PayloadAction<OwnedLoan>) => {\n         state.user.loans.push(payload);\n      },\n      updateLoans: (state, { payload }:PayloadAction<OwnedLoan[]>) => {\n         state.user.loans = payload;\n      },\n      addShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         state.user.ships.push(payload);\n      },\n      updateShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         Object.assign(state.user.ships.find((x) => x.id === payload.id), payload);\n      },\n      updateShips: (state, { payload }:PayloadAction<OwnedShip[]>) => {\n         state.user.ships = payload;\n      },\n      addFlightPlan: (state, { payload }:PayloadAction<FlightPlan>) => {\n         state.flightPlans.push(payload);\n\n         // update ship with new flightplan Id\n         const ship = state.user.ships.find((x) => x.id === payload.shipId);\n         if (ship) {\n            ship.location = undefined;\n            ship.flightPlanId = payload.id;\n            ship.spaceAvailable += payload.fuelConsumed;\n            const fuel = ship.cargo.find((x) => x.good === CargoType.Fuel);\n            if (fuel && payload.fuelRemaining > 0) {\n               fuel.quantity = payload.fuelRemaining;\n            } else if (fuel && payload.fuelRemaining === 0) {\n               ship.cargo.splice(ship.cargo.findIndex((x) => x.good === CargoType.Fuel), 1);\n            }\n         }\n      },\n      removeFlightPlan: (state, { payload }:PayloadAction<FlightPlan>) => {\n         if (state.flightPlans.findIndex((x) => x.id === payload.id) > -1) {\n            state.flightPlans.splice(state.flightPlans.findIndex((x) => x.id === payload.id), 1);\n\n            // update ship with new location\n            const ship = state.user.ships.find((x) => x.id === payload.shipId);\n            if (ship) {\n               ship.location = payload.destination;\n               ship.flightPlanId = undefined;\n            }\n         }\n      },\n      updateMarketData: (state, { payload }:PayloadAction<StoredMarket>) => {\n         // check state for existing market object\n         if (state.marketData.some((item) => (item.planet.symbol === payload.planet.symbol))) {\n            state.marketData = state.marketData.map((item) => ((item.planet.symbol === payload.planet.symbol) ? payload : item));\n         } else {\n            state.marketData.push(payload);\n         }\n         localStorage.setItem('marketData', JSON.stringify(state.marketData));\n      },\n      updateGoodPriceAfterBuy: (state, { payload }:PayloadAction<Purchase>) => {\n         ((((state.marketData.find((x) => x.planet.symbol === payload.ship.location) as StoredMarket).planet.marketplace).find((x) => x.symbol === payload.order.good) as Marketplace).purchasePricePerUnit as number) = payload.order.pricePerUnit;\n      },\n      updateGoodPriceAfterSell: (state, { payload }:PayloadAction<Purchase>) => {\n         ((((state.marketData.find((x) => x.planet.symbol === payload.ship.location) as StoredMarket).planet.marketplace).find((x) => x.symbol === payload.order.good) as Marketplace).sellPricePerUnit as number) = payload.order.pricePerUnit;\n      },\n      setSystems: (state, { payload }:PayloadAction<System[]>) => {\n         state.systems = payload;\n      },\n      setAllAutomationState: (state, { payload }:PayloadAction<boolean>) => {\n         state.automateAll = payload;\n      },\n   },\n});\n\nexport const {\n   setUser, setToken, setCredits, updateShip, addFlightPlan, removeFlightPlan,\n   updateMarketData, reset, addLoan, addShip,\n   updateShips, setSystems, updateLoans, setAllAutomationState, updateGoodPriceAfterBuy,\n   updateGoodPriceAfterSell,\n} = spacetraders.actions;\n\nconst { reducer } = spacetraders;\n\n// STORE\n\nconst store = configureStore({\n   reducer,\n   preloadedState: undefined,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ModalPlaceholder = () => (\n   <ContentLoader\n      speed={2}\n      width={400}\n      height={60}\n      viewBox=\"0 0 400 60\"\n      backgroundColor=\"#D1D5DB\"\n      foregroundColor=\"#ecebeb\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"400\" height=\"44\" />\n   </ContentLoader>\n);\n\nexport const CardLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={400}\n      height={60}\n      viewBox=\"0 0 400 60\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"20\" />\n      <rect x=\"0\" y=\"45\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n   </ContentLoader>\n);\n\nexport const HeaderLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={200}\n      height={20}\n      viewBox=\"0 0 200 20\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"20\" />\n   </ContentLoader>\n);\n\nexport const ProfileLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={300}\n      height={200}\n      viewBox=\"0 0 300 200\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"20\" />\n      <rect x=\"0\" y=\"30\" rx=\"15\" ry=\"15\" width=\"250\" height=\"30\" />\n   </ContentLoader>\n);\n\nexport const AutoStepLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={398}\n      height={100}\n      viewBox=\"0 0 398 100\"\n      backgroundColor=\"#D1D5DB\"\n      foregroundColor=\"#E5E7EB\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"398\" height=\"48\" />\n      <rect x=\"0\" y=\"50\" rx=\"5\" ry=\"5\" width=\"398\" height=\"48\" />\n   </ContentLoader>\n);\n\nexport const MarketCardLoader = () => (\n   <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n      <div className=\"flex justify-between items-center pb-2 border-b border-gray-700\">\n         <ContentLoader\n            speed={2}\n            width={100}\n            height={20}\n            viewBox=\"0 0 100 20\"\n            backgroundColor=\"#9CA3AF\"\n            foregroundColor=\"#D1D5DB\"\n         >\n            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"20\" />\n         </ContentLoader>\n      </div>\n      <div className=\"text-sm my-3\">\n         <ContentLoader\n            speed={2}\n            width={175}\n            height={70}\n            viewBox=\"0 0 175 70\"\n            backgroundColor=\"#9CA3AF\"\n            foregroundColor=\"#D1D5DB\"\n         >\n            <rect x=\"0\" y=\"0\" rx=\"7.5\" ry=\"7.5\" width=\"125\" height=\"15\" />\n            <rect x=\"15\" y=\"25\" rx=\"7.5\" ry=\"7.5\" width=\"150\" height=\"15\" />\n            <rect x=\"15\" y=\"50\" rx=\"7.5\" ry=\"7.5\" width=\"150\" height=\"15\" />\n         </ContentLoader>\n      </div>\n   </div>\n);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { reset, RootState } from '../store';\nimport { HeaderLoader } from './SkeletonLoaders';\n\nconst NavBar = () => {\n   const user = useSelector((state:RootState) => state.user);\n   const { token } = useSelector((state:RootState) => state.account);\n   const [dropDownOpen, setDropDownOpen] = useState(false);\n   const ref = useRef<HTMLDivElement>(null);\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      // All to close the user dropdown on page click\n      const pageEvent = (e:MouseEvent) => {\n         if (ref.current !== null && !ref.current.contains(e.target as Node)) {\n            setDropDownOpen(false);\n         }\n      };\n\n      if (dropDownOpen) {\n         window.addEventListener('mousedown', pageEvent);\n      }\n\n      return () => {\n         window.removeEventListener('mousedown', pageEvent);\n      };\n   }, [dropDownOpen]);\n\n   const logout = () => {\n      dispatch(reset());\n      localStorage.removeItem('apiKey');\n   };\n\n   return (\n      <div className=\"px-8 text-gray-50 w-full min-h-16 bg-gray-900 flex justify-between items-center\">\n         <div className=\"flex items-center\">\n            <div className=\"relative mr-1 pt-1\">\n               <button type=\"button\" className=\"text-gray-50 hover:text-gray-300\" onClick={() => setDropDownOpen(true)}>\n                  <svg className=\"mt-1 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                     <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n               </button>\n               { dropDownOpen\n               && (\n                  <div ref={ref} className=\"origin-top-left absolute left-0 mt-2 w-72 rounded-sm shadow-lg text-gray-700 bg-gray-200 ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                     <div className=\"py-1\" role=\"none\">\n                        <p className=\"text-gray-900 text-xs px-4 pt-2\">Token</p>\n                        <p className=\"text-xs px-4 pt-1\">{ token }</p>\n                        <button type=\"button\" className=\"block w-full text-left px-4 py-2 mt-2 text-sm hover:bg-gray-300 hover:text-gray-900\" role=\"menuitem\" onClick={logout}>\n                           Log out\n                        </button>\n                     </div>\n                  </div>\n               )}\n            </div>\n            {user.username === undefined\n               ? <HeaderLoader />\n               : (\n                  <React.Fragment>\n                     <h1><NavLink to=\"/\" className=\"text-xl hover:text-yellow-600\">{user.username}</NavLink></h1>\n                     <span className=\"text-xs text-gray-400 ml-4\">{ user.ships.length } ship{ user.ships.length === 1 ? '' : 's'}</span>\n                     <span className=\"text-xs text-gray-400 ml-4\">{ user.credits.toLocaleString() } credits</span>\n                  </React.Fragment>\n               )}\n         </div>\n         <div className=\"flex flex-row divide-x divide-gray-600\">\n            <NavLink to=\"/ships\" title=\"ships\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"currentColor\" strokeWidth={1.3} viewBox=\"0 0 512.001 512.001\">\n                  <path d=\"m226 182.707h60v30h-60z\" />\n                  <path d=\"m482 340.339-95.167-73.476c-25.568-19.74-40.833-50.809-40.833-83.112v-46.044c0-28.454-8.007-56.148-23.156-80.091-14.729-23.279-35.535-42.055-60.168-54.298l-6.676-3.318-6.676 3.318c-24.632 12.243-45.438 31.019-60.168 54.298-15.148 23.943-23.156 51.637-23.156 80.091v46.044c0 32.303-15.265 63.372-40.833 83.112l-95.167 73.476v111.662h106v60h240v-60h106zm-226-306.578c32.849 18.929 54.461 51.693 59.067 88.946h-118.133c4.605-37.254 26.217-70.018 59.066-88.946zm-60 118.946h120v269.294h-120zm90 299.294v30h-60v-30zm-226-96.924 83.5-64.468c8.403-6.488 15.934-13.932 22.5-22.106v153.498h-106zm106 96.924h30v30h-30zm180 30h-30v-30h30zm106-60h-106v-153.498c6.565 8.174 14.096 15.618 22.499 22.106l83.501 64.468z\" />\n               </svg>\n               <p>Shipyard</p>\n            </NavLink>\n            <NavLink to=\"/money\" title=\"loans\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n               </svg>\n               <p>Money Manager</p>\n            </NavLink>\n            <NavLink to=\"/markets\" title=\"Markets\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\n               </svg>\n               <p>Markets</p>\n            </NavLink>\n            <NavLink to=\"/systems\" title=\"locations\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" />\n               </svg>\n               <p>Locations</p>\n            </NavLink>\n         </div>\n      </div>\n   );\n};\n\nexport default NavBar;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"api.worker.js\");\n}\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-webpack-loader-syntax */\n/* eslint-disable react/prop-types */\nimport { Remote, wrap } from 'comlink';\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Api from 'worker-loader?filename=api.worker.js!./Api/api.worker';\nimport { Api as ApiClass, ApiType } from './Api/api.worker';\nimport { setToken } from './store';\n\ninterface Token {\n   username: string,\n   token: string\n}\n\n/** Big thanks to Redmega on Discord for coming up with 99% of this */\n\nexport const WorkerContext = createContext<[Remote<ApiClass>]>(undefined as unknown as [Remote<ApiClass>]);\n\nexport const WorkerProvider: React.FunctionComponent = function WorkerProvider({ children }) {\n   const [worker, setWorker] = useState<[Remote<ApiClass>]>();\n   const dispatch = useDispatch();\n   const apiKey = localStorage.getItem('apiKey') ? JSON.parse(localStorage.getItem('apiKey') as string) as Token : null;\n\n   // all your setup with async ref, etc.\n   useEffect(() => {\n      const ApiWorker = wrap<ApiType>(new Api());\n\n      if (apiKey) {\n         dispatch(setToken(apiKey));\n         (new ApiWorker(apiKey.username, apiKey.token)).then((api) => {\n            setWorker([api]);\n         });\n      } else {\n         (new ApiWorker().then((api) => {\n            setWorker([api]);\n         }));\n      }\n   }, []);\n\n   // We ensure worker is instantiated before rendering the rest of the dom tree\n   return <WorkerContext.Provider value={worker as [Remote<ApiClass>]}>{!!worker && children}</WorkerContext.Provider>;\n};\n","import React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setToken, setUser } from '../store';\nimport { WorkerContext } from '../WorkerContext';\n\nconst GetApiKey = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const [userName, setUserName] = useState('');\n   const [userToken, setUserToken] = useState('');\n   const [formValid, setFormValid] = useState(false);\n   const [signIn, setSignIn] = useState(false);\n   const [error, setError] = useState('');\n   const dispatch = useDispatch();\n   const [disabled, setDisabled] = useState(false);\n\n   const getApiKey = async (e: React.FormEvent) => {\n      setDisabled(true);\n      e.preventDefault();\n      if (formValid) {\n         try {\n            const token = await apiWorker.getToken(userName);\n            localStorage.setItem('apiKey', JSON.stringify({ username: token.user.username, token: token.token }));\n            dispatch(setToken({ username: token.user.username, token: token.token }));\n            await apiWorker.setCredentials(userName, token.token);\n            const user = await apiWorker.getUser();\n            dispatch(setUser(user));\n         } catch (err:unknown) {\n            setDisabled(false);\n            setError((err as Error).message);\n         }\n      }\n   };\n\n   const Login = async (e: React.FormEvent) => {\n      setDisabled(true);\n      e.preventDefault();\n      if (formValid) {\n         try {\n            await apiWorker.setCredentials(userName, userToken);\n\n            // Validate the user/token\n            const user = await apiWorker.getUser();\n\n            localStorage.setItem('apiKey', JSON.stringify({ username: userName, token: userToken }));\n            dispatch(setToken({ username: userName, token: userToken }));\n            dispatch(setUser(user));\n         } catch (err:unknown) {\n            setDisabled(false);\n            setError((err as Error).message);\n         }\n      }\n   };\n\n   const validate = () => {\n      const valid = document.querySelector('form')?.checkValidity() as boolean;\n      setFormValid(valid);\n   };\n\n   return (\n      <div className=\"bg-gray-800 text-gray-200 w-full h-full flex flex-col items-center justify-center\">\n         <h1 className=\"text-4xl\">Welcome to Vocivos!</h1>\n         <h2 className=\"mb-6\">A SpaceTraders API interface</h2>\n         { error\n            && <p className=\"bg-red-300 text-red-800 px-4 py-3 mb-4\">{ error }</p>}\n         <div className=\"flex items-left flex-col\">\n            { signIn\n               ? (\n                  <div className=\"border border-gray-700 rounded p-7 px-10 shadow-lg bg-gray-900\">\n                     <form className=\"mt-2\">\n                        <div>\n                           <input type=\"text\" placeholder=\"Username\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserName(e.target.value); validate(); }} required />\n                        </div>\n                        <div className=\"mt-3\">\n                           <input type=\"text\" placeholder=\"Token\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserToken(e.target.value); validate(); }} />\n                        </div>\n                        <div className=\"mt-3\">\n                           <button type=\"submit\" className=\"py-2 px-2 w-full text-white bg-green-600 rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-default disabled:bg-green-600\" disabled={disabled} onClick={Login}>Login</button>\n                        </div>\n                     </form>\n                     <p className=\"text-sm mt-4 text-center\">Need an account? <button type=\"button\" className=\"text-yellow-500 hover:text-yellow-400\" onClick={() => setSignIn(false)}>Register</button></p>\n                  </div>\n               )\n               : (\n                  <div className=\"border border-gray-700 rounded p-7 px-10 shadow-lg bg-gray-900\">\n                     <form className=\"mt-2\">\n                        <input type=\"text\" placeholder=\"Username\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserName(e.target.value); validate(); }} required />\n                        <div className=\"mt-3\">\n                           <button type=\"submit\" className=\"py-2 px-2 w-full text-white bg-green-600 rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-default disabled:bg-green-600\" disabled={disabled} onClick={getApiKey}>Sign Up</button>\n                        </div>\n                     </form>\n                     <p className=\"text-sm mt-4 text-center\">Already have an account? <button type=\"button\" className=\"text-yellow-500 hover:text-yellow-400\" onClick={() => setSignIn(true)}>Sign in</button></p>\n                  </div>\n               )}\n         </div>\n      </div>\n   );\n};\n\nexport default GetApiKey;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Marketplace, OwnedShip } from '../../Api/types';\nimport { RootState, setCredits, updateShip } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Buy = ({ handleClose, show, ship }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [marketData, setMarketData] = useState<Marketplace[]>();\n   const [selectedMarket, setSelectedMarket] = useState<Marketplace>();\n   const [purchaseQuantity, setPurchaseQuantity] = useState<number>(0);\n   const [working, setWorking] = useState<boolean>(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getMarket = async () => {\n         if (!ship.location) { return; }\n         const data = (await apiWorker.getMarket(ship.location)).location.marketplace;\n         // sort market data alphabetically by symbol\n         setMarketData([...data].sort(((a, b) => ((a.symbol > b.symbol) ? 1 : (b.symbol > a.symbol) ? -1 : 0))));\n      };\n      getMarket();\n   }, []);\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const maxQuantity = (): number => {\n      if (!selectedMarket) { return 0; }\n\n      const maxCargo = Math.floor(ship.spaceAvailable / selectedMarket.volumePerUnit);\n\n      if (maxCargo * selectedMarket.purchasePricePerUnit < credits && maxCargo <= selectedMarket.quantityAvailable && maxCargo <= 300) {\n         return maxCargo;\n      } if (maxCargo > selectedMarket.quantityAvailable && selectedMarket.quantityAvailable <= 300) {\n         return selectedMarket.quantityAvailable;\n      } if (Math.floor(credits / selectedMarket.purchasePricePerUnit) > 300) {\n         return 300;\n      }\n\n      return Math.floor(credits / selectedMarket.purchasePricePerUnit);\n   };\n\n   const purchaseMarket = async () => {\n      if (!selectedMarket) { return; }\n      try {\n         setWorking(true);\n         const result = await apiWorker.purchaseOrder(ship.id, selectedMarket.symbol, purchaseQuantity);\n         dispatch(setCredits(result.credits));\n         dispatch(updateShip(result.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err:unknown) {\n         setError((err as Error).message);\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { setSelectedMarket(undefined); handleClose(); }} />\n         <div className=\"modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Market Buy</h3>\n               { error\n                  && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!marketData\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {marketData?.map((market) => (\n                              <div className={`py-3 flex justify-between items-center bg-gray-100 w-full ${selectedMarket ? 'absolute' : ''} ${selectedMarket?.symbol === market.symbol ? 'z-10' : ''}`} key={market.symbol + market.quantityAvailable + market.pricePerUnit + market.volumePerUnit}>\n                                 <div>\n                                    <p className=\"font-semibold\">{ formatString(market.symbol) } <span className=\"ml-3 text-sm text-gray-500 font-normal\">{ market.quantityAvailable.toLocaleString() } units available</span></p>\n                                    <p className=\"text-sm\">{ (market.purchasePricePerUnit).toLocaleString() } credit{ (market.purchasePricePerUnit) > 1 ? 's' : ''} per unit</p>\n                                 </div>\n                                 { !selectedMarket\n                                    && (\n                                       <div>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm bg-blue-500 text-white px-4 py-1 rounded mr-3 hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             onClick={() => setSelectedMarket(market)}\n                                             disabled={market.quantityAvailable <= 0}\n                                          >Buy\n                                          </button>\n                                       </div>\n                                    )}\n                              </div>\n                           ))}\n                        </div>\n                     )}\n                  { selectedMarket\n                        && (\n                           <div className=\"absolute top-20 w-full text-center\">\n                              <div className=\"flex\">\n                                 <input type=\"number\" min={0} max={maxQuantity()} value={purchaseQuantity} placeholder=\"Quantity\" className=\"flex-grow px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none\" onChange={(e) => setPurchaseQuantity(parseInt(e.target.value, 10))} />\n                                 <button type=\"button\" className=\"ml-2 bg-blue-400 text-gray-100 px-3 py-2 rounded hover:bg-blue-500\" onClick={() => setPurchaseQuantity(maxQuantity)}>Max</button>\n                              </div>\n                              <button\n                                 type=\"button\"\n                                 className=\"mt-2 w-full px-3 py-2 bg-green-400 text-white rounded hover:bg-green-500 disabled:opacity-50 disabled:bg-green-400 disabled:cursor-default\"\n                                 disabled={(purchaseQuantity * selectedMarket.purchasePricePerUnit <= 0) || ((purchaseQuantity * selectedMarket.purchasePricePerUnit > credits) || (working))}\n                                 onClick={purchaseMarket}\n                              >\n                                 <span className={working ? 'hidden' : 'inline'}>Purchase for { (purchaseQuantity * selectedMarket.purchasePricePerUnit).toLocaleString() } credit{ purchaseQuantity * selectedMarket.purchasePricePerUnit > 1 ? 's' : ''}</span>\n                                 <span className={!working ? 'hidden' : 'inline'}>Please wait...</span>\n                              </button>\n                              <button type=\"button\" className=\"text-red-400 mt-3 hover:text-red-500\" onClick={() => { setSelectedMarket(undefined); setError(''); setPurchaseQuantity(0); }}>Back</button>\n                           </div>\n                        )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Buy;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n   Cargo, LocationType, Marketplace, OwnedShip,\n} from '../../Api/types';\nimport { RootState, setCredits, updateShip } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Sell = ({ handleClose, show, ship }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { systems } = useSelector((state:RootState) => state);\n   const dispatch = useDispatch();\n   const [marketData, setMarketData] = useState<Marketplace[]>();\n   const [selectedMarket, setSelectedMarket] = useState<Cargo>();\n   const [sellQuantity, setSellQuantity] = useState<number>(0);\n   const [working, setWorking] = useState<boolean>(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getMarket = async () => {\n         if (!ship.location) { return; }\n         try {\n            const data = (await apiWorker.getMarket(ship.location)).location.marketplace;\n            setMarketData(data);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n      getMarket();\n   }, []);\n\n   const maxQuantity = (): number => {\n      if (!selectedMarket) { return 0; }\n\n      if (selectedMarket.quantity <= 300) {\n         return selectedMarket.quantity;\n      }\n\n      return 300;\n   };\n\n   const sellMarket = async () => {\n      try {\n         if (!selectedMarket) { return; }\n         setWorking(true);\n         const result = await apiWorker.sellOrder(ship.id, selectedMarket.good, sellQuantity);\n         dispatch(setCredits(result.credits));\n         dispatch(updateShip(result.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const deleteMarket = async () => {\n      try {\n         if (!selectedMarket) { return; }\n         setWorking(true);\n         const result = await apiWorker.deleteOrder(ship.id, selectedMarket.good, sellQuantity);\n         const shipInfo = await apiWorker.shipInfo(ship.id);\n         dispatch(updateShip(shipInfo.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err: unknown) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const depositGoods = async () => {\n      try {\n         if (!selectedMarket || !ship.location) { return; }\n         setWorking(true);\n         const result = await apiWorker.depositGoods(ship.location, ship.id, selectedMarket.good, sellQuantity);\n         const shipInfo = await apiWorker.shipInfo(ship.id);\n         dispatch(updateShip(shipInfo.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err: unknown) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const sellPrice = () => {\n      if (selectedMarket && (marketData?.find((x) => x.symbol === selectedMarket.good))) {\n         const good = marketData?.find((x) => x.symbol === selectedMarket.good) as Marketplace;\n         return (sellQuantity * good.sellPricePerUnit).toLocaleString();\n      }\n      return null;\n   };\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { setSelectedMarket(undefined); handleClose(); }} />\n         <div className={`modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto ${selectedMarket ? 'min-h-1/3' : ''}`}>\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Your Cargo</h3>\n               { error\n                  && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!marketData\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {ship.cargo?.map((cargo) => (\n                              <div className={`py-3 flex justify-between items-center bg-gray-100 w-full ${selectedMarket ? 'absolute' : ''} ${selectedMarket?.good === cargo.good ? 'z-10' : ''}`} key={cargo.good + cargo.quantity + cargo.totalVolume}>\n                                 <div>\n                                    <p className=\"font-semibold\">{ formatString(cargo.good) } <span className=\"ml-3 text-sm text-gray-500 font-normal\">{ cargo.quantity.toLocaleString() } units available</span></p>\n                                    { marketData?.some((x) => x.symbol === cargo.good)\n                                       && <p className=\"text-sm\">{ sellPrice() } credits per unit</p>}\n                                 </div>\n                                 { !selectedMarket\n                                    && (\n                                       <div>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm bg-blue-500 text-white px-4 py-1 rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             // disabled={!marketData?.some((x) => x.symbol === cargo.good)}\n                                             onClick={() => setSelectedMarket(cargo)}\n                                          >Manage\n                                          </button>\n                                       </div>\n                                    )}\n                              </div>\n                           ))}\n                        </div>\n                     )}\n                  { selectedMarket\n                        && (\n                           <div className=\"absolute top-20 w-full text-center\">\n                              <input type=\"number\" min={0} max={selectedMarket.quantity} value={sellQuantity} placeholder=\"Quantity\" className=\"w-full flex-grow px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none\" onChange={(e) => setSellQuantity(parseInt(e.target.value, 10))} />\n                              <button type=\"button\" className=\"text-sm block text-blue-500 hover:text-blue-600\" onClick={() => setSellQuantity(maxQuantity)}>Set Max Available</button>\n                              <div>\n                                 { !working\n                                    ? (\n                                       <React.Fragment>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm mt-2 mr-3 px-3 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50 disabled:bg-red-500 disabled:cursor-default\"\n                                             disabled={(sellQuantity <= 0) || working}\n                                             onClick={deleteMarket}\n                                          >\n                                             Delete { sellQuantity } units\n                                          </button>\n                                          { systems.find((system) => system.symbol === ship.location?.split('-')[0])?.locations.some((location) => ship.location === location.symbol && location.type === LocationType.Wormhole)\n                                             ? (\n                                                <button\n                                                   type=\"button\"\n                                                   className=\"text-sm mt-2 mr-3 px-3 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 disabled:opacity-50 disabled:bg-purple-500 disabled:cursor-default\"\n                                                   disabled={(sellQuantity <= 0) || working}\n                                                   onClick={depositGoods}\n                                                >\n                                                   Donate { sellQuantity } units\n                                                </button>\n                                             ) : null}\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm mt-2 px-3 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50 disabled:bg-green-500 disabled:cursor-default\"\n                                             disabled={(sellQuantity <= 0) || working || (!sellPrice())}\n                                             onClick={sellMarket}\n                                          >\n                                             { sellPrice() !== null\n                                                ? <span className={working ? 'hidden' : 'inline'}>Sell for { sellPrice() } credits</span>\n                                                : <span>Unable to sell</span>}\n                                          </button>\n                                       </React.Fragment>\n                                    )\n                                    : (\n                                       <p>Please wait...</p>\n                                    )}\n                              </div>\n                              <button type=\"button\" className=\"flex items-center text-sm text-red-400 mt-3 hover:text-red-500\" onClick={() => { setSelectedMarket(undefined); setError(''); setSellQuantity(0); }}>\n                                 <svg className=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                    <path fillRule=\"evenodd\" d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                                 </svg>\n                                 Back\n                              </button>\n                           </div>\n                        )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Sell;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n   OwnedShip, Location, LocationType, CargoType, FlightPlan,\n} from '../../Api/types';\nimport {\n   addFlightPlan, setCredits, updateShip, updateShips,\n} from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   shipError: (message:string) => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Travel = ({\n   handleClose, shipError, show, ship,\n}: Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const dispatch = useDispatch();\n   const [locations, setLocations] = useState<Location[]>();\n   const [error, setError] = useState<string>('');\n   const [autoBuyFuel, setAutoBuyFuel] = useState(true);\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getLocations = async () => {\n         if (!ship.location) { return; }\n         try {\n            const loc = (await apiWorker.getLocations(ship.location.split('-')[0])).locations;\n            setLocations(loc);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n      getLocations();\n   }, []);\n\n   const createFlightPlan = async (type: LocationType, location: string, retry = true) => {\n      try {\n         let result: FlightPlan;\n         if (type === LocationType.Wormhole && ship.location === location) {\n            result = (await apiWorker.warpJump(ship.id)).flightPlan;\n         } else {\n            result = (await apiWorker.createFlightPlan(ship.id, location)).flightPlan;\n         }\n         dispatch(addFlightPlan(result));\n         handleClose();\n      } catch (err: unknown) {\n         const { message } = err as Error;\n         // Try to automatically buy the required fuel if ship has insufficient fuel\n         if (retry && autoBuyFuel && message && message.startsWith('Ship has insufficient fuel for flight plan')) {\n            const requiredFuelString = message.match(/\\d+/);\n            if (requiredFuelString) {\n               try {\n                  const fuel = parseInt(requiredFuelString[0], 10);\n                  const result = await apiWorker.purchaseOrder(ship.id, CargoType.Fuel, fuel);\n                  dispatch(setCredits(result.credits));\n                  dispatch(updateShip(result.ship));\n                  createFlightPlan(type, location, false);\n               } catch (e: unknown) {\n                  setError((e as Error).message);\n               }\n            }\n         } else {\n            setError(message);\n            // If the ship failed a warp jump, it's destroyed so we should update the ships\n            if (type === LocationType.Wormhole) {\n               try {\n                  const { ships } = await apiWorker.ownedShips();\n                  dispatch(updateShips(ships));\n                  shipError(message);\n               } catch (e: unknown) {\n                  setError((e as Error).message);\n               }\n            }\n         }\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-3\">Set Destination</h3>\n               <div className=\"text-sm mb-4\">\n                  <label htmlFor=\"autoBuyFuel\" className=\"flex items-center cursor-pointer\">\n                     <input type=\"checkbox\" id=\"autoBuyFuel\" name=\"autoBuyFuel\" checked={autoBuyFuel} onChange={(e) => setAutoBuyFuel(e.target.checked)} />\n                     <span className=\"ml-1\">Automatically buy required fuel</span>\n                  </label>\n               </div>\n               { error\n               && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!locations\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {locations.map((location) => (\n                              <div className=\"py-2 flex justify-between items-center\" key={location.symbol + location.name}>\n                                 <div>\n                                    <p>{ location.name }</p>\n                                    <p className=\"text-sm text-gray-500\">{ location.symbol }</p>\n                                 </div>\n                                 <div>\n                                    { ship.location === location.symbol && location.type !== LocationType.Wormhole\n                                       ? <p className=\"text-sm text-gray-600 cursor-default\">Current location</p>\n                                       : (\n                                          <button\n                                             type=\"button\"\n                                             className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             onClick={() => createFlightPlan(location.type, location.symbol)}\n                                          >{ location.type === LocationType.Wormhole && ship.location === location.symbol ? 'Warp' : 'Travel' }\n                                          </button>\n                                       )}\n                                 </div>\n                              </div>\n                           ))}\n                        </div>\n                     )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Travel;\n","import React from 'react';\n\ninterface Props {\n   completed: number,\n}\n\nconst TravelProgressBar = (props: Props) => {\n   const { completed } = props;\n\n   return (\n      <div className=\"h-0.5 w-full text-right bg-gray-600\">\n         <div className=\"h-full text-right bg-green-500 max-w-full\" style={{ width: `${completed}%`, transition: 'width 0.5s ease' }}>\n            <span />\n         </div>\n      </div>\n   );\n};\n\nexport default TravelProgressBar;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n   formatDistanceToNowStrict, getUnixTime, isFuture,\n} from 'date-fns';\nimport {\n   Cargo, CargoType, OwnedShip,\n} from '../../Api/types';\nimport { RootState } from '../../store';\nimport Buy from '../Markets/Buy';\nimport Sell from '../Markets/Sell';\nimport Travel from './Travel';\nimport TravelProgressBar from './TravelProgress';\n\ninterface Props {\n   ship: OwnedShip,\n   compact?: boolean,\n   shipError?: (message:string) => void,\n}\n\nconst ShipCard = ({ ship, compact, shipError }:Props) => {\n   const systems = useSelector((state:RootState) => state.systems);\n   const flightPlan = useSelector((state:RootState) => state.flightPlans.find((x) => x.shipId === ship.id));\n   const automation = useSelector((state:RootState) => state.automateAll);\n   const [showBuyModal, setBuyModalShow] = useState(false);\n   const [showSellModal, setSellModalShow] = useState(false);\n   const [showTravelModal, setTravelModalShow] = useState(false);\n   const [remainingTime, setRemainingTime] = useState<string>();\n   const [time, setTime] = useState<number>(Date.now());\n\n   useEffect(() => {\n      const interval = setInterval(() => setTime(Date.now()), 1000);\n\n      return () => clearInterval(interval);\n   });\n\n   useEffect(() => {\n      if (!flightPlan) { return; }\n\n      setRemainingTime(formatDistanceToNowStrict(new Date(flightPlan.arrivesAt)));\n   }, [time]);\n\n   const fuelIsEmpty = (cargo:Cargo[]) => {\n      const fuel = cargo.filter((x) => x.good === CargoType.Fuel).reduce((acc, item) => acc + item.quantity, 0);\n      return !(fuel > 0);\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const calcProgress = ():number => {\n      if (!flightPlan) { return 0; }\n\n      return (((Date.now() / 1000) - (getUnixTime(new Date(flightPlan.arrivesAt)) - flightPlan.timeRemainingInSeconds)) / flightPlan.timeRemainingInSeconds) * 100;\n   };\n\n   return (\n      <React.Fragment>\n         { showBuyModal ? <Buy show={showBuyModal} ship={ship} handleClose={() => setBuyModalShow(false)} /> : null }\n         { showSellModal ? <Sell show={showSellModal} ship={ship} handleClose={() => setSellModalShow(false)} /> : null }\n         { showTravelModal ? <Travel show={showTravelModal} ship={ship} handleClose={() => setTravelModalShow(false)} shipError={(message) => shipError && shipError(message)} /> : null }\n         { compact ? (\n            <div className=\"p-3 bg-gray-900 border border-gray-700 rounded divide-y divide-gray-500 hover:border-yellow-900 hover:shadow-xl\">\n               <div className=\"flex justify-between items-center \">\n                  <div className=\"text-left\">\n                     <h3>{ ship.type }</h3>\n                     <p className=\"text-xs text-gray-400\">{ ship.location ?? 'In transit' }</p>\n                  </div>\n                  { (flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                     ? (\n                        <div className=\"text-right\">\n                           <p className=\"text-xs text-gray-400\">In Transit</p>\n                           <p className=\"text-xs text-gray-300\">{ remainingTime ? `Arrives in ${remainingTime}` : 'ETA Unknown' }</p>\n                        </div>\n                     ) : (\n                        <div>\n                           { automation\n                              ? <p className=\"text-sm\">Automating</p>\n                              : (\n                                 <React.Fragment>\n                                    <button type=\"button\" title=\"Travel\" className=\"mr-2 w-6 h-6 bg-blue-500 rounded hover:bg-blue-600 disabled:opacity-50 disabled:bg-blue-500 disabled:cursor-default\" onClick={() => setTravelModalShow(true)} disabled={fuelIsEmpty(ship.cargo)}>\n                                       <p className=\"text-sm font-bold\">T</p>\n                                    </button>\n                                    <button type=\"button\" title=\"Buy\" className=\"mr-2 w-6 h-6 bg-green-500 rounded hover:bg-green-600\" onClick={() => setBuyModalShow(true)}>\n                                       <p className=\"text-sm font-bold\">B</p>\n                                    </button>\n                                    <button type=\"button\" title=\"Sell\" className=\"mr-2 w-6 h-6 bg-red-500 rounded hover:bg-red-600\" onClick={() => setSellModalShow(true)}>\n                                       <p className=\"text-sm font-bold\">S</p>\n                                    </button>\n                                 </React.Fragment>\n                              )}\n                        </div>\n                     )}\n               </div>\n               { (flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                  ? <div className=\"mt-2\"><TravelProgressBar completed={calcProgress()} /></div> : null}\n            </div>\n         ) : (\n            <div className=\"focus:outline-none bg-gray-900 border border-gray-700 rounded\">\n               <div className=\"flex justify-between items-center p-3 bg-gray-700 border-b border-gray-600\">\n                  <div>\n                     <h3 className=\"text-xl\">{ ship.type }</h3>\n                     <p className=\"text-xs text-gray-400\">{ ship.manufacturer }</p>\n                  </div>\n                  <div className=\"flex flex-col\">\n                     <div className=\"grid grid-cols-3 gap-2 mt-1\">\n                        <div className=\"flex items-center\">\n                           <div className=\"w-5 h-5 mr-1\">\n                              <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 358.121c0-68.38-26.629-132.667-74.98-181.02-48.353-48.352-112.64-74.98-181.02-74.98s-132.667 26.629-181.02 74.98c-48.351 48.353-74.98 112.64-74.98 181.02v15h205.016c4.085 12.323 12.371 22.642 23.657 29.305 8.558 5.052 17.953 7.453 27.236 7.453 18.406 0 36.36-9.448 46.376-26.413 1.956-3.313 3.522-6.781 4.717-10.345h204.998zm-235.548 10.093c-6.656 11.276-21.247 15.037-32.526 8.378-5.463-3.225-9.343-8.384-10.925-14.528-1.583-6.144-.679-12.535 2.547-17.998s8.385-9.343 14.528-10.925c1.976-.509 3.977-.76 5.964-.76 4.194 0 8.328 1.12 12.034 3.308 5.463 3.225 9.343 8.384 10.925 14.528 1.583 6.143.679 12.535-2.547 17.997zm31.689-25.093c-.032-.129-.057-.259-.09-.388-2.296-8.916-6.74-16.908-12.887-23.425l43.106-73.015-25.834-15.252-43.106 73.015c-8.675-2.233-17.819-2.264-26.737.032-13.903 3.581-25.58 12.362-32.879 24.726-2.674 4.53-4.636 9.344-5.882 14.307h-173.34c1.992-30.247 9.976-58.88 22.75-84.742l33.311 19.232 15-25.98-33.274-19.21c16.444-24.477 37.541-45.578 62.018-62.022l19.212 33.276 25.98-15-19.236-33.318c25.861-12.774 54.5-20.737 84.746-22.729v38.493h30v-38.493c30.246 1.992 58.885 9.955 84.746 22.729l-19.236 33.318 25.98 15 19.212-33.276c24.477 16.444 45.573 37.545 62.018 62.022l-33.274 19.21 15 25.98 33.311-19.232c12.774 25.862 20.758 54.495 22.75 84.742z\" /></svg>\n                           </div>\n                           <p>{ ship.speed }</p>\n                        </div>\n                        <div className=\"flex items-center\">\n                           <div className=\"w-4 h-4 mr-1\">\n                              <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 510.192 510.192\" viewBox=\"0 0 510.192 510.192\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m510.192 0-122.656 13.628-300.462 300.463-22.694-22.694 33.301-33.3-21.213-21.213-54.514 54.513c10.689 10.689 55.253 55.254 65.86 65.861l-87.814 87.814 65.12 65.12 87.813-87.814c10.633 10.632 55.212 55.211 65.861 65.86l54.513-54.514-21.213-21.213-33.3 33.301-22.694-22.693 300.464-300.463zm-467.766 445.072 22.693-22.694 22.695 22.695-22.694 22.693zm66.602-21.212-22.695-22.695 22.694-22.693 22.694 22.694zm358.881-314.976-293.022 293.022-22.693-22.694 252.835-252.835-21.213-21.213-252.835 252.835-22.694-22.693 293.021-293.023 74.927-8.325z\" /></g></svg>\n                           </div>\n                           <p>{ ship.weapons }</p>\n                        </div>\n                        <div className=\"flex items-center\">\n                           <div className=\"w-4 h-4 mr-1\">\n                              <svg fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                                 <g>\n                                    <path d=\"M461.144,60.883L260.312,0.633c-2.809-0.844-5.808-0.844-8.62,0L50.858,60.883c-6.345,1.903-10.69,7.743-10.69,14.367\n                                       v220.916c0,28.734,11.632,58.148,34.573,87.425c17.522,22.36,41.762,44.813,72.048,66.736\n                                       c50.877,36.828,100.975,59.42,103.083,60.363c1.95,0.873,4.039,1.31,6.129,1.31c2.089,0,4.179-0.436,6.129-1.31\n                                       c2.108-0.943,52.205-23.535,103.082-60.363c30.285-21.923,54.525-44.376,72.047-66.736c22.941-29.276,34.573-58.69,34.573-87.425\n                                       V75.25C471.833,68.626,467.489,62.786,461.144,60.883z M441.833,296.166c0,50.852-51.023,98.534-93.826,129.581\n                                       c-38.374,27.833-77.291,47.583-92.005,54.678c-14.714-7.095-53.632-26.845-92.006-54.678\n                                       c-42.804-31.047-93.828-78.729-93.828-129.581V86.41l185.833-55.75l185.832,55.75V296.166z\"\n                                    />\n                                 </g>\n                              </svg>\n                           </div>\n                           <p>{ ship.plating }</p>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"py-3 px-3 pl-2 border-b border-gray-700 relative\">\n                  {(flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                     ? (\n                        <React.Fragment>\n                           <div className=\"flex items-center justify-between\">\n                              <div className=\"flex items-center\">\n                                 <svg className=\"w-6 h-6 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                 </svg>\n                                 <p className=\"flex items-center mt-0.5\">\n                                    { systems.find((x) => x.symbol === flightPlan?.departure.split('-')[0])?.locations.find((x) => x.symbol === flightPlan?.departure)?.name }\n                                    <svg className=\"h-4 w-4 mx-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                       <path fillRule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                                    </svg>\n                                    { systems.find((x) => x.symbol === flightPlan?.destination.split('-')[0])?.locations.find((x) => x.symbol === flightPlan?.destination)?.name }\n                                 </p>\n                              </div>\n                              <span className=\"text-sm text-gray-400 mt-1\">({ remainingTime ? `Arrives in ${remainingTime}` : 'ETA Unknown' })</span>\n                           </div>\n                           { automation\n                              && (\n                                 <div className=\"relative z-10 w-full flex items-center justify-end pr-0.5 mt-2\">\n                                    <p className=\"text-xs\">Automating</p>\n                                 </div>\n                              )}\n                           <div className=\"absolute inset-0\">\n                              <div><TravelProgressBar completed={calcProgress()} /></div>\n                           </div>\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"w-full flex justify-between items-center\">\n                           <div className=\"flex items-center\">\n                              <svg className=\"h-6 w-6 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                              </svg>\n                              <p className=\"pt-0.5\">{ systems.find((x) => x.symbol === ship.location?.split('-')[0])?.locations.find((x) => x.symbol === ship.location)?.name }</p>\n                              <span className=\"ml-1 pt-1 text-sm text-gray-400\">({ ship.location })</span>\n                           </div>\n                           <div>\n                              { automation\n                                 ? null : (\n                                    <React.Fragment>\n                                       <button\n                                          type=\"button\"\n                                          className=\"text-xs mr-2 px-2 py-1 bg-blue-500 rounded hover:bg-blue-600 disabled:opacity-50 disabled:bg-blue-500 disabled:cursor-default\"\n                                          onClick={() => setTravelModalShow(true)}\n                                       >Travel\n                                       </button>\n                                    </React.Fragment>\n                                 )}\n                           </div>\n                        </div>\n                     )}\n               </div>\n               <div className=\"p-3\">\n                  <div className=\"flex items-center mb-2\">\n                     <p className=\"mr-3\">Cargo <span className=\"ml-2 text-sm text-gray-400\">{ ship.maxCargo - ship.spaceAvailable } of { ship.maxCargo }</span></p>\n                     { ship.location && !automation\n                     && (\n                        <React.Fragment>\n                           <button type=\"button\" className=\"text-xs mr-2 px-2 py-1 bg-green-500 rounded hover:bg-green-600\" onClick={() => setBuyModalShow(true)}>Buy</button>\n                           <button type=\"button\" className=\"text-xs px-2 py-1 bg-red-500 rounded hover:bg-red-600\" onClick={() => setSellModalShow(true)}>Sell</button>\n                        </React.Fragment>\n                     )}\n                  </div>\n                  <div className=\"pl-3\">\n                     { ship.cargo.slice().sort((a, b) => ((a.good > b.good) ? 1 : (b.good > a.good) ? -1 : 0)).map((cargo) => (\n                        <p className=\"text-sm py-0.5\" key={cargo.good + cargo.quantity + cargo.totalVolume + ship.id}>{ formatString(cargo.good) } ({ cargo.quantity } units)</p>\n                     ))}\n                  </div>\n               </div>\n            </div>\n         )}\n      </React.Fragment>\n   );\n};\n\nShipCard.defaultProps = {\n   compact: false,\n   shipError: '',\n};\n\nexport default ShipCard;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-webpack-loader-syntax */\nimport React, {\n   Suspense, useContext, useEffect, useState,\n} from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Comlink from 'comlink';\nimport AutomationWorker from 'worker-loader?filename=automation.worker.js!./automation';\nimport Timer from 'easytimer.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { AutomationType, Automation } from './automation';\nimport store, {\n   addFlightPlan, removeFlightPlan, reset, RootState, setAllAutomationState, setCredits,\n   setSystems,\n   setUser, StoredMarket, updateGoodPriceAfterBuy, updateGoodPriceAfterSell, updateMarketData, updateShip,\n} from './store';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SignIn from './components/SignIn';\nimport Profile from './components/Profile';\nimport Ships from './components/Ships/Ships';\nimport Systems from './components/Systems/Systems';\nimport Location from './components/Systems/Location';\nimport Loans from './components/Money/Money';\nimport { CargoType, FlightPlan, Purchase } from './Api/types';\nimport Markets from './components/Markets/Markets';\nimport { AutoAction } from './components/Automation/Models';\nimport { WorkerContext } from './WorkerContext';\nimport Structures from './components/Systems/Structures';\n\nexport interface WorkerDataUpdate {\n   type: AutoAction.Travel | AutoAction.AddFlightPlan | AutoAction.RemoveFlightPlan | AutoAction.Buy | AutoAction.Sell,\n   data: FlightPlan | Purchase,\n}\n\nexport interface WorkerError {\n   shipId: string,\n   error: string | null,\n}\n\nenum AutomationWorkerApiAction {\n   Buy,\n   Sell,\n   CreateFlightPlan,\n   MarketData,\n}\n\nfunction App() {\n   // const store = useSelector((state:RootState) => state);\n   const {\n      account, user, automateAll, marketData, flightPlans, systems,\n   } = useSelector((state:RootState) => state);\n   const [automationWorker, setAutomationWorker] = useState<[Comlink.Remote<Automation>]>();\n   const dispatch = useDispatch();\n   const [apiWorker] = useContext(WorkerContext);\n\n   useEffect(() => {\n      const FetchAccount = async () => {\n         try {\n            const result = await apiWorker.getUser();\n            dispatch(setUser(result));\n\n            // only needed because the ships property on the user response does not contain the 'flightPlanId' property\n            if (result.user.ships.some((x) => x.location === undefined)) {\n               const { ships } = await apiWorker.ownedShips();\n\n               ships.forEach(async (ship) => {\n                  if (ship.flightPlanId) {\n                     const { flightPlan } = await apiWorker.queryFlightPlan(ship.flightPlanId);\n                     if (flightPlan.terminatedAt === null) {\n                        dispatch(addFlightPlan(flightPlan));\n                     }\n                  }\n               });\n            }\n\n            const getSystems = async () => {\n               const temp = (await apiWorker.systemsInfo()).systems;\n               dispatch((setSystems(temp)));\n            };\n            getSystems();\n\n            // Update market data stored in local storage\n            const marketDataStore = localStorage.getItem('marketData');\n            const loadedMarketData = marketDataStore !== null ? JSON.parse(marketDataStore) as StoredMarket[] : null;\n            loadedMarketData?.map((data) => (\n               dispatch(updateMarketData(data))\n            ));\n         } catch (err: unknown) {\n            if ((err as Error).message === 'Invalid username or token.') {\n               dispatch(reset());\n               localStorage.removeItem('apiKey');\n            }\n         }\n      };\n\n      if (account.username && account.token) {\n         FetchAccount();\n      }\n   }, []);\n\n   const webworkerError = (data:string) => {\n      console.log(data);\n      toast.error(data, {\n         position: 'bottom-right',\n         autoClose: false,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: 0,\n      });\n      dispatch(setAllAutomationState(false));\n   };\n\n   const automationWorkerMakeApiCall = async (action: AutomationWorkerApiAction, data: { shipId?: string, good?: CargoType, quantity?: number, to?: string, location?: string }) => {\n      switch (action) {\n         case AutomationWorkerApiAction.Buy: {\n            const order = await apiWorker.purchaseOrder(data.shipId as string, data.good as CargoType, data.quantity as number);\n            dispatch(setCredits(order.credits));\n            dispatch(updateShip(order.ship));\n            dispatch(updateGoodPriceAfterBuy(order));\n            return order;\n         }\n         case AutomationWorkerApiAction.Sell: {\n            const order = await apiWorker.sellOrder(data.shipId as string, data.good as CargoType, data.quantity as number);\n            dispatch(setCredits(order.credits));\n            dispatch(updateShip(order.ship));\n            dispatch(updateGoodPriceAfterSell(order));\n            return order;\n         }\n         case AutomationWorkerApiAction.CreateFlightPlan: {\n            const flightPlan = await apiWorker.createFlightPlan(data.shipId as string, data.to as string);\n            dispatch(addFlightPlan(flightPlan.flightPlan));\n            const timer = new Timer();\n            timer.start({ precision: 'seconds', target: { seconds: flightPlan.flightPlan.timeRemainingInSeconds } });\n            timer.addEventListener('targetAchieved', () => {\n               dispatch(removeFlightPlan(flightPlan.flightPlan));\n            });\n            return flightPlan;\n         }\n         case AutomationWorkerApiAction.MarketData: {\n            const market = await apiWorker.getMarket(data.location as string);\n            dispatch(updateMarketData({ updatedAt: Date.now(), planet: market.location }));\n            return market;\n         }\n         default:\n            return null;\n      }\n   };\n\n   const automationGetStore = async () => (store.getState());\n\n   useEffect(() => {\n      if (automationWorker) {\n         automationWorker[0].updateState(store.getState());\n      }\n   }, [user.ships.length, flightPlans]);\n\n   useEffect(() => {\n      const createWorker = async () => {\n         const AutoWorker = Comlink.wrap<AutomationType>(new AutomationWorker());\n         const instance = await new AutoWorker(Comlink.proxy(automationGetStore), Comlink.proxy(automationWorkerMakeApiCall), Comlink.proxy(webworkerError));\n         // set state doesn't work here with just a comlink object. needs to be in an array.\n         setAutomationWorker([instance]);\n      };\n\n      if (!automationWorker) {\n         createWorker();\n      }\n\n      if (!automationWorker) { return; }\n\n      if (automateAll) {\n         automationWorker[0].start();\n      } else {\n         automationWorker[0]?.stop();\n      }\n   }, [automateAll]);\n\n   return (\n      <React.Fragment>\n         { (account.token === undefined || account.token === null || account.token.length === 0\n            || account.username === undefined || account.username === null || account.username.length === 0) ? <SignIn /> : (\n               <React.Fragment>\n                  <NavBar />\n                  <ToastContainer />\n                  <div className=\"bg-gray-800 py-4 flex-grow text-gray-200\">\n                     <div className=\"container min-h-full mx-auto\">\n                        <Switch>\n                           <Route exact path=\"/\" component={Profile} />\n                           <Route path=\"/ships\" component={Ships} />\n                           <Route path=\"/money\" component={Loans} />\n                           <Route path=\"/markets\" component={Markets} />\n                           <Route path=\"/structures\" component={Structures} />\n                           <Route path=\"/systems/:location\" component={Location} />\n                           <Suspense fallback={<div />}>\n                              <Route exact path=\"/systems\" component={Systems} />\n                           </Suspense>\n                        </Switch>\n                     </div>\n                  </div>\n               </React.Fragment>\n            )}\n      </React.Fragment>\n   );\n}\n\nexport default App;\n","import { formatDistanceToNow } from 'date-fns';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { LoanStatus } from '../Api/types';\nimport { RootState } from '../store';\nimport ShipCard from './Ships/ShipCard';\nimport { ProfileLoader } from './SkeletonLoaders';\n\nconst Profile = () => {\n   const { username, loans, ships } = useSelector((state:RootState) => state.user);\n   const { systems } = useSelector((state:RootState) => state);\n\n   return (\n      <React.Fragment>\n         {username === undefined\n            ? (\n               <React.Fragment>\n                  <ProfileLoader />\n               </React.Fragment>\n            )\n            : (\n               <React.Fragment>\n                  <p className=\"text-gray-400\">Welcome</p>\n                  <h2 className=\"text-3xl mb-4\">{ username }</h2>\n                  <div>\n                     <h3 className=\"text-xl mb-4\">Messages</h3>\n                     { systems.map((system) => system.locations.map((location) => (location.messages && location.messages.length > 0\n                        ? (\n                           <div className=\"text-sm p-4 bg-blue-800 text-blue-200 rounded-sm\" key={location.symbol}>\n                              <p>{ [...location.messages].slice(0, -2).join(' ') }</p>\n                              <Link to={`/systems/${location.symbol}`} className=\"underline text-xs mt-1 block\">View</Link>\n                           </div>\n                        )\n                        : null)))}\n                  </div>\n                  <div className=\"my-4 min-h-1/4\">\n                     <h3 className=\"text-xl mb-4\">Loans</h3>\n                     <div className=\"pl-5\">\n                        { loans.filter((x) => x.status === LoanStatus.Current).length === 0\n                           ? (\n                              <div>\n                                 <p>You have no loans!</p>\n                                 <Link to=\"/loans/available\" className=\"text-sm text-yellow-700 hover:text-blue-600\">Get a loan</Link>\n                              </div>\n                           )\n                           : (\n                              <div>\n                                 { loans.filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                                    <p key={loan.id}>{ loan.repaymentAmount.toLocaleString() } credits due { formatDistanceToNow(new Date(loan.due), { addSuffix: true }) }</p>\n                                 ))}\n                              </div>\n                           )}\n                     </div>\n                  </div>\n                  <div className=\"mb-4 min-h-1/4\">\n                     <h3 className=\"text-xl mb-4\">Ships</h3>\n                     <div className=\"pl-5 grid grid-cols-5 gap-3\">\n                        { ships.length === 0\n                           ? (\n                              <div>\n                                 <p>You have no ships :(</p>\n                                 <Link to=\"/ships/available\" className=\"text-sm text-yellow-700 hover:text-blue-600\">Buy a ship</Link>\n                              </div>\n                           )\n                           : (\n                              [...ships].sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0)).map((ship) => (\n                                 <ShipCard ship={ship} compact key={ship.id} />\n                              ))\n                           )}\n                     </div>\n                  </div>\n               </React.Fragment>\n            )}\n      </React.Fragment>\n   );\n};\n\nexport default Profile;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { PurchaseLocation, Ship } from '../../Api/types';\nimport { addShip, RootState, setCredits } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: Ship | undefined\n}\n\nconst PurchaseShipModal = ({ handleClose, show, ship }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const history = useHistory();\n   const [loading, setLoading] = useState(false);\n\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900' : 'hidden';\n\n   const purchaseShip = async (location:string) => {\n      if (!ship) { return; }\n\n      try {\n         setLoading(true);\n         const result = await apiWorker.buyShip(location, ship?.type);\n         dispatch(setCredits(result.credits));\n         dispatch(addShip(result.ship));\n         handleClose;\n         history.push('/ships');\n      } catch (err: unknown) {\n         toast.error((err as Error).message, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      }\n   };\n\n   const renderButtons = (location: PurchaseLocation) => {\n      if (loading) {\n         return <div />;\n      }\n\n      if (credits > location.price) {\n         return <button type=\"button\" className=\"px-5 py-1 bg-green-500 rounded text-white hover:bg-green-400\" onClick={() => purchaseShip(location.location)}>Buy</button>;\n      }\n\n      return <span className=\"text-xs text-yellow-500\">Insufficient credits</span>;\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Purchase { ship?.type }</h3>\n               <p className=\"text-sm mb-5\">This ship is available in { ship?.purchaseLocations.length } { ship?.purchaseLocations && ship.purchaseLocations.length > 1 ? 'locations' : 'location' }:</p>\n               <ul>\n                  {ship?.purchaseLocations.map((location) => (\n                     <li className=\"flex justify-between items-center my-3\" key={location.location + location.price}>\n                        <span>{ location.location } for { location.price.toLocaleString() } credits </span>\n                        { renderButtons(location) }\n                     </li>\n                  ))}\n               </ul>\n               <div className=\"flex justify-end pt-2\">\n                  { !loading\n                     ? (<button type=\"button\" className=\"px-4 py-1 text-red-500 text-sm border border-red-500 rounded hover:text-red-400 hover:border-red-400\" onClick={handleClose}>Close</button>\n                     ) : <p className=\"text-sm text-yellow-500 italic\">Please Wait...</p>}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PurchaseShipModal;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Ship } from '../../Api/types';\nimport { RootState } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { CardLoader } from '../SkeletonLoaders';\nimport PurchaseShipModal from './PurchaseShipModal';\n\nconst Available = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const user = useSelector((state:RootState) => state);\n   const [ships, setShips] = useState<Ship[]>();\n   const [sortOrder, setOrder] = useState(false);\n   const [sortType, setSortType] = useState('class');\n   const [showModal, setModalShow] = useState(false);\n   const [selectedShip, setSelectedShip] = useState<Ship>();\n\n   const GetShips = async () => {\n      try {\n         const getShips = await apiWorker.availableShips();\n         getShips.ships.sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0));\n         setShips(getShips.ships);\n      } catch (err: unknown) {\n         toast.error((err as Error).message, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      }\n   };\n\n   const lowestPrice = (ship: Ship) => (\n      ship.purchaseLocations.reduce((prev, curr) => (prev.price < curr.price ? prev : curr)).price\n   );\n\n   useEffect(() => {\n      const sort = (value:string) => {\n         if (!ships) {\n            return;\n         }\n\n         let sorted;\n\n         switch (value) {\n            case 'cost':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.purchaseLocations[0].price > b.purchaseLocations[0].price) ? 1 : (b.purchaseLocations[0].price > a.purchaseLocations[0].price) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.purchaseLocations[0].price < b.purchaseLocations[0].price) ? 1 : (b.purchaseLocations[0].price < a.purchaseLocations[0].price) ? -1 : 0));\n               break;\n            case 'type':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.type < b.type) ? 1 : (b.type < a.type) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0));\n               break;\n            case 'manufacturer':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.manufacturer > b.manufacturer) ? 1 : (b.manufacturer > a.manufacturer) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.manufacturer < b.manufacturer) ? 1 : (b.manufacturer < a.manufacturer) ? -1 : 0));\n               break;\n            case 'maxCargo':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.maxCargo > b.maxCargo) ? 1 : (b.maxCargo > a.maxCargo) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.maxCargo < b.maxCargo) ? 1 : (b.maxCargo < a.maxCargo) ? -1 : 0));\n               break;\n            case 'speed':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.speed > b.speed) ? 1 : (b.speed > a.speed) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.speed < b.speed) ? 1 : (b.speed < a.speed) ? -1 : 0));\n               break;\n            case 'plating':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.plating > b.plating) ? 1 : (b.plating > a.plating) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.plating < b.plating) ? 1 : (b.plating < a.plating) ? -1 : 0));\n               break;\n            case 'weapons':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.weapons > b.weapons) ? 1 : (b.weapons > a.weapons) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.weapons < b.weapons) ? 1 : (b.weapons < a.weapons) ? -1 : 0));\n               break;\n            default:\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.class > b.class) ? 1 : (b.class > a.class) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.class < b.class) ? 1 : (b.class < a.class) ? -1 : 0));\n               break;\n         }\n\n         setShips(sorted);\n      };\n\n      sort(sortType);\n   }, [sortType, sortOrder]);\n\n   useEffect(() => {\n      GetShips();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <PurchaseShipModal show={showModal} ship={selectedShip} handleClose={() => setModalShow(false)} />\n         <h2 className=\"text-3xl mb-5\">Purchase Ships</h2>\n         <div className=\"flex mb-5\">\n            <button type=\"button\" className=\"cursor-pointer w-6 h-6\" onClick={() => setOrder(!sortOrder)}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#E5E7EB\" {...(sortOrder ? { transform: 'rotate(180) scale(-1,1)' } : {})} className=\"origin-center\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" /></svg>\n            </button>\n            <select name=\"sort\" id=\"sort\" className=\"appearance-none bg-gray-800 text-gray-200 cursor-pointer\" onChange={(e) => setSortType(e.target.value)}>\n               <option value=\"type\">Name</option>\n               <option value=\"manufacturer\">Manufacturer</option>\n               <option value=\"cost\">Cost</option>\n               <option value=\"maxCargo\">Max Cargo</option>\n               <option value=\"speed\">Speed</option>\n               <option value=\"plating\">Plating</option>\n               <option value=\"weapons\">Weapons</option>\n            </select>\n         </div>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !ships\n               && (\n                  <React.Fragment>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                  </React.Fragment>\n               )}\n            { ships?.map((ship) => (\n               <button type=\"button\" className=\"p-3 bg-gray-900 border border-gray-700 rounded hover:border-yellow-900 hover:shadow-xl\" key={ship.class + ship.speed + ship.manufacturer + ship.maxCargo} onClick={() => { setModalShow(true); setSelectedShip(ship); }}>\n                  <div className=\"flex justify-between items-center mb-5\">\n                     <div className=\"text-left\">\n                        <h3>{ ship.type }</h3>\n                        <p className=\"text-xs text-gray-400\">{ ship.manufacturer }</p>\n                     </div>\n                     <div className=\"text-right\">\n                        <p className=\"text-xs text-gray-400\">{ ship.purchaseLocations.length } available</p>\n                        <p className={`text-sm ${(lowestPrice(ship) > user.user.credits) ? 'text-red-400' : ''}`}>{ lowestPrice(ship).toLocaleString() } credits</p>\n                     </div>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg version=\"1.1\" fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 485.32 485.32\" enableBackground=\"new 0 0 485.32 485.32\">\n                           <g>\n                              <path d=\"m480.76,79.05c-0.6-0.2-235-78.3-235-78.3-2.1-1-4.1-1-6.2,0l-231.9,76.3c-5.8,2.4-7.2,7.4-7.2,10.3v313.3c0,5.2 3.1,9.3 7.2,10.3l229,73.2c3.5,1.3 7.3,1.8 12.1,0l228.9-73.2c4.1-2.1 7.2-6.2 7.2-10.3v-313.3c5.68434e-14-3.1-1-6.2-4.1-8.3zm-238.1-56.7l198.9,63.9-75.1,24.1-196-64.5 72.2-23.5zm-10.3,438l-211.3-67v-291.4l211.3,67.6v290.8zm10.3-310.2l-198.9-62.8 93.7-30.6 195.3,64.5-90.1,28.9zm10.3,310.2v-291.6l105.1-33.3v32.3l20.6-8.8v-30l85.5-27v290.4h0.1l-211.3,68z\" />\n                           </g>\n                        </svg>\n                     </div>\n                     <p>{ ship.maxCargo }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 358.121c0-68.38-26.629-132.667-74.98-181.02-48.353-48.352-112.64-74.98-181.02-74.98s-132.667 26.629-181.02 74.98c-48.351 48.353-74.98 112.64-74.98 181.02v15h205.016c4.085 12.323 12.371 22.642 23.657 29.305 8.558 5.052 17.953 7.453 27.236 7.453 18.406 0 36.36-9.448 46.376-26.413 1.956-3.313 3.522-6.781 4.717-10.345h204.998zm-235.548 10.093c-6.656 11.276-21.247 15.037-32.526 8.378-5.463-3.225-9.343-8.384-10.925-14.528-1.583-6.144-.679-12.535 2.547-17.998s8.385-9.343 14.528-10.925c1.976-.509 3.977-.76 5.964-.76 4.194 0 8.328 1.12 12.034 3.308 5.463 3.225 9.343 8.384 10.925 14.528 1.583 6.143.679 12.535-2.547 17.997zm31.689-25.093c-.032-.129-.057-.259-.09-.388-2.296-8.916-6.74-16.908-12.887-23.425l43.106-73.015-25.834-15.252-43.106 73.015c-8.675-2.233-17.819-2.264-26.737.032-13.903 3.581-25.58 12.362-32.879 24.726-2.674 4.53-4.636 9.344-5.882 14.307h-173.34c1.992-30.247 9.976-58.88 22.75-84.742l33.311 19.232 15-25.98-33.274-19.21c16.444-24.477 37.541-45.578 62.018-62.022l19.212 33.276 25.98-15-19.236-33.318c25.861-12.774 54.5-20.737 84.746-22.729v38.493h30v-38.493c30.246 1.992 58.885 9.955 84.746 22.729l-19.236 33.318 25.98 15 19.212-33.276c24.477 16.444 45.573 37.545 62.018 62.022l-33.274 19.21 15 25.98 33.311-19.232c12.774 25.862 20.758 54.495 22.75 84.742z\" /></svg>\n                     </div>\n                     <p>{ ship.speed }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg version=\"1.1\" fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                           <g>\n                              <path d=\"M461.144,60.883L260.312,0.633c-2.809-0.844-5.808-0.844-8.62,0L50.858,60.883c-6.345,1.903-10.69,7.743-10.69,14.367\n                                 v220.916c0,28.734,11.632,58.148,34.573,87.425c17.522,22.36,41.762,44.813,72.048,66.736\n                                 c50.877,36.828,100.975,59.42,103.083,60.363c1.95,0.873,4.039,1.31,6.129,1.31c2.089,0,4.179-0.436,6.129-1.31\n                                 c2.108-0.943,52.205-23.535,103.082-60.363c30.285-21.923,54.525-44.376,72.047-66.736c22.941-29.276,34.573-58.69,34.573-87.425\n                                 V75.25C471.833,68.626,467.489,62.786,461.144,60.883z M441.833,296.166c0,50.852-51.023,98.534-93.826,129.581\n                                 c-38.374,27.833-77.291,47.583-92.005,54.678c-14.714-7.095-53.632-26.845-92.006-54.678\n                                 c-42.804-31.047-93.828-78.729-93.828-129.581V86.41l185.833-55.75l185.832,55.75V296.166z\"\n                              />\n                           </g>\n                        </svg>\n                     </div>\n                     <p>{ ship.plating }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 510.192 510.192\" viewBox=\"0 0 510.192 510.192\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m510.192 0-122.656 13.628-300.462 300.463-22.694-22.694 33.301-33.3-21.213-21.213-54.514 54.513c10.689 10.689 55.253 55.254 65.86 65.861l-87.814 87.814 65.12 65.12 87.813-87.814c10.633 10.632 55.212 55.211 65.861 65.86l54.513-54.514-21.213-21.213-33.3 33.301-22.694-22.693 300.464-300.463zm-467.766 445.072 22.693-22.694 22.695 22.695-22.694 22.693zm66.602-21.212-22.695-22.695 22.694-22.693 22.694 22.694zm358.881-314.976-293.022 293.022-22.693-22.694 252.835-252.835-21.213-21.213-252.835 252.835-22.694-22.693 293.021-293.023 74.927-8.325z\" /></g></svg>\n                     </div>\n                     <p>{ ship.weapons }</p>\n                  </div>\n               </button>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Available;\n","import React, { useState } from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport { useSelector } from 'react-redux';\nimport { OwnedShip } from '../../Api/types';\nimport { RootState } from '../../store';\nimport ShipCard from './ShipCard';\n\ninterface Props {\n   sortOrder: boolean,\n   sortType: string,\n   system: string,\n   ships: OwnedShip[],\n   setShipError: (message:string) => void,\n}\n\nconst ShipsGroup = ({\n   sortOrder, sortType, system, ships, setShipError,\n}:Props) => {\n   const { systems } = useSelector((state:RootState) => state);\n   const [collapseHeight, setCollapseHeight] = useState<number | 'auto'>('auto');\n\n   const sortShips = (group:OwnedShip[]) => {\n      switch (sortType) {\n         case 'class':\n            return [...group].sort((a, b) => (sortOrder ? b.class.localeCompare(a.class) : a.class.localeCompare(b.class)));\n         case 'type':\n            return [...group].sort((a, b) => (sortOrder ? b.type.localeCompare(a.type) : a.type.localeCompare(b.type)));\n         case 'manufacturer':\n            return [...group].sort((a, b) => (sortOrder ? a.manufacturer.localeCompare(b.manufacturer) : b.manufacturer.localeCompare(a.manufacturer)));\n         case 'maxCargo':\n            return sortOrder ? [...group].sort((a, b) => ((a.maxCargo > b.maxCargo) ? 1 : (b.maxCargo > a.maxCargo) ? -1 : 0)) : [...group].sort((a, b) => ((a.maxCargo < b.maxCargo) ? 1 : (b.maxCargo < a.maxCargo) ? -1 : 0));\n         case 'speed':\n            return sortOrder ? [...group].sort((a, b) => ((a.speed > b.speed) ? 1 : (b.speed > a.speed) ? -1 : 0)) : [...group].sort((a, b) => ((a.speed < b.speed) ? 1 : (b.speed < a.speed) ? -1 : 0));\n         case 'plating':\n            return sortOrder ? [...group].sort((a, b) => ((a.plating > b.plating) ? 1 : (b.plating > a.plating) ? -1 : 0)) : [...group].sort((a, b) => ((a.plating < b.plating) ? 1 : (b.plating < a.plating) ? -1 : 0));\n         case 'weaponse':\n            return sortOrder ? [...group].sort((a, b) => ((a.weapons > b.weapons) ? 1 : (b.weapons > a.weapons) ? -1 : 0)) : [...group].sort((a, b) => ((a.weapons < b.weapons) ? 1 : (b.weapons < a.weapons) ? -1 : 0));\n         default:\n            return group;\n      }\n   };\n\n   const toggleCollapse = () => {\n      setCollapseHeight(collapseHeight === 0 ? 'auto' : 0);\n   };\n\n   return (\n      <div className=\"mb-10\">\n         <button type=\"button\" className=\"flex items-center border-b border-gray-600 pb-2 mb-4\" onClick={() => toggleCollapse()}>\n            <span className={`mr-2 mt-0.5 ${collapseHeight === 'auto' ? 'arrow-down' : 'arrow-up'}`} />\n            <h3 className=\"text-xl\">{ systems.find((x) => x.symbol === system)?.name } ({ ships.length })</h3>\n         </button>\n         <AnimateHeight id={`locations-${system}`} className={`locations-${system}`} duration={250} height={collapseHeight}>\n            <div className=\"grid grid-cols-4 gap-4\">\n               { sortShips(ships).map((ship) => (\n                  <ShipCard ship={ship} key={ship.id} shipError={(message) => setShipError(message)} />\n               ))}\n            </div>\n         </AnimateHeight>\n      </div>\n   );\n};\n\nexport default ShipsGroup;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { LocationType, OwnedShip } from '../../Api/types';\nimport {\n   RootState, setAllAutomationState, setCredits, updateShip,\n} from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport ShipsGroup from './ShipsGroup';\n\nexport interface shipGroups {\n   [index:string]: OwnedShip[];\n}\n\nconst Owned = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { ships } = useSelector((state:RootState) => state.user);\n   const { flightPlans, automateAll, systems } = useSelector((state:RootState) => state);\n   const [shipGroups, setShipGroups] = useState<shipGroups>();\n   const [sortOrder, setOrder] = useState(false);\n   const [sortType, setSortType] = useState('type');\n   const [shipError, setShipError] = useState('');\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      const result:shipGroups = {};\n      ships.forEach((ship) => {\n         if (!ship.location) {\n            if (ship.flightPlanId || flightPlans.some((x) => x.shipId === ship.id)) {\n               const destinationSystem = flightPlans.find((x) => x.shipId === ship.id)?.destination.split('-')[0] as string;\n               (result[destinationSystem] = result[destinationSystem] || []).push(ship);\n            } else {\n               (result.UNKNOWN = result.UNKNOWN || []).push(ship);\n            }\n         } else if (result[ship.location.split('-')[0]]) {\n            result[ship.location.split('-')[0]].push(ship);\n         } else {\n            result[ship.location.split('-')[0]] = [];\n            result[ship.location.split('-')[0]].push(ship);\n         }\n      });\n      const ordered = Object.keys(result).sort().reduce((obj:shipGroups, key) => {\n         // eslint-disable-next-line no-param-reassign\n         obj[key] = result[key];\n         return obj;\n      }, {});\n      setShipGroups(ordered);\n   }, [ships, flightPlans]);\n\n   async function setAutomation(state: boolean) {\n      dispatch(setAllAutomationState(state));\n   }\n\n   const automateDisabled = () => (\n      !automateAll\n      && ships.some((x) => systems.find((y) => y.symbol === x.location?.split('-')[0])?.locations.find((z) => z.symbol === x.location)?.type !== LocationType.Wormhole\n      && x.spaceAvailable !== x.maxCargo)\n   );\n\n   const sellAllCargo = () => {\n      ships.forEach((ship) => {\n         ship.cargo.forEach(async (cargo) => {\n            try {\n               const result = await apiWorker.sellOrder(ship.id, cargo.good, cargo.quantity);\n               dispatch(setCredits(result.credits));\n               dispatch(updateShip(result.ship));\n            } catch (err: unknown) {\n               toast.error((err as Error).message, {\n                  position: 'bottom-right',\n                  autoClose: false,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: 0,\n               });\n            }\n         });\n      });\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Ships</h2>\n         { shipError !== ''\n         && (\n            <div className=\"flex justify-between items-center text-sm py-3 px-2 bg-red-400 text-red-900 mb-5\">\n               <p>{ shipError }</p>\n               <button className=\"w-4 h-4 hover:text-red-700\" type=\"button\" onClick={() => setShipError('')}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n               </button>\n            </div>\n         )}\n         <div className=\"mb-5 flex items-center\">\n            <button\n               type=\"button\"\n               className={`text-sm cursor-pointer mr-2 p-2 rounded ${automateAll ? 'bg-red-500 hover:bg-red-600 disabled:bg-red-500' : 'bg-green-600 hover:bg-green-700 disabled:bg-green-600'} disabled:opacity-50 disabled:cursor-default`}\n               title={automateDisabled() ? 'All ships must have no cargo to begin automation' : ''}\n               onClick={() => setAutomation(!automateAll)}\n               disabled={automateDisabled()}\n            >\n               { automateAll ? 'Stop Automation' : 'Automate All' }\n            </button>\n            <button\n               type=\"button\"\n               className=\"text-sm cursor-pointer mr-2 p-2 rounded bg-blue-500 hover:bg-blue-600 disabled:bg-blue-500 disabled:opacity-50 disabled:cursor-default\"\n               onClick={() => sellAllCargo()}\n               disabled={automateAll || (!automateAll && ships.some((x) => x.flightPlanId))}\n            >\n               Sell All Cargo\n            </button>\n         </div>\n         <div className=\"flex mb-5\">\n            <button type=\"button\" className=\"cursor-pointer w-6 h-6\" onClick={() => setOrder(!sortOrder)}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#E5E7EB\" {... (sortOrder ? { transform: 'rotate(180) scale(-1,1)' } : {})} className=\"origin-center\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" /></svg>\n            </button>\n            <select name=\"sort\" id=\"sort\" className=\"appearance-none bg-gray-800 text-gray-200 cursor-pointer\" onChange={(e) => setSortType(e.target.value)}>\n               <option value=\"type\">Name</option>\n               <option value=\"manufacturer\">Manufacturer</option>\n               <option value=\"cost\">Cost</option>\n               <option value=\"maxCargo\">Max Cargo</option>\n               <option value=\"speed\">Speed</option>\n               <option value=\"plating\">Plating</option>\n               <option value=\"weapons\">Weapons</option>\n            </select>\n         </div>\n         <div>\n            { shipGroups && Object.keys(shipGroups).map((group) => (\n               <ShipsGroup key={group} system={group} ships={shipGroups[group]} sortOrder={sortOrder} sortType={sortType} setShipError={setShipError} />\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Owned;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Available from './Available';\nimport Owned from './Owned';\n\nconst Ships = () => (\n   <div>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/ships\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Owned</NavLink>\n         <NavLink exact to=\"/ships/available\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Purchase</NavLink>\n      </div>\n      <Switch>\n         <Route exact path=\"/ships\" component={Owned} />\n         <Route path=\"/ships/available\" component={Available} />\n      </Switch>\n   </div>\n);\n\nexport default Ships;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Location, LocationType } from '../../Api/types';\nimport { RootState, setSystems } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface SortedSystem {\n   symbol: string,\n   name: string,\n   locations: SortedLocation[],\n}\n\ninterface SortedLocation {\n   parent: Location,\n   satellites: Location[],\n}\n\nconst Locations = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const systems = useSelector((state:RootState) => state.systems);\n   const dispatch = useDispatch();\n   const [sortedLocations, setSortedLocations] = useState<SortedSystem[]>([]);\n\n   useEffect(() => {\n      const GetSystems = async () => {\n         if (systems.length === 0) {\n            try {\n               const temp = (await apiWorker.systemsInfo()).systems;\n               dispatch((setSystems(temp)));\n            } catch (err: unknown) {\n               toast.error((err as Error).message, {\n                  position: 'bottom-right',\n                  autoClose: false,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: 0,\n               });\n            }\n         }\n      };\n      GetSystems();\n   }, []);\n\n   useEffect(() => {\n      const sorted:SortedSystem[] = [];\n      systems.forEach((system) => {\n         const sortedSystem:SortedSystem = { symbol: system.symbol, name: system.name, locations: [] };\n         sorted.push(sortedSystem);\n         system.locations.forEach((location) => {\n            if (location.type !== LocationType.Moon) {\n               sortedSystem.locations.push({ parent: location, satellites: [] });\n            } else {\n               sortedSystem.locations.find((x) => x.parent.symbol === (`${location.symbol.split('-')[0]}-${location.symbol.split('-')[1]}`))?.satellites.push(location);\n            }\n         });\n      });\n      setSortedLocations(sorted);\n   }, [systems]);\n   return (\n      sortedLocations\n      && (\n         <React.Fragment>\n            <div className=\"grid gap-3 grid-cols-4 mt-4\">\n               { sortedLocations.map((system) => (\n                  <div key={system.symbol}>\n                     <h2 className=\"text-3xl\">{ system.name }</h2>\n                     <ul className=\"mt-3 pl-5\">\n                        {system.locations.map((location) => (\n                           <React.Fragment key={location.parent.symbol}>\n                              <li className=\"py-1 w-max\">\n                                 <Link className=\"underline hover:text-yellow-600\" to={`systems/${location.parent.symbol}`}>{ location.parent.name }</Link>\n                                 { location.parent.structures && location.parent.structures.length > 0\n                                    ? <span className=\"text-sm\"> ({location.parent.structures.length} structure{location.parent.structures.length > 1 ? 's' : ''})</span>\n                                    : ''}\n                              </li>\n                              { location.satellites.length > 0\n                              && (\n                                 <ul className=\"pl-5\">\n                                    {\n                                       location.satellites.map((satellite) => (\n                                          <li key={satellite.symbol} className=\"py-1 w-max\">\n                                             <Link className=\"underline hover:text-yellow-600\" to={`systems/${satellite.symbol}`}>{ satellite.name }</Link>\n                                             { satellite.structures && satellite.structures.length > 0\n                                                ? <span className=\"text-sm\"> ({satellite.structures.length} structure{satellite.structures.length > 1 ? 's' : ''})</span>\n                                                : ''}\n                                          </li>\n                                       ))\n                                    }\n                                 </ul>\n                              )}\n                           </React.Fragment>\n                        ))}\n                     </ul>\n                  </div>\n               ))}\n            </div>\n         </React.Fragment>\n      )\n   );\n};\n\nexport default Locations;\n","import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Locations from './Locations';\n\nconst SystemMap = () => (\n   <React.Fragment>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/systems\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Systems</NavLink>\n         <NavLink exact to=\"/structures\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Structures</NavLink>\n      </div>\n      <div className=\"h-1/4\">\n         <Route exact path=\"/systems\" component={Locations} />\n      </div>\n   </React.Fragment>\n);\n\nexport default SystemMap;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Location } from '../../Api/types';\nimport { WorkerContext } from '../../WorkerContext';\n\nconst LocationInfo = () => {\n   const history = useHistory();\n   const [apiWorker] = useContext(WorkerContext);\n   const { location } = useParams<{ location: string }>();\n   const [locInfo, setLocInfo] = useState<Location>();\n   const [error, setError] = useState<string>();\n\n   useEffect(() => {\n      const getLocation = async () => {\n         try {\n            const result = await apiWorker.getLocation(location);\n            setLocInfo(result.location);\n         } catch (err: unknown) {\n            setError((err as Error).message);\n         }\n      };\n\n      getLocation();\n   }, []);\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <React.Fragment>\n         <div className=\"mb-4\">\n            <button type=\"button\" className=\"flex items-center text-sm mb-3 hover:text-yellow-600\" onClick={() => history.goBack()}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n               </svg>\n               Back\n            </button>\n            <h2 className=\"text-3xl\">{ locInfo?.name }</h2>\n            <h3>({ location })</h3>\n         </div>\n         { locInfo?.messages\n         && (\n            <div className=\"text-sm mb-4 p-4 bg-blue-800 text-blue-200 rounded-sm\">\n               <p>{ [...locInfo.messages].slice(0, -2).join(' ') }</p>\n            </div>\n         )}\n         { locInfo?.structures\n         && (\n            <React.Fragment>\n               <p className=\"mb-2 text-lg border-b border-gray-500 w-max\">Structures</p>\n               {locInfo?.structures?.map((structure) => (\n                  <div className=\"flex items-center\">\n                     <p key={structure.id}>{ formatString(structure.type) }</p>\n                     { structure.ownedBy\n                        && <span className=\"text-sm ml-3\">(Owner: { structure.ownedBy.username })</span>}\n                  </div>\n               ))}\n            </React.Fragment>\n         )}\n      </React.Fragment>\n   );\n};\n\nexport default LocationInfo;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Loan, LoanType } from '../../Api/types';\nimport { addLoan, setCredits } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   loan: Loan | undefined\n}\n\nconst GetLoan = ({ handleClose, show, loan }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const history = useHistory();\n   const dispatch = useDispatch();\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900' : 'hidden';\n\n   useEffect(() => {\n      setLoading(false);\n      setError('');\n   }, [loan]);\n\n   const requestLoan = async () => {\n      setLoading(true);\n      try {\n         const result = await apiWorker.newLoan(LoanType.Startup);\n         dispatch(setCredits(result.credits));\n         dispatch(addLoan(result.loan));\n         handleClose;\n         history.push('/loans');\n      } catch (err: unknown) {\n         setLoading(false);\n         setError((err as Error).message);\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Request the following loan</h3>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Loan amount</p>\n                  <p>{ loan?.amount.toLocaleString() } credits</p>\n               </div>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Repayment Due</p>\n                  <p>{ loan?.termInDays } day{ loan && loan?.termInDays > 1 ? 's' : '' }</p>\n               </div>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Repayment Amount</p>\n                  <p>\n                     { loan && (loan.amount + (loan.amount * (loan.rate / 100))).toLocaleString() }\n                     {' '} credits\n                  </p>\n               </div>\n               { error\n                  && (\n                     <div className=\"bg-red-300 text-red-800 px-4 py-3 mb-4 text-center\">\n                        <p>{ error }</p>\n                     </div>\n                  )}\n               <div className=\"flex justify-end pt-2\">\n                  { !loading\n                     ? (\n                        <React.Fragment>\n                           <button type=\"button\" className=\"px-4 py-2 text-red-500 text-sm rounded mr-4 hover:text-red-400\" onClick={handleClose}>Close</button>\n                           <button\n                              type=\"button\"\n                              className=\"w-1/4 px-4 py-2 text-white text-sm bg-green-500 rounded hover:bg-green-400 disabled:opacity-50 disabled:cursor-default disabled:bg-green-500\"\n                              disabled={loading || (error.length > 0)}\n                              onClick={requestLoan}\n                           >Get Loan\n                           </button>\n                        </React.Fragment>\n                     )\n                     : <p className=\"text-sm text-yellow-500 italic\">Please Wait...</p>}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default GetLoan;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Loan } from '../../Api/types';\nimport { WorkerContext } from '../../WorkerContext';\nimport { CardLoader } from '../SkeletonLoaders';\nimport GetLoan from './GetLoadModal';\n\nconst Available = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const [loans, setLoans] = useState<Loan[]>();\n   const [showModal, setModalShow] = useState(false);\n   const [selectedLoan, setSelectedLoan] = useState<Loan>();\n\n   useEffect(() => {\n      const GetLoans = async () => {\n         try {\n            setLoans((await apiWorker.getLoansAvailable()).loans);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n      GetLoans();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <GetLoan show={showModal} loan={selectedLoan} handleClose={() => { setModalShow(false); setSelectedLoan(undefined); }} />\n         <h2 className=\"text-3xl mb-5\">Available Loans</h2>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !loans\n               && (\n                  <React.Fragment>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                  </React.Fragment>\n               )}\n            { loans?.map((loan) => (\n               <button type=\"button\" className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left hover:border-yellow-900 hover:shadow-xl\" key={loan.amount + loan.type + loan.rate} onClick={() => { setModalShow(true); setSelectedLoan(loan); }}>\n                  <div className=\"flex justify-between items-start\">\n                     <div className=\"flex items-center\">\n                        <div className=\"w-6 h-6 mr-2\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.1} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                           </svg>\n                        </div>\n                        <h3 className=\"text-lg\">{ loan.amount.toLocaleString() }</h3>\n                     </div>\n                     <div>\n                        { loan.collateralRequired\n                           && <p className=\"text-red-400\">Collateral Required</p> }\n                     </div>\n                  </div>\n                  <p className=\"text-xs text-gray-400\">{ loan.type }</p>\n                  <div className=\"mt-5\">\n                     <div className=\"flex mt-3\">\n                        <div className=\"w-6 h-6 mr-3\" title=\"Term\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                           </svg>\n                        </div>\n                        <p>{ loan.termInDays }</p>\n                     </div>\n                     <div className=\"flex mt-3\">\n                        <p className=\"text-xl text-center w-6 h-6 mr-3\" title=\"Origination fee\">%</p>\n                        <p>\n                           <span>{ loan.rate } </span>\n                           <span className=\"text-gray-400 text-sm\">\n                              (\n                              { loan.amount * (loan.rate / 100)}\n                              {' '}\n                              credits)\n                           </span>\n                        </p>\n                     </div>\n                     <p className=\"mt-3 pt-3 text-sm border-t border-gray-700\">\n                        Total repayment cost:\n                        {' '}\n                        { (loan.amount + (loan.amount * (loan.rate / 100))).toLocaleString() }\n                        {' '}\n                        credits\n                     </p>\n                  </div>\n               </button>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Available;\n","import { formatDistanceToNow } from 'date-fns';\nimport React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoanStatus } from '../../Api/types';\nimport { RootState, updateLoans } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface LoanRepaymentResponse {\n   type: 'Success' | 'Error',\n   message: string\n}\n\nconst Owned = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { loans, credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [response, setResponse] = useState<LoanRepaymentResponse>();\n\n   const repayLoan = async (loanId:string) => {\n      try {\n         const result = await apiWorker.replayLoan(loanId);\n         dispatch(updateLoans(result.user.loans));\n         setResponse({ type: 'Success', message: 'Loan repayed successfully!' });\n      } catch (err: unknown) {\n         setResponse({ type: 'Error', message: (err as Error).message });\n      }\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Loans</h2>\n         { response\n         && (\n            <div className={`flex justify-between items-center text-sm py-3 px-3 mb-5 ${response.type === 'Success' ? 'bg-green-400 text-green-900' : 'bg-red-400 text-red-900'}`}>\n               <p>{ response.message }</p>\n               <button className={`w-4 h-4 ${response.type === 'Success' ? 'hover:text-green-700' : 'hover:text-red-700'}`} type=\"button\" onClick={() => setResponse(undefined)}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n               </button>\n            </div>\n         )}\n         <h3 className=\"text-lg mb-4\">Current Loans</h3>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { ([...loans].filter((x) => x.status === LoanStatus.Current)).length > 0\n               ? [...loans].filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                  <div className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left\" key={loan.id}>\n                     <div className=\"mb-3\">\n                        <p className=\"text-xs text-gray-400\">Repayment Amount</p>\n                        <p>{ loan.repaymentAmount.toLocaleString() } credits</p>\n                     </div>\n                     <div>\n                        <p className=\"text-xs text-gray-400\">Due</p>\n                        <p>{ formatDistanceToNow(new Date(loan.due), { addSuffix: true }) }</p>\n                     </div>\n                     { credits > loan.repaymentAmount\n                     && (\n                        <div className=\"mt-3\">\n                           <button type=\"button\" className=\"py-1 px-2 bg-blue-500 rounded hover:bg-blue-600\" onClick={() => repayLoan(loan.id)}>Repay</button>\n                        </div>\n                     )}\n                  </div>\n               ))\n               : <p className=\"text-sm ml-4\">You have no open loans</p>}\n         </div>\n         <h3 className=\"text-lg my-4\">Closed Loans</h3>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { [...loans].filter((x) => x.status !== LoanStatus.Current).map((loan) => (\n               <div className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left\" key={loan.id}>\n                  <div className=\"mb-3\">\n                     <p className=\"text-xs text-gray-400\">Repayment Amount</p>\n                     <p>{ loan.repaymentAmount.toLocaleString() } credits</p>\n                  </div>\n                  <div>\n                     <p className=\"text-xs text-gray-400\">Status</p>\n                     <p>{ formatString(loan.status) }</p>\n                  </div>\n               </div>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Owned;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { CargoType, LoanStatus, Ship } from '../../Api/types';\nimport { RootState } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\nconst Worth = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { marketData } = useSelector((state:RootState) => state);\n   const { credits, ships, loans } = useSelector((state:RootState) => state.user);\n   const [uniqueShipCount, setUniqueShipCount] = useState<{ shipType: string; uniques: number; }[]>([]);\n   const [shipPrices, setShipPrices] = useState<Ship[]>([]);\n   const [cargos, setCargos] = useState<{ type: CargoType, quantity: number, bestValue: number }[]>([]);\n   const [totalWorth, setTotalWorth] = useState(0);\n\n   useEffect(() => {\n      const getShipPrices = async () => {\n         try {\n            const getShips = await apiWorker.availableShips();\n            setShipPrices(getShips.ships);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n\n      getShipPrices();\n   }, []);\n\n   useEffect(() => {\n      const shipTypes = new Map(ships.map((ship) => [ship.type, []]));\n\n      const results = Array.from(shipTypes.entries(), ([shipType]) => ({ shipType, uniques: ships.filter((x) => x.type === shipType).length }));\n      setUniqueShipCount(results);\n\n      const cargosArray: { type: CargoType, quantity: number, bestValue: number }[] = [];\n      Object.values(CargoType).forEach((cargo) => {\n         const good = {\n            type: cargo,\n            quantity: 0,\n            bestValue: 0,\n         };\n         const shipsWithCargoType = ships.filter((x) => x.cargo.find((y) => y.good === cargo));\n         shipsWithCargoType.forEach((ship) => {\n            good.quantity += ship.cargo.find((x) => x.good === cargo)?.quantity as number;\n         });\n         const markets = marketData.filter((x) => x.planet.marketplace.find((y) => y.symbol === cargo));\n         const locationsWithGood = markets?.map((market) => market.planet.marketplace.find((marketCargo) => marketCargo.symbol === cargo)?.sellPricePerUnit as number);\n         if (locationsWithGood.length > 0) {\n            good.bestValue = Math.max(...locationsWithGood);\n         } else {\n            good.bestValue = 0;\n         }\n         cargosArray.push(good);\n      });\n      setCargos(cargosArray);\n   }, [ships]);\n\n   useEffect(() => {\n      let total = credits;\n      uniqueShipCount.forEach((ship) => {\n         total += ship.uniques * (shipPrices.find((x) => x.type === ship.shipType)?.purchaseLocations[0].price as number);\n      });\n      cargos.forEach((cargo) => {\n         total += (cargo.bestValue * cargo.quantity);\n      });\n      loans.filter((x) => x.status === LoanStatus.Current).forEach((loan) => {\n         total -= loan.repaymentAmount;\n      });\n      setTotalWorth(total);\n   }, [credits, uniqueShipCount, cargos, loans, shipPrices]);\n\n   return (\n      <React.Fragment>\n         <table className=\"table-auto w-3/4 mx-auto\">\n            <thead>\n               <tr className=\"bg-gray-300 text-gray-700 uppercase text-sm leading-normal\">\n                  <th className=\"py-3 px-6 text-left\">Commodity</th>\n                  <th className=\"py-3 px-6 text-left\">Type</th>\n                  <th className=\"py-3 px-6 text-center\">Quantity</th>\n                  <th className=\"py-3 px-6 text-right\">Total Value</th>\n               </tr>\n            </thead>\n            <tbody className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n               <tr className=\"border-b border-gray-500 hover:bg-gray-900\">\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap\">Credits</td>\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap\">Cash</td>\n                  <td className=\"py-3 px-6 text-center whitespace-nowrap\">-</td>\n                  <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ credits.toLocaleString() }</td>\n               </tr>\n               { loans.filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                  <tr key={loan.id} className=\"border-b border-gray-500 hover:bg-gray-900\">\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">Loan</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">Liability</td>\n                     <td className=\"py-3 px-6 text-center whitespace-nowrap\">-</td>\n                     <td className=\"py-3 px-6 text-red-500 text-right whitespace-nowrap\">-{ loan.repaymentAmount.toLocaleString() }</td>\n                  </tr>\n               ))}\n               { uniqueShipCount.map((ship) => (\n                  <tr key={ship.shipType} className=\"border-b border-gray-500 hover:bg-gray-900\">\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ ship.shipType }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">Ship</td>\n                     <td className=\"py-3 px-6 text-center whitespace-nowrap\">{ ship.uniques.toLocaleString() }</td>\n                     <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ (ship.uniques * (shipPrices.find((x) => x.type === ship.shipType)?.purchaseLocations[0].price as number)).toLocaleString() }</td>\n                  </tr>\n               ))}\n               { cargos.map((cargo) => {\n                  if (cargo.quantity > 0) {\n                     return (\n                        <tr key={cargo.type} className=\"border-b border-gray-500 hover:bg-gray-900\">\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ cargo.type }</td>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">Cargo</td>\n                           <td className=\"py-3 px-6 text-center whitespace-nowrap\">{ cargo.quantity.toLocaleString() }</td>\n                           <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ (cargo.bestValue * cargo.quantity).toLocaleString() }</td>\n                        </tr>\n                     );\n                  }\n                  return null;\n               })}\n            </tbody>\n            <tfoot className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n               <tr className=\"border-b border-gray-500 hover:bg-gray-900\">\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap uppercase\">Total</td>\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap\">-</td>\n                  <td className=\"py-3 px-6 text-center whitespace-nowrap\">-</td>\n                  <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ totalWorth.toLocaleString() }</td>\n               </tr>\n            </tfoot>\n         </table>\n      </React.Fragment>\n   );\n};\n\nexport default Worth;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Available from './Available';\nimport Owned from './Owned';\nimport Worth from './Worth';\n\nconst Loans = () => (\n   <div>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/money\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Net Worth</NavLink>\n         <NavLink exact to=\"/money/loans\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Your Loans</NavLink>\n         <NavLink exact to=\"/money/loans/available\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Get a Loan</NavLink>\n      </div>\n      <Switch>\n         <Route exact path=\"/money\" component={Worth} />\n         <Route exact path=\"/money/loans\" component={Owned} />\n         <Route path=\"/money/loans/available\" component={Available} />\n      </Switch>\n   </div>\n);\n\nexport default Loans;\n","/* eslint-disable no-continue */\nimport { formatDistanceToNow } from 'date-fns';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { CargoType, Location, Planet } from '../../Api/types';\nimport { RootState, setSystems, updateMarketData } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { MarketCardLoader } from '../SkeletonLoaders';\n\ninterface SystemRoutes {\n   system: string;\n   routes: TradeRoute[];\n}\n\ninterface TradeRoute {\n   good: CargoType;\n   from: string;\n   to: string;\n   fuelRequired: number;\n   cpdv: number;\n   lastUpdated: number;\n}\n\nconst Markets = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { ships } = useSelector((state:RootState) => state.user);\n   const marketData = useSelector((state:RootState) => state.marketData);\n   const systems = useSelector((state:RootState) => state.systems);\n   const automationEnabled = useSelector((state:RootState) => state.automateAll);\n   const dispatch = useDispatch();\n   const [locations, setLocations] = useState<Location[]>();\n   const [time, setTime] = useState<number>(Date.now());\n   const [activeSystem, setActiveSystem] = useState<string>();\n\n   const changeSystem = async (system:string) => {\n      try {\n         setActiveSystem(system);\n         setLocations(undefined);\n         const data = (await apiWorker.getLocations(system)).locations;\n         setLocations(data);\n      } catch (err: unknown) {\n         toast.error((err as Error).message, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      }\n   };\n\n   useEffect(() => {\n      const GetSystems = async () => {\n         if (systems.length === 0) {\n            try {\n               const temp = (await apiWorker.systemsInfo()).systems;\n               dispatch((setSystems(temp)));\n            } catch (err: unknown) {\n               toast.error((err as Error).message, {\n                  position: 'bottom-right',\n                  autoClose: false,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: 0,\n               });\n            }\n         }\n      };\n      GetSystems();\n\n      // Update the 'time' state, to refresh \"last updated\" times\n      const interval = setInterval(() => setTime(Date.now()), 60000);\n\n      return () => clearInterval(interval);\n   }, []);\n\n   useEffect(() => {\n      if (systems.length === 0) { return; }\n      changeSystem(systems[0].symbol);\n   }, [systems]);\n\n   useEffect(() => {\n      const getMarketData = async () => {\n         locations?.forEach(async (location) => {\n            if (ships.some((x) => x.location === location.symbol)) {\n               try {\n                  const data = await apiWorker.getMarket(location.symbol);\n                  dispatch(updateMarketData({ updatedAt: Date.now(), planet: data.location }));\n               } catch (err: unknown) {\n                  toast.error((err as Error).message, {\n                     position: 'bottom-right',\n                     autoClose: false,\n                     hideProgressBar: false,\n                     closeOnClick: true,\n                     pauseOnHover: true,\n                     draggable: true,\n                     progress: 0,\n                  });\n               }\n            }\n         });\n      };\n      // When automating, this request can be queued and by the time it executes the ship may have left, which results in an API error\n      if (!automationEnabled) {\n         getMarketData();\n      }\n   }, [locations, ships]);\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const getDataForLocation = (location: Location) => {\n      const data = marketData.find((x) => x.planet.symbol === location.symbol);\n\n      if (!data || data?.planet.marketplace.length === 0) {\n         return <p className=\"mt-3 text-sm text-gray-400\">No data available</p>;\n      }\n\n      return (\n         data?.planet.marketplace.slice().sort((a, b) => ((a.symbol > b.symbol) ? 1 : (b.symbol > a.symbol) ? -1 : 0)).map((market) => (\n            <div className=\"text-sm my-3\" key={market.symbol + market.pricePerUnit + market.volumePerUnit}>\n               <p className=\"font-bold\">{ formatString(market.symbol) }</p>\n               <p className=\"pl-2\">Quantity: { market.quantityAvailable.toLocaleString() }</p>\n               <p className=\"pl-2\">Buy: { (market.purchasePricePerUnit).toLocaleString() } credits</p>\n               <p className=\"pl-2\">Sell: { (market.sellPricePerUnit).toLocaleString() } credits</p>\n            </div>\n         ))\n      );\n   };\n\n   const getUpdatedTime = (location: Location) => {\n      const data = marketData.find((x) => x.planet.symbol === location.symbol);\n\n      if (!data) { return null; }\n\n      return `Updated ${formatDistanceToNow(new Date(data.updatedAt), { addSuffix: true })}`;\n   };\n\n   const getSystemSymbolFromLocation = (location: string) => {\n      if (!location) {\n         console.log(location);\n         return '';\n      }\n      return location.split('-')[0];\n   };\n\n   const distanceBetween = (point1: Planet | Location, point2: Planet | Location) => (\n      Math.ceil(Math.sqrt(((point2.x - point1.x) ** 2) + ((point2.y - point1.y) ** 2)))\n   );\n\n   const fuelRequired = (from: Planet | Location, to: Planet | Location) => (\n      Math.round((distanceBetween(to, from) / 4)) + 1\n   );\n\n   const getBestRoutes = () => {\n      const bestRoutes: SystemRoutes[] = [];\n      const uniqueLocations = Array.from(new Set(marketData.map((market) => market.planet.symbol)));\n      const uniqueSystems:string[] = Array.from(new Set(uniqueLocations.map((location: any) => getSystemSymbolFromLocation(location as string))));\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const system of uniqueSystems) {\n         const bestSystemRoutes: TradeRoute[] = [];\n\n         // eslint-disable-next-line no-restricted-syntax\n         for (const type of Object.values(CargoType)) {\n            if (type === CargoType.Research || type === CargoType.Fuel) { continue; } // exclude research for now\n\n            // all locations that have up-to-date data and have the good in question\n            const data = [...marketData].filter((x) => getSystemSymbolFromLocation(x.planet.symbol) === system && x.planet.marketplace.find((y) => y.symbol === type));\n            // const data = [...this.markets].filter((x) => (Date.now() - x.updatedAt <= this.marketUpdateTime) && x.planet.marketplace.find((y) => y.symbol === type));\n\n            if (data.length <= 1) { continue; }\n            for (let i = 0; i < data.length; i += 1) {\n               const current = data[i];\n\n               for (let y = 0; y < data.length; y += 1) {\n                  if (data[y].planet !== current.planet) {\n                     const creditDiff = (data[y].planet.marketplace.find((x) => x.symbol === type)?.sellPricePerUnit as number) - (current.planet.marketplace.find((x) => x.symbol === type)?.purchasePricePerUnit as number);\n                     const distance = distanceBetween(current.planet, data[y].planet);\n                     const cpdv = creditDiff / distance / (current.planet.marketplace.find((x) => x.symbol === type)?.volumePerUnit as number);\n                     const lastUpdated = current.updatedAt > data[y].updatedAt ? current.updatedAt : data[y].updatedAt;\n\n                     // exclude any negatives because we don't want to trade on routes that lose money\n                     if (cpdv <= 0) { continue; }\n\n                     const existing = bestSystemRoutes.find((x) => x.good === type);\n                     if (existing && existing.cpdv < cpdv) {\n                        bestSystemRoutes[bestSystemRoutes.findIndex((x) => x.good === type)] = {\n                           good: type,\n                           from: current.planet.symbol,\n                           to: data[y].planet.symbol,\n                           fuelRequired: fuelRequired(current.planet, data[y].planet),\n                           cpdv,\n                           lastUpdated,\n                        };\n                     } else if (!existing) {\n                        bestSystemRoutes.push({\n                           good: type,\n                           from: current.planet.symbol,\n                           to: data[y].planet.symbol,\n                           fuelRequired: fuelRequired(current.planet, data[y].planet),\n                           cpdv,\n                           lastUpdated,\n                        });\n                     }\n                  }\n               }\n            }\n         }\n\n         bestRoutes.push({ system, routes: bestSystemRoutes.sort((a, b) => ((a.cpdv < b.cpdv) ? 1 : (b.cpdv < a.cpdv) ? -1 : 0)) });\n      }\n\n      return bestRoutes;\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Markets</h2>\n         <div className=\"my-7\">\n            <h3>Best Routes</h3>\n            <table className=\"mx-auto mt-3 w-3/4 text-sm\">\n               <thead>\n                  <tr className=\"border-b border-gray-500 text-sm leading-normal\">\n                     <th className=\"font-normal text-gray-400 text-left\">Good</th>\n                     <th className=\"font-normal text-gray-400 text-left\">From</th>\n                     <th className=\"font-normal text-gray-400 text-left\">To</th>\n                     <th className=\"font-normal text-gray-400 text-left\">Credits per distance volume</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  { getBestRoutes().map((systemRoute) => (\n                     systemRoute.routes.map((route) => (\n                        <tr className=\"border-b border-gray-500 hover:bg-gray-900\" key={route.good + route.from + route.to + route.cpdv}>\n                           <td className=\"py-1\">{ formatString(route.good) }</td>\n                           <td className=\"py-1\">{ systems.find((x) => x.symbol === getSystemSymbolFromLocation(route.from))?.locations.find((x) => x.symbol === route.from)?.name }</td>\n                           <td className=\"py-1\">{ systems.find((x) => x.symbol === getSystemSymbolFromLocation(route.to))?.locations.find((x) => x.symbol === route.to)?.name }</td>\n                           <td className=\"py-1\">{ Math.ceil(route.cpdv * 100) / 100 }</td>\n                        </tr>\n                     ))\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <p className=\"text-xs text-gray-400 mb-1\">System</p>\n         { systems.map((system) => (\n            <button key={system.symbol} type=\"button\" className={`text-sm mr-4 pb-1 mb-5 ${activeSystem === system.symbol ? 'subMenuActive' : ''}`} value={system.symbol} onClick={(e) => changeSystem(e.currentTarget.value)}>{ system.name }</button>\n         ))}\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !locations\n               ? (\n                  <MarketCardLoader />\n               )\n               : (\n                  locations.sort((a, b) => ((a.name > b.name) ? 1 : (b.name > a.name) ? -1 : 0)).map((location) => (\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\" key={location.symbol}>\n                        <div className=\"flex justify-between items-center pb-2 border-b border-gray-700\">\n                           <h3 className=\"text-xl\">{ location.name }</h3>\n                           <p className=\"text-xs text-gray-400\">{ time && getUpdatedTime(location) }</p>\n                        </div>\n                        { getDataForLocation(location) }\n                     </div>\n                  ))\n               )}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Markets;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AvailableStructures, Location } from '../../../Api/types';\nimport { RootState } from '../../../store';\nimport { WorkerContext } from '../../../WorkerContext';\n\nconst Structures = () => {\n   const { credits } = useSelector((state:RootState) => state.user);\n   const [apiWorker] = useContext(WorkerContext);\n   const [structures, setStructures] = useState<AvailableStructures[]>([]);\n   const [locationsForStructure, setLocationsForStructure] = useState<Location[]>([]);\n   const [selectedStructure, setSelectedStructure] = useState<AvailableStructures>();\n   const [selectedLocation, setSelectedLocation] = useState<Location>();\n\n   useEffect(() => {\n      const getStructures = async () => {\n         setStructures((await apiWorker.getStructures()).structures);\n      };\n      getStructures();\n   }, []);\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const findStructureLocation = async (structure: AvailableStructures) => {\n      setSelectedStructure(structure);\n      setSelectedLocation(undefined);\n      setLocationsForStructure([]);\n      const locations:Location[] = [];\n      // eslint-disable-next-line no-restricted-syntax\n      for (const locationType of structure.allowedLocationTypes) {\n         // eslint-disable-next-line no-await-in-loop\n         const location = (await apiWorker.getLocationsForStructure(locationType)).locations;\n         location.forEach((loc) => locations.push(loc));\n      }\n      setLocationsForStructure(locations);\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Available Structures</h2>\n         <h3 className=\"text-lg mt-5 mb-3\">1. Select a structure...</h3>\n         <table className=\"mt-3 table-auto w-full mx-auto\">\n            <thead>\n               <tr className=\"bg-gray-300 text-gray-700 uppercase text-sm leading-normal\">\n                  <th className=\"py-3 px-6 text-left\">Type</th>\n                  <th className=\"py-3 px-6 text-left\">Price</th>\n                  <th className=\"py-3 px-6 text-left\">Allowed Locations</th>\n                  <th className=\"py-3 px-6 text-left\">Consumes</th>\n                  <th className=\"py-3 px-6 text-left\">Produces</th>\n               </tr>\n            </thead>\n            <tbody className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n               { structures.map((structure) => (\n                  <tr className={`cursor-pointer border-b border-gray-500 hover:bg-gray-900 ${selectedStructure?.name === structure.name ? 'bg-yellow-600 text-gray-100' : ''}`} key={structure.name + structure.price} onClick={() => findStructureLocation(structure)}>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.name }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.price.toLocaleString() }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.allowedLocationTypes.map((location) => formatString(location)).join(', ') }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.consumes.map((item) => formatString(item)).join(', ') }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.produces.map((item) => formatString(item)).join(', ') }</td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         { selectedStructure\n         && (\n            <React.Fragment>\n               <h3 className=\"text-lg mt-10 mb-3\">2. Select a location...</h3>\n               <table className=\"mt-3 table-auto w-full mx-auto\">\n                  <thead>\n                     <tr className=\"bg-gray-300 text-gray-700 uppercase text-sm leading-normal\">\n                        <th className=\"py-3 px-6 text-left\">Name</th>\n                        <th className=\"py-3 px-6 text-left\">Type</th>\n                        <th className=\"py-3 px-6 text-left\">Symbol</th>\n                     </tr>\n                  </thead>\n                  <tbody className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n                     { locationsForStructure.map((location) => (\n                        <tr className={`cursor-pointer border-b border-gray-500 hover:bg-gray-900 ${selectedLocation?.symbol === location.symbol ? 'bg-yellow-600 text-gray-100' : ''}`} key={location.symbol} onClick={() => setSelectedLocation(location)}>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ location.name }</td>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ formatString(location.type) }</td>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ location.symbol }</td>\n                        </tr>\n                     ))}\n                  </tbody>\n               </table>\n            </React.Fragment>\n         )}\n         { selectedLocation && selectedStructure\n         && (\n            <React.Fragment>\n               <h3 className=\"text-lg mt-10 mb-3\">3. Confirm build</h3>\n               <table className=\"mb-3\">\n                  <thead>\n                     <tr>\n                        <th className=\"pr-10 font-normal text-gray-400 text-left\">Structure</th>\n                        <th className=\"pr-8 font-normal text-gray-400 text-left\">Location</th>\n                        <th className=\"pr-8 font-normal text-gray-400 text-left\">Cost</th>\n                     </tr>\n                  </thead>\n                  <tbody>\n                     <tr>\n                        <td>{ selectedStructure.name }</td>\n                        <td>{ selectedLocation.name }</td>\n                        <td>{ selectedStructure.price.toLocaleString() }</td>\n                     </tr>\n                  </tbody>\n               </table>\n               <button\n                  type=\"button\"\n                  className=\"bg-green-600 px-3 py-1 rounded hover:bg-green-700 disabled:opacity-50 disabled:bg-green-600 disabled:cursor-default\"\n                  disabled={credits < selectedStructure.price}\n               >Build\n               </button>\n            </React.Fragment>\n         )}\n      </React.Fragment>\n   );\n};\n\nexport default Structures;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Structure } from '../../../Api/types';\nimport { RootState } from '../../../store';\nimport { WorkerContext } from '../../../WorkerContext';\n\nconst BuiltStructures = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { username } = useSelector((state:RootState) => state.user);\n   const [userStructures, setUserStructures] = useState<Structure[]>([]);\n\n   useEffect(() => {\n      const getLocations = async () => {\n         const locations = (await apiWorker.systemsInfo()).systems;\n         const structures:Structure[] = [];\n\n         locations.forEach((sysLoc) => {\n            sysLoc.locations.forEach((location) => {\n               location.structures?.forEach((structure) => {\n                  if (structure.ownedBy && structure.ownedBy.username === (username as string)) { structures.push(structure); }\n               });\n            });\n         });\n\n         setUserStructures(structures);\n      };\n\n      getLocations();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Structures</h2>\n         { userStructures.length > 0\n            ? (\n               <div>\n                  Your Structures\n               </div>\n            ) : <p>You have no structures</p>}\n      </React.Fragment>\n   );\n};\n\nexport default BuiltStructures;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Build from './Build';\nimport BuiltStructures from './BuiltStructures';\n\nconst Structures = () => (\n   <React.Fragment>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/structures\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Structures</NavLink>\n         <NavLink exact to=\"/structures/build\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Build</NavLink>\n      </div>\n      <div className=\"h-1/4\">\n         <Switch>\n            <Route exact path=\"/structures\" component={BuiltStructures} />\n            <Route exact path=\"/structures/build\" component={Build} />\n         </Switch>\n      </div>\n   </React.Fragment>\n);\n\nexport default Structures;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { WorkerProvider } from './WorkerContext';\nimport store from './store';\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <BrowserRouter basename=\"/Vocivos\">\n            <WorkerProvider>\n               <App />\n            </WorkerProvider>\n         </BrowserRouter>\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}