{"version":3,"sources":["Api/index.ts","store/index.ts","Api/types.ts","components/SkeletonLoaders.tsx","components/NavBar.tsx","components/SignIn.tsx","components/Automation/Models.ts","components/Markets/Buy.tsx","components/Markets/Sell.tsx","components/Ships/Travel.tsx","components/Ships/TravelProgress.tsx","components/Automation/StepButton.tsx","components/Automation/AutomateModal.tsx","components/Ships/ShipCard.tsx","components/Profile.tsx","components/Ships/PurchaseShipModal.tsx","components/Ships/Available.tsx","components/Ships/ShipsGroup.tsx","components/Ships/Owned.tsx","components/Ships/Ships.tsx","components/Systems/Systems.tsx","components/Systems/Location.tsx","components/Loans/GetLoadModal.tsx","components/Loans/Available.tsx","components/Loans/Owned.tsx","components/Loans/Loans.tsx","components/Markets/Markets.tsx","App.tsx","index.tsx","webworker.ts"],"names":["fetchMethod","initialState","user","credits","loans","ships","username","undefined","account","token","flightPlans","marketData","automations","systems","spacetraders","createSlice","name","reducers","reset","state","Object","assign","setUser","payload","setToken","setCredits","updateLoans","updateShip","find","x","id","updateShips","addFlightPlan","push","ship","shipId","location","flightPlanId","removeFlightPlan","findIndex","splice","destination","updateMarketData","some","item","planet","symbol","map","localStorage","setItem","JSON","stringify","addAutomation","setAutomationState","enabled","addAutomationError","error","setSystems","actions","reducer","store","configureStore","preloadedState","BASE_URL","limiter","Bottleneck","minTime","maxConcurrent","wait","time","Promise","resolve","setTimeout","authFetch","url","type","a","retry","Get","schedule","fetch","method","headers","Authorization","data","response","body","status","header","get","retryAfter","parseInt","Error","json","result","message","LoanType","LocationType","CargoType","LoanStatus","Post","loanId","Put","className","class","good","quantity","structureId","planId","ModalPlaceholder","speed","width","height","viewBox","backgroundColor","foregroundColor","y","rx","ry","CardLoader","HeaderLoader","ProfileLoader","AutoStepLoader","MarketCardLoader","NavBar","useSelector","useState","dropDownOpen","setDropDownOpen","ref","useRef","dispatch","useDispatch","useEffect","pageEvent","e","current","contains","target","window","addEventListener","removeEventListener","onClick","xmlns","fill","aria-hidden","fillRule","d","clipRule","role","aria-orientation","aria-labelledby","removeItem","Fragment","to","toLocaleString","title","strokeWidth","stroke","strokeLinecap","strokeLinejoin","GetApiKey","userName","setUserName","userToken","setUserToken","formValid","setFormValid","signIn","setSignIn","setError","disabled","setDisabled","getApiKey","preventDefault","Api","Login","validate","valid","document","querySelector","checkValidity","placeholder","onChange","value","required","AutoAction","Buy","handleClose","show","setMarketData","selectedMarket","setSelectedMarket","purchaseQuantity","setPurchaseQuantity","working","setWorking","showHideModal","marketplace","sort","b","getMarket","maxQuantity","maxCargo","Math","floor","spaceAvailable","volumePerUnit","pricePerUnit","spread","quantityAvailable","purchaseMarket","market","toLowerCase","split","s","charAt","toUpperCase","slice","join","min","max","Sell","sellQuantity","setSellQuantity","sellMarket","deleteMarket","shipInfo","depositGoods","sellPrice","cargo","totalVolume","system","locations","Wormhole","Travel","shipError","setLocations","autoBuyFuel","setAutoBuyFuel","loc","getLocations","createFlightPlan","flightPlan","updatedShip","startsWith","requiredFuelString","match","fuel","Fuel","htmlFor","checked","TravelProgressBar","props","completed","style","transition","StepButton","step","index","length","editStep","deleteStep","moveStepUp","moveStepDown","editSubAction","action","Number","isNaN","formatString","Chemicals","editAction","values","getSubAction","AutomateModal","steps","autoSteps","setAutoSteps","setSystem","currentAutomation","makeId","i","random","updated","copyAutomation","selected","automation","filter","tempArray","element","newStep","addNewStep","ShipCard","compact","showBuyModal","setBuyModalShow","showSellModal","setSellModalShow","showTravelModal","setTravelModalShow","showAutomateModal","setAutomateModalShow","remainingTime","setRemainingTime","Date","now","setTime","interval","setInterval","clearInterval","isPast","arrivesAt","formatDistanceToNowStrict","calcProgress","getUnixTime","timeRemainingInSeconds","isFuture","reduce","acc","TravelProgress","manufacturer","enableBackground","weapons","plating","departure","defaultProps","Profile","messages","Current","loan","repaymentAmount","formatDistanceToNow","due","addSuffix","PurchaseShipModal","history","useHistory","loading","setLoading","purchaseShip","renderButtons","price","purchaseLocations","Available","setShips","sortOrder","setOrder","sortType","setSortType","showModal","setModalShow","selectedShip","setSelectedShip","GetShips","getShips","lowestPrice","prev","curr","sorted","transform","version","ShipsGroup","setShipError","collapseHeight","setCollapseHeight","duration","group","localeCompare","sortShips","Owned","shipGroups","setShipGroups","forEach","destinationSystem","UNKNOWN","ordered","keys","obj","key","Ships","exact","activeClassName","path","component","SystemMap","sortedLocations","setSortedLocations","temp","GetSystems","sortedSystem","Moon","parent","satellites","satellite","LocationInfo","useParams","locInfo","setLocInfo","getLocation","structures","structure","materials","material","round","targetQuantity","toFixed","GetLoan","requestLoan","Startup","amount","termInDays","rate","setLoans","selectedLoan","setSelectedLoan","GetLoans","collateralRequired","setResponse","repayLoan","Loans","Markets","activeSystem","setActiveSystem","changeSystem","updatedAt","getMarketData","getDataForLocation","getUpdatedTime","currentTarget","App","Worker","automationsList","setAutomationsList","getItem","apiKey","parse","terminatedAt","getSystems","marketDataStore","FetchAccount","webworkerError","console","log","webworkerUpdateState","webworkerGetLocalStorage","worker","webworkerUpdateMarketData","Comlink","instance","run","stop","SignIn","Location","fallback","Systems","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"+LAOKA,E,qDCsBCC,EAA6B,CAChCC,KAAM,CACHC,QAAS,EACTC,MAAO,GACPC,MAAO,GACPC,cAAUC,GAEbC,QAAS,CACNC,MAAO,GACPH,SAAU,IAEbI,YAAa,GACbC,WAAY,GACZC,YAAa,GACbC,QAAS,IAGNC,EAAeC,YAAY,CAC9BC,KAAM,eACNf,eACAgB,SAAU,CACPC,MAAO,SAACC,GACLC,OAAOC,OAAOF,EAAOlB,IAExBqB,QAAS,SAACH,EAAD,GAA6C,IAAnCI,EAAkC,EAAlCA,QAChBJ,EAAMjB,KAAOqB,EAAQrB,MAExBsB,SAAU,SAACL,EAAD,GAA0E,IAAhEI,EAA+D,EAA/DA,QACjBJ,EAAMX,QAAUe,GAEnBE,WAAY,SAACN,EAAD,GAA+C,IAArCI,EAAoC,EAApCA,QACnBJ,EAAMjB,KAAKC,QAAUoB,GAExBG,YAAa,SAACP,EAAD,GAAoD,IAA1CI,EAAyC,EAAzCA,QACpBJ,EAAMjB,KAAKE,MAAQmB,GAEtBI,WAAY,SAACR,EAAD,GAAkD,IAAxCI,EAAuC,EAAvCA,QACnBH,OAAOC,OAAOF,EAAMjB,KAAKG,MAAMuB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOP,EAAQO,MAAKP,IAEpEQ,YAAa,SAACZ,EAAD,GAAoD,IAA1CI,EAAyC,EAAzCA,QACpBJ,EAAMjB,KAAKG,MAAQkB,GAEtBS,cAAe,SAACb,EAAD,GAAmD,IAAzCI,EAAwC,EAAxCA,QACtBJ,EAAMT,YAAYuB,KAAKV,GAEvB,IAAMW,EAAOf,EAAMjB,KAAKG,MAAMuB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOP,EAAQY,UACvDD,IACDA,EAAKE,cAAW7B,EAChB2B,EAAKG,aAAed,EAAQO,KAGlCQ,iBAAkB,SAACnB,EAAD,GAAmD,IAAzCI,EAAwC,EAAxCA,QACzB,GAAIJ,EAAMT,YAAY6B,WAAU,SAACV,GAAD,OAAOA,EAAEC,KAAOP,EAAQO,OAAO,EAAG,CAC/DX,EAAMT,YAAY8B,OAAOrB,EAAMT,YAAY6B,WAAU,SAACV,GAAD,OAAOA,EAAEC,KAAOP,EAAQO,MAAK,GAGlF,IAAMI,EAAOf,EAAMjB,KAAKG,MAAMuB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOP,EAAQY,UACvDD,IACDA,EAAKE,SAAWb,EAAQkB,YACxBP,EAAKG,kBAAe9B,KAI7BmC,iBAAkB,SAACvB,EAAD,GAAqD,IAA3CI,EAA0C,EAA1CA,QAErBJ,EAAMR,WAAWgC,MAAK,SAACC,GAAD,OAAWA,EAAKC,OAAOC,SAAWvB,EAAQsB,OAAOC,UACxE3B,EAAMR,WAAaQ,EAAMR,WAAWoC,KAAI,SAACH,GAAD,OAAYA,EAAKC,OAAOC,SAAWvB,EAAQsB,OAAOC,OAAUvB,EAAUqB,KAE9GzB,EAAMR,WAAWsB,KAAKV,GAEzByB,aAAaC,QAAQ,aAAcC,KAAKC,UAAUhC,EAAMR,cAE3DyC,cAAe,SAACjC,EAAD,GAA8C,IAApCI,EAAmC,EAAnCA,SAEmD,IAArEJ,EAAMP,YAAY2B,WAAU,SAACV,GAAD,OAAOA,EAAEM,SAAWZ,EAAQY,WACzDhB,EAAMP,YAAY4B,OAAOrB,EAAMP,YAAY2B,WAAU,SAACV,GAAD,OAAOA,EAAEM,SAAWZ,EAAQY,UAAS,GAG7FhB,EAAMP,YAAYqB,KAAKV,IAE1B8B,mBAAoB,SAAClC,EAAD,GAA4E,IAAlEI,EAAiE,EAAjEA,QACrBW,EAAOf,EAAMP,YAAYgB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWZ,EAAQY,UAC5DD,IACDA,EAAKoB,QAAU/B,EAAQ+B,UAG7BC,mBAAoB,SAACpC,EAAD,GAAoD,IAA1CI,EAAyC,EAAzCA,QACrBW,EAAOf,EAAMP,YAAYgB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWZ,EAAQY,UAC5DD,IACDA,EAAKsB,MAAQjC,EAAQiC,QAG3BC,WAAY,SAACtC,EAAD,GAAiD,IAAvCI,EAAsC,EAAtCA,QACnBJ,EAAMN,QAAUU,M,EASrBT,EAAa4C,QAHdpC,E,EAAAA,QAASE,E,EAAAA,SAAUC,E,EAAAA,WAAYE,E,EAAAA,WAAYK,E,EAAAA,cAAeM,E,EAAAA,iBAC1DI,E,EAAAA,iBAAkBU,E,EAAAA,cAAeC,E,EAAAA,mBAAoBE,E,EAAAA,mBAAoBrC,E,EAAAA,MACzEa,E,EAAAA,YAAa0B,E,EAAAA,WAAY/B,E,EAAAA,YAGpBiC,EAAY7C,EAAZ6C,QAWOC,EAPDC,YAAe,CAC1BF,UACAG,oBAAgBvD,I,2BDpIdP,K,UAAAA,E,YAAAA,E,WAAAA,M,KAML,IAAM+D,EAAW,8BAEXC,EAAU,IAAIC,IAAW,CAC5BC,QAAS,IACTC,cAAe,IAGZC,EAAO,SAACC,GAAD,OACV,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,O,SAGjCI,E,kFAAf,WACGC,EAAajE,EAAekE,GAD/B,qCAAAC,EAAA,yDACkDrD,EADlD,+BACiF,GAAIsD,EADrF,+BAC6F,EAItFF,IAAS3E,EAAY8E,IAL5B,gCAMuBd,EAAQe,SAAR,sBAAiB,4BAAAH,EAAA,sEACZI,MAAMN,EAAK,CAC3BO,OAAQN,EACRO,QAAS,CACNC,cAAc,UAAD,OAAY1E,MAJA,cACzB2E,EADyB,yBAOxBA,GAPwB,4CANxC,OAMMC,EANN,+CAgBuBrB,EAAQe,SAAR,sBAAiB,4BAAAH,EAAA,sEACZI,MAAMN,EAAK,CAC3BO,OAAQN,EACRO,QAAS,CACNC,cAAc,UAAD,OAAY1E,GACzB,eAAgB,oBAEnB6E,KAAMpC,KAAKC,UAAU5B,KAPO,cACzB6D,EADyB,yBASxBA,GATwB,4CAhBxC,QAgBMC,EAhBN,oBA8B2B,MAApBA,EAASE,QAAkBV,EAAQ,GA9B1C,wBA+BYW,EAASH,EAASH,QAAQO,IAAI,eAC9BC,EAAaF,EAAgC,IAAvBG,SAASH,EAAQ,IAAa,IAhChE,UAiCYpB,EAAKsB,GAjCjB,QAkCMjB,EAAUC,EAAKjE,EAAOkE,EAAMpD,EAASsD,EAAQ,GAlCnD,WAqC2B,MAApBQ,EAASE,OArChB,uBAsCY,IAAIK,MAAM,8BAtCtB,yBAyCwBP,EAASQ,OAzCjC,WAyCSC,EAzCT,SA2COT,EAASE,QAAU,KA3C1B,uBA4CY,IAAIK,MAAME,EAAOtC,MAAMuC,SA5CnC,iCA+CUD,GA/CV,6C,sBAkDe,IE1EHE,EAIAC,EASAC,EAgBAC,EF6CG,WAQG7F,GAAmB,OAAD,4HACP0E,MAAM,GAAD,OAAIjB,EAAJ,kBAAsBzD,EAAtB,UAAwC,CAAE2E,OAAQjF,EAAYoG,OAD5D,aACxBf,EADwB,QAGjBE,QAAU,KAHO,sBAIrB,IAAIK,MAAM,2BAJW,uBAOTP,EAASQ,OAPA,cAOxBC,EAPwB,yBASvBA,GATuB,8CARrB,WAoBExF,EAAkBG,GAAgB,OAAD,iHACtCiE,EADsC,UAC7BX,EAD6B,kBACXzD,GADW,kBAErCmE,EAAgBC,EAAKjE,EAAOT,EAAY8E,MAFH,8CApBnC,WAyBYrE,GAAgB,OAAD,iHAC9BiE,EAD8B,UACrBX,EADqB,iCAE7BU,EAAiBC,EAAKjE,EAAOT,EAAY8E,MAFZ,8CAzB3B,WAmCExE,EAAkBG,EAAekE,GAAe,OAAD,iHACpDD,EADoD,UAC3CX,EAD2C,kBACzBzD,EADyB,4BAEnDmE,EAAgBC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEzB,UAFG,8CAnCjD,WAwCKrE,EAAkBG,EAAe4F,GAAiB,OAAD,iHACzD3B,EADyD,UAChDX,EADgD,kBAC9BzD,EAD8B,kBACZ+F,GADY,kBAExD5B,EAAgBC,EAAKjE,EAAOT,EAAYsG,MAFgB,8CAxCtD,WA6CS7F,GAAgC,IAAD,sIAAhB8F,EAAgB,+BAAJ,GACvC7B,EAD2C,UAClCX,EADkC,iCAE1CU,EAA0BC,EAAKjE,EAAOT,EAAY8E,IAAK,CAAE0B,MAAOD,KAFtB,8CA7CxC,YAkDK9F,EAAeH,GAAmB,OAAD,iHACzCoE,EADyC,UAChCX,EADgC,kBACdzD,EADc,4BAExCmE,EAAsBC,EAAKjE,EAAOT,EAAY8E,MAFN,8CAlDtC,YAuDErE,EAAeH,EAAkB8B,EAAkBuC,GAAe,OAAD,iHACtED,EADsE,UAC7DX,EAD6D,kBAC3CzD,EAD2C,4BAErEmE,EAAgBC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEhE,WAAUuC,UAFW,8CAvDnE,YA4DGlE,EAAeH,EAAkB6B,GAAiB,OAAD,iHACvDuC,EADuD,UAC9CX,EAD8C,kBAC5BzD,EAD4B,kBACV6B,GADU,kBAEtDsC,EAAoBC,EAAKjE,EAAOT,EAAY8E,MAFU,8CA5DpD,YAiEMrE,GAAgB,OAAD,iHACxBiE,EADwB,UACfX,EADe,mCAEvBU,EAAmBC,EAAKjE,EAAOT,EAAY8E,MAFpB,8CAjErB,YAsEOrE,EAAe2B,GAAmB,OAAD,iHAC3CsC,EAD2C,UAClCX,EADkC,yBACT3B,EADS,gCAE1CqC,EAAqBC,EAAKjE,EAAOT,EAAY8E,MAFH,8CAtExC,YA2EMrE,EAAe2B,GAAmB,OAAD,iHAC1CsC,EAD0C,UACjCX,EADiC,2BACN3B,GADM,kBAEzCqC,EAA4BC,EAAKjE,EAAOT,EAAY8E,MAFX,8CA3EvC,YAgFIrE,EAAeqC,GAAiB,OAAD,iHACtC4B,EADsC,UAC7BX,EAD6B,2BACFjB,EADE,kCAErC2B,EAAkBC,EAAKjE,EAAOT,EAAY8E,MAFL,8CAhFnC,YAqFQrE,EAAeH,EAAkB6B,EAAgBsE,EAAcC,GAAmB,OAAD,iHAC5FhC,EAD4F,UACnFX,EADmF,kBACjEzD,EADiE,sCAE3FmE,EAAoBC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEjE,SAAQsE,OAAMC,cAFyB,8CArFzF,YA0FIjG,EAAeH,EAAkB6B,EAAgBsE,EAAiBC,GAAmB,OAAD,iHAC3FhC,EAD2F,UAClFX,EADkF,kBAChEzD,EADgE,kCAE1FmE,EAAoBC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEjE,SAAQsE,OAAMC,cAFwB,8CA1FxF,YA+FOjG,EAAekG,EAAqBxE,EAAgBsE,EAAiBC,GAAmB,OAAD,iHACjGhC,EADiG,UACxFX,EADwF,4BAC5D4C,EAD4D,8BAEhGlC,EAA2BC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEjE,SAAQsE,OAAMC,cAFuB,8CA/F9F,YAoGMjG,EAAeH,EAAkB6B,EAAgBsE,EAAcC,GAAmB,OAAD,iHAC1FhC,EAD0F,UACjFX,EADiF,kBAC/DzD,EAD+D,kBAC7C6B,EAD6C,+BAEzFsC,EAAoBC,EAAKjE,EAAOT,EAAYsG,IAAK,CAAEG,OAAMC,cAFgC,8CApGvF,YAyGWjG,EAAeH,EAAkB6B,EAAgBM,GAAsB,OAAD,iHACpFiC,EADoF,UAC3EX,EAD2E,kBACzDzD,EADyD,mCAEnFmE,EAAyBC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEjE,SAAQM,iBAFkB,8CAzGjF,YA8GUhC,EAAeH,EAAkBsG,GAAiB,OAAD,iHAC9DlC,EAD8D,UACrDX,EADqD,kBACnCzD,EADmC,yBACVsG,GADU,kBAE7DnC,EAAyBC,EAAKjE,EAAOT,EAAY8E,MAFY,8CA9G3D,YAmHGrE,EAAeH,EAAkB6B,GAAiB,OAAD,iHACvDuC,EADuD,UAC9CX,EAD8C,kBAC5BzD,EAD4B,gCAEtDmE,EAAyBC,EAAKjE,EAAOT,EAAYoG,KAAM,CAAEjE,YAFH,8C,yBG1LtD0E,GAAmB,kBAC7B,eAAC,KAAD,CACGC,MAAO,EACPC,MAAO,IACPC,OAAQ,GACRC,QAAQ,aACRC,gBAAgB,UAChBC,gBAAgB,UANnB,SAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,UAI5CO,GAAa,kBACvB,gBAAC,KAAD,CACGT,MAAO,EACPC,MAAO,IACPC,OAAQ,GACRC,QAAQ,aACRC,gBAAgB,UAChBC,gBAAgB,UANnB,UAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,KAAKC,GAAG,KAAKP,MAAM,MAAMC,OAAO,OACrD,uBAAMnF,EAAE,IAAIuF,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,WAI7CQ,GAAe,kBACzB,eAAC,KAAD,CACGV,MAAO,EACPC,MAAO,IACPC,OAAQ,GACRC,QAAQ,aACRC,gBAAgB,UAChBC,gBAAgB,UANnB,SAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,KAAKC,GAAG,KAAKP,MAAM,MAAMC,OAAO,UAI9CS,GAAgB,kBAC1B,gBAAC,KAAD,CACGX,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,UANnB,UAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,KAAKC,GAAG,KAAKP,MAAM,MAAMC,OAAO,OACrD,uBAAMnF,EAAE,IAAIuF,EAAE,KAAKC,GAAG,KAAKC,GAAG,KAAKP,MAAM,MAAMC,OAAO,WAI/CU,GAAiB,kBAC3B,gBAAC,KAAD,CACGZ,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,UANnB,UAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,OACnD,uBAAMnF,EAAE,IAAIuF,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,WAI7CW,GAAmB,kBAC7B,uBAAKpB,UAAU,iDAAf,UACG,sBAAKA,UAAU,kEAAf,SACG,eAAC,KAAD,CACGO,MAAO,EACPC,MAAO,IACPC,OAAQ,GACRC,QAAQ,aACRC,gBAAgB,UAChBC,gBAAgB,UANnB,SAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,KAAKC,GAAG,KAAKP,MAAM,MAAMC,OAAO,WAG3D,sBAAKT,UAAU,eAAf,SACG,gBAAC,KAAD,CACGO,MAAO,EACPC,MAAO,IACPC,OAAQ,GACRC,QAAQ,aACRC,gBAAgB,UAChBC,gBAAgB,UANnB,UAQG,uBAAMtF,EAAE,IAAIuF,EAAE,IAAIC,GAAG,MAAMC,GAAG,MAAMP,MAAM,MAAMC,OAAO,OACvD,uBAAMnF,EAAE,KAAKuF,EAAE,KAAKC,GAAG,MAAMC,GAAG,MAAMP,MAAM,MAAMC,OAAO,OACzD,uBAAMnF,EAAE,KAAKuF,EAAE,KAAKC,GAAG,MAAMC,GAAG,MAAMP,MAAM,MAAMC,OAAO,gBCFtDY,GAxFA,WACZ,IAAM1H,EAAO2H,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAC5CO,EAAUoH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAAjDC,MAFU,EAGsBqH,oBAAS,GAH/B,mBAGXC,EAHW,KAGGC,EAHH,KAIZC,EAAMC,iBAAuB,MAC7BC,EAAWC,cAEjBC,qBAAU,WAEP,IAAMC,EAAY,SAACC,GACI,OAAhBN,EAAIO,SAAqBP,EAAIO,QAAQC,SAASF,EAAEG,SACjDV,GAAgB,IAQtB,OAJID,GACDY,OAAOC,iBAAiB,YAAaN,GAGjC,WACJK,OAAOE,oBAAoB,YAAaP,MAE3C,CAACP,IAQJ,OACG,uBAAKxB,UAAU,kFAAf,UACG,uBAAKA,UAAU,oBAAf,UACG,uBAAKA,UAAU,qBAAf,UACG,yBAAQ5B,KAAK,SAAS4B,UAAU,mCAAmCuC,QAAS,kBAAMd,GAAgB,IAAlG,SACG,sBAAKzB,UAAU,eAAewC,MAAM,6BAA6B9B,QAAQ,YAAY+B,KAAK,eAAeC,cAAY,OAArH,SACG,uBAAMC,SAAS,UAAUC,EAAE,qHAAqHC,SAAS,gBAG7JrB,GAEC,sBAAKE,IAAKA,EAAK1B,UAAU,+IAA+I8C,KAAK,OAAOC,mBAAiB,WAAWC,kBAAgB,eAAhO,SACG,uBAAKhD,UAAU,OAAO8C,KAAK,OAA3B,UACG,oBAAG9C,UAAU,kCAAb,mBACA,oBAAGA,UAAU,oBAAb,SAAmC9F,IACnC,yBAAQkE,KAAK,SAAS4B,UAAU,sFAAsF8C,KAAK,WAAWP,QArB5I,WACZX,EAASjH,KACT8B,aAAawG,WAAW,WAmBN,kCAOOjJ,IAAlBL,EAAKI,SACD,eAAC,GAAD,IAEC,gBAAC,IAAMmJ,SAAP,WACG,8BAAI,eAAC,IAAD,CAASC,GAAG,IAAInD,UAAU,wBAA1B,SAAmDrG,EAAKI,aAC5D,wBAAMiG,UAAU,6BAAhB,UAA+CrG,EAAKC,QAAQwJ,iBAA5D,oBAIZ,uBAAKpD,UAAU,gBAAf,UACG,eAAC,IAAD,CAASmD,GAAG,SAASE,MAAM,QAAQrD,UAAU,qCAA7C,SACG,uBAAKwC,MAAM,6BAA6BC,KAAK,eAAea,YAAa,IAAK5C,QAAQ,sBAAtF,UACG,uBAAMkC,EAAE,4BACR,uBAAMA,EAAE,ysBAGd,eAAC,IAAD,CAASO,GAAG,SAASE,MAAM,QAAQrD,UAAU,qCAA7C,SACG,sBAAKwC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,oLAG7E,eAAC,IAAD,CAASO,GAAG,WAAWE,MAAM,UAAUrD,UAAU,qCAAjD,SACG,sBAAKwC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,uFAG7E,eAAC,IAAD,CAASO,GAAG,WAAWE,MAAM,YAAYrD,UAAU,qCAAnD,SACG,sBAAKwC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,gLCQ1Ec,GAzFG,WAAO,IAAD,EACWnC,mBAAS,IADpB,mBACdoC,EADc,KACJC,EADI,OAEarC,mBAAS,IAFtB,mBAEdsC,EAFc,KAEHC,EAFG,OAGavC,oBAAS,GAHtB,mBAGdwC,EAHc,KAGHC,EAHG,OAIOzC,oBAAS,GAJhB,mBAId0C,EAJc,KAINC,EAJM,OAKK3C,mBAAS,IALd,mBAKdtE,EALc,KAKPkH,EALO,KAMfvC,EAAWC,cANI,EAOWN,oBAAS,GAPpB,mBAOd6C,EAPc,KAOJC,EAPI,KASfC,EAAS,uCAAG,WAAOtC,GAAP,iBAAA3D,EAAA,yDACfgG,GAAY,GACZrC,EAAEuC,kBACER,EAHW,0CAKWS,EAAab,GALxB,cAKHzJ,EALG,OAMTuC,aAAaC,QAAQ,SAAUC,KAAKC,UAAU,CAAE7C,SAAUG,EAAMP,KAAKI,SAAUG,MAAOA,EAAMA,SAC5F0H,EAAS3G,EAAS,CAAElB,SAAUG,EAAMP,KAAKI,SAAUG,MAAOA,EAAMA,SAPvD,UAQUsK,EAAYtK,EAAMP,KAAKI,SAAUG,EAAMA,OARjD,QAQHP,EARG,OASTiI,EAAS7G,EAAQpB,IATR,kDAWT0K,GAAY,GACZF,EAAS,KAAe3E,SAZf,0DAAH,sDAiBTiF,EAAK,uCAAG,WAAOzC,GAAP,eAAA3D,EAAA,yDACXgG,GAAY,GACZrC,EAAEuC,kBACER,EAHO,0CAMcS,EAAYb,EAAUE,GANpC,OAMClK,EAND,OAQL8C,aAAaC,QAAQ,SAAUC,KAAKC,UAAU,CAAE7C,SAAU4J,EAAUzJ,MAAO2J,KAC3EjC,EAAS3G,EAAS,CAAElB,SAAU4J,EAAUzJ,MAAO2J,KAC/CjC,EAAS7G,EAAQpB,IAVZ,kDAYL0K,GAAY,GACZF,EAAS,KAAe3E,SAbnB,0DAAH,sDAkBLkF,EAAW,WAAO,IAAD,EACdC,EAAK,UAAGC,SAASC,cAAc,eAA1B,aAAG,EAAgCC,gBAC9Cd,EAAaW,IAGhB,OACG,uBAAK3E,UAAU,oFAAf,UACG,qBAAIA,UAAU,WAAd,iCACA,qBAAIA,UAAU,OAAd,0CACE/C,GACI,oBAAG+C,UAAU,yCAAb,SAAwD/C,IAC9D,sBAAK+C,UAAU,2BAAf,SACKiE,EAEI,uBAAKjE,UAAU,iEAAf,UACG,wBAAMA,UAAU,OAAhB,UACG,+BACG,wBAAO5B,KAAK,OAAO2G,YAAY,WAAW/E,UAAU,2EAA2EgF,SAAU,SAAChD,GAAQ4B,EAAY5B,EAAEG,OAAO8C,OAAQP,KAAeQ,UAAQ,MAEzM,sBAAKlF,UAAU,OAAf,SACG,wBAAO5B,KAAK,OAAO2G,YAAY,QAAQ/E,UAAU,2EAA2EgF,SAAU,SAAChD,GAAQ8B,EAAa9B,EAAEG,OAAO8C,OAAQP,SAEhL,sBAAK1E,UAAU,OAAf,SACG,yBAAQ5B,KAAK,SAAS4B,UAAU,wIAAwIoE,SAAUA,EAAU7B,QAASkC,EAArM,wBAGN,qBAAGzE,UAAU,2BAAb,8BAAyD,yBAAQ5B,KAAK,SAAS4B,UAAU,wCAAwCuC,QAAS,kBAAM2B,GAAU,IAAjG,4BAI5D,uBAAKlE,UAAU,iEAAf,UACG,wBAAMA,UAAU,OAAhB,UACG,wBAAO5B,KAAK,OAAO2G,YAAY,WAAW/E,UAAU,2EAA2EgF,SAAU,SAAChD,GAAQ4B,EAAY5B,EAAEG,OAAO8C,OAAQP,KAAeQ,UAAQ,IACtM,sBAAKlF,UAAU,OAAf,SACG,yBAAQ5B,KAAK,SAAS4B,UAAU,wIAAwIoE,SAAUA,EAAU7B,QAAS+B,EAArM,0BAGN,qBAAGtE,UAAU,2BAAb,sCAAiE,yBAAQ5B,KAAK,SAAS4B,UAAU,wCAAwCuC,QAAS,kBAAM2B,GAAU,IAAjG,iC,mBHtF1EzE,K,mBAAAA,M,cAIAC,K,gBAAAA,E,YAAAA,E,qBAAAA,E,oBAAAA,E,oBAAAA,E,iBAAAA,M,cASAC,K,sBAAAA,E,sCAAAA,E,0BAAAA,E,0BAAAA,E,YAAAA,E,YAAAA,E,sBAAAA,E,gBAAAA,E,oBAAAA,E,uBAAAA,E,2BAAAA,E,oBAAAA,E,mBAAAA,M,cAgBAC,K,kBAAAA,E,YAAAA,E,sBAAAA,M,SI3BAuF,G,oCCuIGC,GA1HH,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,KAAM3J,EAAiB,EAAjBA,KAAiB,EACpB2F,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAA3DC,EADwC,EACxCA,MAAOH,EADiC,EACjCA,SACPH,EAAY0H,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAAnDC,QACFgI,EAAWC,cAH+B,EAIZN,qBAJY,mBAIzCnH,EAJyC,KAI7BmL,EAJ6B,OAKJhE,qBALI,mBAKzCiE,EALyC,KAKzBC,EALyB,OAMAlE,mBAAiB,GANjB,mBAMzCmE,EANyC,KAMvBC,EANuB,OAOlBpE,oBAAkB,GAPA,mBAOzCqE,EAPyC,KAOhCC,EAPgC,OAQtBtE,mBAAiB,IARK,mBAQzCtE,EARyC,KAQlCkH,EARkC,KAS1C2B,EAAgBR,EAAO,uFAAyF,SAEtHxD,qBAAU,YACQ,uCAAG,4BAAAzD,EAAA,yDACV1C,EAAKE,SADK,iEAEK2I,GAActK,EAAOyB,EAAKE,UAF/B,OAETgD,EAFS,OAE0ChD,SAASkK,YAElER,EAAc,YAAI1G,GAAMmH,MAAM,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE9B,OAAS0J,EAAE1J,OAAU,EAAK0J,EAAE1J,OAAS8B,EAAE9B,QAAW,EAAI,MAJnF,2CAAH,qDAMf2J,KACA,IAGH,IAGMC,EAAc,WACjB,IAAKX,EAAkB,OAAO,EAE9B,IAAMY,EAAWC,KAAKC,MAAM3K,EAAK4K,eAAiBf,EAAegB,eAEjE,OAAIJ,GAAYZ,EAAeiB,aAAejB,EAAekB,QAAU9M,GAAWwM,GAAYZ,EAAemB,mBAAqBP,GAAY,IACpIA,EACJA,EAAWZ,EAAemB,mBAAqBnB,EAAemB,mBAAqB,IAC/EnB,EAAemB,kBACnBN,KAAKC,MAAM1M,GAAW4L,EAAeiB,aAAejB,EAAekB,SAAW,IAC1E,IAGHL,KAAKC,MAAM1M,GAAW4L,EAAeiB,aAAejB,EAAekB,UAGvEE,EAAc,uCAAG,4BAAAvI,EAAA,yDACfmH,EADe,iEAGjBK,GAAW,GAHM,SAIIrB,GAAkBtK,EAAOH,EAAU4B,EAAKJ,GAAIiK,EAAejJ,OAAQmJ,GAJvE,OAIXnG,EAJW,OAKjBqC,EAAS1G,EAAWqE,EAAO3F,UAC3BgI,EAASxG,EAAWmE,EAAO5D,OAC3B8J,OAAkBzL,GAClBqL,IARiB,kDAUjBlB,EAAS,KAAe3E,SAVP,0DAAH,qDAcpB,OACG,uBAAKQ,UAAW8F,EAAhB,UACG,sBAAK9F,UAAU,8DAA8DuC,QAAS,WAAQkD,OAAkBzL,GAAYqL,OAC5H,sBAAKrF,UAAU,2GAAf,SACG,uBAAKA,UAAU,oCAAf,UACG,qBAAIA,UAAU,6BAAd,wBACE/C,GACI,oBAAG+C,UAAU,yDAAb,SAAwE/C,IAC9E,uBAAK+C,UAAU,WAAf,UACK5F,EASI,sBAAK4F,UAAU,WAAf,gBACI5F,QADJ,IACIA,OADJ,EACIA,EAAYoC,KAAI,SAACqK,GAAD,OACd,uBAAK7G,UAAS,oEAA+DwF,EAAiB,WAAa,GAA7F,aAAiH,OAAdA,QAAc,IAAdA,OAAA,EAAAA,EAAgBjJ,UAAWsK,EAAOtK,OAAS,OAAS,IAArK,UACG,iCACG,qBAAGyD,UAAU,gBAAb,WAvDXiF,EAuDuD4B,EAAOtK,OAtDjF0I,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,MAsDzD,IAA6D,wBAAMpH,UAAU,yCAAhB,UAA2D6G,EAAOF,kBAAkBvD,iBAApF,yBAC7D,qBAAGpD,UAAU,UAAb,WAA0B6G,EAAOJ,aAAeI,EAAOH,QAAQtD,iBAA/D,UAA2FyD,EAAOJ,aAAeI,EAAOH,OAAU,EAAI,IAAM,GAA5I,mBAEAlB,GAEG,+BACG,yBACGpH,KAAK,SACL4B,UAAU,2IACVuC,QAAS,kBAAMkD,EAAkBoB,IACjCzC,SAAUyC,EAAOF,mBAAqB,EAJzC,qBARoKE,EAAOtK,OAASsK,EAAOF,kBAAoBE,EAAOJ,aAAeI,EAAOL,eArD9P,IAACvB,OA4CD,gBAAC,IAAM/B,SAAP,WACG,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,OA2BPsC,GAEO,uBAAKxF,UAAU,qCAAf,UACG,uBAAKA,UAAU,OAAf,UACG,wBAAO5B,KAAK,SAASiJ,IAAK,EAAGC,IAAKnB,IAAelB,MAAOS,EAAkBX,YAAY,WAAW/E,UAAU,8FAA8FgF,SAAU,SAAChD,GAAD,OAAO2D,EAAoBvG,SAAS4C,EAAEG,OAAO8C,MAAO,QACvQ,yBAAQ7G,KAAK,SAAS4B,UAAU,qEAAqEuC,QAAS,kBAAMoD,EAAoBQ,IAAxI,oBAEH,0BACG/H,KAAK,SACL4B,UAAU,6IACVoE,SAAWsB,GAAoBF,EAAeiB,aAAejB,EAAekB,SAAW,GAAQhB,GAAoBF,EAAeiB,aAAejB,EAAekB,QAAU9M,GAAagM,EACvLrD,QAASqE,EAJZ,UAMG,wBAAM5G,UAAW4F,EAAU,SAAW,SAAtC,2BAAgEF,GAAoBF,EAAeiB,aAAejB,EAAekB,SAAStD,iBAA1I,UAAqKsC,GAAoBF,EAAeiB,aAAejB,EAAekB,QAAU,EAAI,IAAM,MAC1P,uBAAM1G,UAAY4F,EAAqB,SAAX,SAA5B,+BAEH,yBAAQxH,KAAK,SAAS4B,UAAU,uCAAuCuC,QAAS,WAAQkD,OAAkBzL,GAAYmK,EAAS,IAAKwB,EAAoB,IAAxJ,iCC8Ef4B,GA5LF,SAAC,GAAuC,IAAD,IAApClC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,KAAM3J,EAAiB,EAAjBA,KAAiB,EACrB2F,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAA3DC,EADyC,EACzCA,MAAOH,EADkC,EAClCA,SACPO,EAAYgH,aAAY,SAAC1G,GAAD,OAAqBA,KAA7CN,QACFsH,EAAWC,cAHgC,EAIbN,qBAJa,mBAI1CnH,EAJ0C,KAI9BmL,EAJ8B,OAKLhE,qBALK,mBAK1CiE,EAL0C,KAK1BC,EAL0B,OAMTlE,mBAAiB,GANR,mBAM1CiG,EAN0C,KAM5BC,EAN4B,OAOnBlG,oBAAkB,GAPC,mBAO1CqE,EAP0C,KAOjCC,EAPiC,OAQvBtE,mBAAiB,IARM,mBAQ1CtE,EAR0C,KAQnCkH,EARmC,KAS3C2B,EAAgBR,EAAO,uFAAyF,SAEtHxD,qBAAU,YACQ,uCAAG,4BAAAzD,EAAA,yDACV1C,EAAKE,SADK,iEAEK2I,GAActK,EAAOyB,EAAKE,UAF/B,OAETgD,EAFS,OAE0ChD,SAASkK,YAClER,EAAc1G,GAHC,2CAAH,qDAKfqH,KACA,IAEH,IAAMC,EAAc,WACjB,OAAKX,EAEDA,EAAerF,UAAY,IACrBqF,EAAerF,SAGlB,IANuB,GAS3BuH,EAAU,uCAAG,4BAAArJ,EAAA,kEAERmH,EAFQ,wDAGbK,GAAW,GAHE,SAIQrB,GAActK,EAAOH,EAAU4B,EAAKJ,GAAIiK,EAAetF,KAAMsH,GAJrE,OAIPjI,EAJO,OAKbqC,EAAS1G,EAAWqE,EAAO3F,UAC3BgI,EAASxG,EAAWmE,EAAO5D,OAC3B8J,OAAkBzL,GAClBqL,IARa,kDAUblB,EAAS,KAAe3E,SACxBqG,GAAW,GAXE,0DAAH,qDAeV8B,EAAY,uCAAG,4BAAAtJ,EAAA,kEAEVmH,EAFU,wDAGfK,GAAW,GAHI,SAIMrB,GAAgBtK,EAAOH,EAAU4B,EAAKJ,GAAIiK,EAAetF,KAAMsH,GAJrE,8BAKQhD,GAAatK,EAAOH,EAAU4B,EAAKJ,IAL3C,OAKTqM,EALS,OAMfhG,EAASxG,EAAWwM,EAASjM,OAC7B8J,OAAkBzL,GAClBqL,IARe,kDAUflB,EAAS,KAAe3E,SACxBqG,GAAW,GAXI,0DAAH,qDAeZgC,EAAY,uCAAG,4BAAAxJ,EAAA,kEAEVmH,GAAmB7J,EAAKE,SAFd,wDAGfgK,GAAW,GAHI,SAIMrB,GAAiBtK,EAAOyB,EAAKE,SAAUF,EAAKJ,GAAIiK,EAAetF,KAAMsH,GAJ3E,8BAKQhD,GAAatK,EAAOH,EAAU4B,EAAKJ,IAL3C,OAKTqM,EALS,OAMfhG,EAASxG,EAAWwM,EAASjM,OAC7B8J,OAAkBzL,GAClBqL,IARe,kDAUflB,EAAS,KAAe3E,SACxBqG,GAAW,GAXI,0DAAH,qDAeZiC,EAAY,WACf,GAAItC,IAAc,OAAKpL,QAAL,IAAKA,OAAL,EAAKA,EAAYiB,MAAK,SAACC,GAAD,OAAOA,EAAEiB,SAAWiJ,EAAetF,SAAQ,CAChF,IAAMA,EAAI,OAAG9F,QAAH,IAAGA,OAAH,EAAGA,EAAYiB,MAAK,SAACC,GAAD,OAAOA,EAAEiB,SAAWiJ,EAAetF,QACjE,OAAQsH,GAAgBtH,EAAKuG,aAAevG,EAAKwG,SAAStD,iBAE7D,OAAO,MAOV,OACG,uBAAKpD,UAAW8F,EAAhB,UACG,sBAAK9F,UAAU,8DAA8DuC,QAAS,WAAQkD,OAAkBzL,GAAYqL,OAC5H,sBAAKrF,UAAS,yGAAoGwF,EAAiB,YAAc,IAAjJ,SACG,uBAAKxF,UAAU,oCAAf,UACG,qBAAIA,UAAU,6BAAd,wBACE/C,GACI,oBAAG+C,UAAU,yDAAb,SAAwE/C,IAC9E,uBAAK+C,UAAU,WAAf,UACK5F,EASI,sBAAK4F,UAAU,WAAf,mBACIrE,EAAKoM,aADT,aACI,EAAYvL,KAAI,SAACuL,GAAD,OACd,uBAAK/H,UAAS,oEAA+DwF,EAAiB,WAAa,GAA7F,aAAiH,OAAdA,QAAc,IAAdA,OAAA,EAAAA,EAAgBtF,QAAS6H,EAAM7H,KAAO,OAAS,IAAhK,UACG,iCACG,qBAAGF,UAAU,gBAAb,WAzBXiF,EAyBuD8C,EAAM7H,KAxBhF+E,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,MAwBzD,IAA0D,wBAAMpH,UAAU,yCAAhB,UAA2D+H,EAAM5H,SAASiD,iBAA1E,0BAC9C,OAAVhJ,QAAU,IAAVA,OAAA,EAAAA,EAAYgC,MAAK,SAACd,GAAD,OAAOA,EAAEiB,SAAWwL,EAAM7H,UACvC,qBAAGF,UAAU,UAAb,UAAyB8H,IAAzB,2BAENtC,GAEG,+BACG,yBACGpH,KAAK,SACL4B,UAAU,sIAEVuC,QAAS,kBAAMkD,EAAkBsC,IAJpC,wBAT+JA,EAAM7H,KAAO6H,EAAM5H,SAAW4H,EAAMC,aAvBrN,IAAC/C,OAcD,gBAAC,IAAM/B,SAAP,WACG,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,OA4BPsC,GAEO,uBAAKxF,UAAU,qCAAf,UACG,wBAAO5B,KAAK,SAASiJ,IAAK,EAAGC,IAAK9B,EAAerF,SAAU8E,MAAOuC,EAAczC,YAAY,WAAW/E,UAAU,qGAAqGgF,SAAU,SAAChD,GAAD,OAAOyF,EAAgBrI,SAAS4C,EAAEG,OAAO8C,MAAO,QAChR,yBAAQ7G,KAAK,SAAS4B,UAAU,kDAAkDuC,QAAS,kBAAMkF,EAAgBtB,IAAjH,+BACA,+BACMP,EAmCG,gDAjCA,gBAAC,IAAM1C,SAAP,WACG,0BACG9E,KAAK,SACL4B,UAAU,6IACVoE,SAAWoD,GAAgB,GAAM5B,EACjCrD,QAASoF,EAJZ,oBAMYH,EANZ,aAQE,UAAAlN,EAAQe,MAAK,SAAC4M,GAAD,aAAYA,EAAO1L,UAAP,UAAkBZ,EAAKE,gBAAvB,aAAkB,EAAekL,MAAM,KAAK,cAArE,eAA0EmB,UAAU9L,MAAK,SAACP,GAAD,OAAcF,EAAKE,WAAaA,EAASU,QAAUV,EAASuC,OAASsB,EAAayI,aAEvK,0BACG/J,KAAK,SACL4B,UAAU,sJACVoE,SAAWoD,GAAgB,GAAM5B,EACjCrD,QAASsF,EAJZ,oBAMYL,EANZ,YAQC,KACP,yBACGpJ,KAAK,SACL4B,UAAU,8IACVoE,SAAWoD,GAAgB,GAAM5B,IAAakC,IAC9CvF,QAASmF,EAJZ,SAMqB,OAAhBI,IACG,wBAAM9H,UAAW4F,EAAU,SAAW,SAAtC,sBAA2DkC,IAA3D,cACA,0DAQpB,0BAAQ1J,KAAK,SAAS4B,UAAU,iEAAiEuC,QAAS,WAAQkD,OAAkBzL,GAAYmK,EAAS,IAAKsD,EAAgB,IAA9K,UACG,sBAAKzH,UAAU,UAAUwC,MAAM,6BAA6B9B,QAAQ,YAAY+B,KAAK,eAArF,SACG,uBAAME,SAAS,UAAUC,EAAE,wIAAwIC,SAAS,cAFlL,yBCxDfuF,GAlHA,SAAC,GAEF,IADX/C,EACU,EADVA,YAAagD,EACH,EADGA,UAAW/C,EACd,EADcA,KAAM3J,EACpB,EADoBA,KACpB,EACkB2F,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAA3DC,EADE,EACFA,MAAOH,EADL,EACKA,SACT6H,EAAWC,cAFP,EAGwBN,qBAHxB,mBAGH2G,EAHG,KAGQI,EAHR,OAIgB/G,mBAAiB,IAJjC,mBAIHtE,EAJG,KAIIkH,EAJJ,OAK4B5C,oBAAS,GALrC,mBAKHgH,EALG,KAKUC,EALV,KAMJ1C,EAAgBR,EAAO,uFAAyF,SAEtHxD,qBAAU,YACW,uCAAG,4BAAAzD,EAAA,yDACb1C,EAAKE,SADQ,iEAEC2I,GAAiBtK,EAAOyB,EAAKE,SAASkL,MAAM,KAAK,IAFlD,OAEZ0B,EAFY,OAEuDP,UACzEI,EAAaG,GAHK,2CAAH,qDAKlBC,KACA,IAEH,IAAMC,EAAgB,uCAAG,WAAOvK,EAAoBvC,GAA3B,6CAAAwC,EAAA,yDAA6CC,IAA7C,0CAGfF,IAASsB,EAAayI,UAAYxM,EAAKE,WAAaA,EAHrC,gCAIA2I,GAAatK,EAAOH,EAAU4B,EAAKJ,IAJnC,OAIhBgE,EAJgB,OAIwCqJ,WAJxC,wCAMApE,GAAqBtK,EAAOH,EAAU4B,EAAKJ,GAAIM,GAN/C,QAMhB0D,EANgB,OAM0DqJ,WAN1D,eAQnBhH,EAASnG,EAAc8D,IACvB8F,IATmB,UAWOb,GAAatK,EAAOH,EAAU4B,EAAKJ,IAX1C,QAWbsN,EAXa,OAYnBjH,EAASxG,EAAWyN,EAAYlN,OAZb,4DAcX6D,EAdW,EAcXA,UAEJlB,GAASiK,GAAe/I,GAAWA,EAAQsJ,WAAW,+CAhBvC,sBAiBVC,EAAqBvJ,EAAQwJ,MAAM,QAjBzB,kCAoBJC,EAAO7J,SAAS2J,EAAmB,GAAI,IApBnC,UAqBWvE,GAAkBtK,EAAOH,EAAU4B,EAAKJ,GAAIoE,EAAUuJ,KAAMD,GArBvE,QAqBJ1J,EArBI,OAsBVqC,EAAS1G,EAAWqE,EAAO3F,UAC3BgI,EAASxG,EAAWmE,EAAO5D,OAC3BgN,EAAiBvK,EAAMvC,GAAU,GAxBvB,mDA0BVsI,EAAS,KAAa3E,SA1BZ,mCA8BhB2E,EAAS3E,GAELpB,IAASsB,EAAayI,SAhCV,kCAiCW3D,GAAetK,EAAOH,GAjCjC,iBAiCLD,EAjCK,EAiCLA,MACR8H,EAASpG,EAAY1B,IACrBuO,EAAU7I,GAnCG,kEAAH,wDAyCtB,OACG,uBAAKQ,UAAW8F,EAAhB,UACG,sBAAK9F,UAAU,8DAA8DuC,QAAS8C,IACtF,sBAAKrF,UAAU,2GAAf,SACG,uBAAKA,UAAU,oCAAf,UACG,qBAAIA,UAAU,6BAAd,6BACA,sBAAKA,UAAU,eAAf,SACG,yBAAOmJ,QAAQ,cAAcnJ,UAAU,mCAAvC,UACG,wBAAO5B,KAAK,WAAW7C,GAAG,cAAcd,KAAK,cAAc2O,QAASb,EAAavD,SAAU,SAAChD,GAAD,OAAOwG,EAAexG,EAAEG,OAAOiH,YAC1H,uBAAMpJ,UAAU,OAAhB,kDAGJ/C,GACC,oBAAG+C,UAAU,yDAAb,SAAwE/C,IAC3E,sBAAK+C,UAAU,WAAf,SACKkI,EASI,sBAAKlI,UAAU,WAAf,SACIkI,EAAU1L,KAAI,SAACX,GAAD,OACZ,uBAAKmE,UAAU,yCAAf,UACG,iCACG,6BAAKnE,EAASpB,OACd,oBAAGuF,UAAU,wBAAb,SAAuCnE,EAASU,YAEnD,+BACKZ,EAAKE,WAAaA,EAASU,QAAUV,EAASuC,OAASsB,EAAayI,SACjE,oBAAGnI,UAAU,uCAAb,8BAEC,yBACG5B,KAAK,SACL4B,UAAU,sIACVuC,QAAS,kBAAMoG,EAAiB9M,EAASuC,KAAMvC,EAASU,SAH3D,SAIGV,EAASuC,OAASsB,EAAayI,UAAYxM,EAAKE,WAAaA,EAASU,OAAS,OAAS,eAb1CV,EAASU,OAASV,EAASpB,WAT9F,gBAAC,IAAMyI,SAAP,WACG,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,kBClFZmG,GAZW,SAACC,GAAkB,IAClCC,EAAcD,EAAdC,UAER,OACG,sBAAKvJ,UAAU,sCAAf,SACG,sBAAKA,UAAU,iCAAiCwJ,MAAO,CAAEhJ,MAAM,GAAD,OAAK+I,EAAL,KAAmBE,WAAY,mBAA7F,SACG,+B,kBJVAtE,O,mBAAAA,I,aAAAA,I,gBAAAA,Q,KKeZ,IAgKeuE,GAhKI,SAAC,GAEN,IADXC,EACU,EADVA,KAAMC,EACI,EADJA,MAAOC,EACH,EADGA,OAAQ5B,EACX,EADWA,OAAQ6B,EACnB,EADmBA,SAAUC,EAC7B,EAD6BA,WAAYC,EACzC,EADyCA,WAAYC,EACrD,EADqDA,aAkBzDC,EAAgB,SAACjF,GAEhB0E,EAAKvL,KAAK+L,SAAWhF,GAAWiD,OAC7BgC,OAAOC,MAAMjL,SAAS6F,EAAO,KAC9B6E,EAAS,6BAAKH,GAAN,IAAYvL,KAAK,6BAAMuL,EAAKvL,MAAZ,IAAkB8B,KAAM+E,OAEhD6E,EAAS,6BAAKH,GAAN,IAAYvL,KAAK,6BAAMuL,EAAKvL,MAAZ,IAAkB+B,SAAUf,SAAS6F,EAAO,SAGvE6E,EAAS,6BAAKH,GAAN,IAAYvL,KAAK,6BAAMuL,EAAKvL,MAAZ,IAAkBlC,YAAa+I,QAIvDqF,EAAe,SAACrF,GAAD,OAClBA,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,MAkF1F,OACG,uBAAKpH,UAAU,qIAAf,UACG,uBAAKA,UAAU,oBAAf,UACe,IAAV4J,GAEI,yBAAQxL,KAAK,SAAS4B,UAAU,gCAAgCuC,QAASyH,EAAzE,SACG,sBAAKxH,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,EAAGV,EAAE,sBAI/EgH,IAAUC,EAAS,GAEf,yBAAQzL,KAAK,SAAS4B,UAAU,2BAA2BuC,QAAS0H,EAApE,SACG,sBAAKzH,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,EAAGV,EAAE,0BAKpF,uBAAK5C,UAAU,0CAAf,UACG,0BACGvF,KAAI,mBAAckP,EAAKpO,IACvBA,GAAE,mBAAcoO,EAAKpO,IACrByE,UAAU,qFACViF,MAAO0E,EAAKvL,KAAK+L,OACjBnF,SAAU,SAAChD,GAAD,OA1IH,SAACiD,GACjB,OAAQA,GACL,IAAK,IACF6E,EAAS,6BAAKH,GAAN,IAAYvL,KAAM,CAAE+L,OAAQhF,GAAWiD,OAAQlM,YAAa+L,EAAO,GAAG1L,WAC9E,MACH,IAAK,IACFuN,EAAS,6BAAKH,GAAN,IAAYvL,KAAM,CAAE+L,OAAQhF,GAAWC,IAAKlF,KAAMP,EAAU4K,UAAWpK,SAAU,MACzF,MACH,IAAK,IACF2J,EAAS,6BAAKH,GAAN,IAAYvL,KAAM,CAAE+L,OAAQhF,GAAWoC,KAAMrH,KAAMP,EAAU4K,UAAWpK,SAAU,OAiItEqK,CAAWxI,EAAEG,OAAO8C,QALxC,UAOG,yBAAQA,MAAM,IAAd,oBACA,yBAAQA,MAAM,IAAd,iBACA,yBAAQA,MAAM,IAAd,qBA3CS,SAACkF,GACnB,OAAQA,GACL,KAAKhF,GAAWiD,OACb,OArEN,gBAAC,IAAMlF,SAAP,WACG,oBAAGlD,UAAU,UAAb,gBACA,yBACGvF,KAAI,eAAUkP,EAAKpO,IACnBA,GAAE,eAAUoO,EAAKpO,IACjByE,UAAU,qFACViF,MAAQ0E,EAAKvL,KAAoBlC,YACjC8I,SAAU,SAAChD,GAAD,OAAOkI,EAAclI,EAAEG,OAAO8C,QAL3C,SAOIgD,EAAOzL,KAAI,SAACiM,GAAD,OACT,0BAAQxD,MAAOwD,EAAIlM,OAAnB,UAA4DkM,EAAIhO,KAAhE,KAA0EgO,EAAIlM,OAA9E,gBAAmCoN,EAAKpO,GAAxC,YAA8CkN,EAAIhO,eA4DxD,KAAK0K,GAAWC,IACb,OAtDN,gBAAC,IAAMlC,SAAP,WACG,yBACGzI,KAAI,cAASkP,EAAKpO,IAClBA,GAAE,cAASoO,EAAKpO,IAChByE,UAAU,qFACViF,MAAQ0E,EAAKvL,KAAoB8B,KACjC8E,SAAU,SAAChD,GAAD,OAAOkI,EAAclI,EAAEG,OAAO8C,QAL3C,SAOIpK,OAAO4P,OAAO9K,GAAWnD,KAAI,SAAC4B,GAAD,OAC3B,yBAAQ6G,MAAO7G,EAAf,SAAsDkM,EAAalM,IAAnE,UAA6BuL,EAAKpO,GAAlC,gBAA4C6C,SAGlD,wBACGA,KAAK,SACLiJ,KAAM,EACNC,IAAK,IACLrC,MAAQ0E,EAAKvL,KAAoB+B,SACjCH,UAAU,qFACVgF,SAAU,SAAChD,GAAD,OAAOkI,EAAclI,EAAEG,OAAO8C,UAE3C,uBAAMjF,UAAU,iBAAhB,2BAmCA,KAAKmF,GAAWoC,KACb,OA/BN,gBAAC,IAAMrE,SAAP,WACG,yBACGzI,KAAI,cAASkP,EAAKpO,IAClBA,GAAE,cAASoO,EAAKpO,IAChByE,UAAU,qFACViF,MAAQ0E,EAAKvL,KAAoB8B,KACjC8E,SAAU,SAAChD,GAAD,OAAOkI,EAAclI,EAAEG,OAAO8C,QAL3C,SAOIpK,OAAO4P,OAAO9K,GAAWnD,KAAI,SAAC4B,GAAD,OAC3B,yBAAQ6G,MAAO7G,EAAf,SAAuDkM,EAAalM,IAApE,UAA6BuL,EAAKpO,GAAlC,iBAA6C6C,SAGnD,wBACGA,KAAK,SACLiJ,KAAM,EACNC,IAAK,IACLrC,MAAQ0E,EAAKvL,KAAoB+B,SACjCH,UAAU,qFACVgF,SAAU,SAAChD,GAAD,OAAOkI,EAAclI,EAAEG,OAAO8C,UAE3C,uBAAMjF,UAAU,iBAAhB,2BAYA,QACG,OAAO,0BAoCL0K,CAAaf,EAAKvL,KAAK+L,WAE5B,yBAAQ/L,KAAK,SAAS4B,UAAU,8DAA8DuC,QAASwH,EAAvG,SACG,sBAAK/J,UAAU,UAAf,SACG,sBAAKwC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,wDCe1E+H,GArKO,SAAC,GAAwC,IAAtCtF,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAM3J,EAAkB,EAAlBA,KACjCzB,EAAUoH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAAjDC,MACFG,EAAciH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMP,eACnDP,EAAUwH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAAjDG,MACF8H,EAAWC,cAJ0C,EAKzBN,mBAAgB,CAC/C3F,OAAQD,EAAKJ,GAAIqP,MAAO,GAAI7N,SAAS,EAAOE,MAAO,OANK,mBAKpD4N,EALoD,KAKzCC,EALyC,OAQ/BvJ,mBAAqB,IARU,mBAQpD0G,EARoD,KAQ5C8C,EAR4C,KASrDjF,EAAgBR,EAAO,uFAAyF,SAEtHxD,qBAAU,YACW,uCAAG,8BAAAzD,EAAA,sEACCmG,GAAiBtK,EAAO,MADzB,OACZuO,EADY,OACgCP,UAClD6C,EAAUtC,IAEJuC,EAAoB3Q,EAAYgB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWD,EAAKJ,QAEjEuP,EAAaE,GANE,2CAAH,qDASlBtC,KACA,IAEH,IAAMuC,EAAS,WAGZ,IAFA,IAAI1P,EAAK,GAEA2P,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC1B3P,GAFW,iEAEC0L,OAAOZ,KAAKC,MAAsB,GAAhBD,KAAK8E,WAEtC,OAAO5P,GAmCJuO,EAAW,SAAC7E,GACf,IAAMmG,EAAUP,EAAUD,MAAMpO,KAAI,SAACmN,GAAD,OAAWA,EAAKpO,KAAO0J,EAAM1J,GAAlB,6BAA4BoO,GAA5B,IAAkCvL,KAAM6G,EAAM7G,OAASuL,KACtGmB,EAAa,6BAAKD,GAAN,IAAiBD,MAAOQ,MAoBvC,OACG,uBAAKpL,UAAW8F,EAAhB,UACG,sBAAK9F,UAAU,8DAA8DuC,QAAS,WAAQ8C,OAC9F,uBAAKrF,UAAU,yHAAf,UACG,uBAAKA,UAAU,oCAAf,UACG,qBAAIA,UAAU,wBAAd,sBACA,oBAAGA,UAAU,oBAAb,yDACA,oBAAGA,UAAU,UAAb,qEAED6K,EAAU5N,OAET,sBAAK+C,UAAU,YAAf,SACG,oBAAGA,UAAU,oCAAb,SAAmD6K,EAAU5N,UAGjE5C,EAAYwP,OAAS,GAEpB,sBAAK7J,UAAU,6BAAf,SACG,0BAAQvF,KAAK,iBAAiBc,GAAG,iBAAiByE,UAAU,qFAAqFgF,SAAU,SAAChD,GAAD,OAxBnJ,SAACpG,GAAmB,IAAD,EACjCgP,EAAK,UAAGvQ,EAAYgB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWA,YAAxC,aAAG,EAA8CgP,MACvDA,GACLE,EAAa,6BAAKD,GAAN,IAAiBD,WAqBiJS,CAAerJ,EAAEG,OAAO8C,QAA1L,UACG,yBAAQb,UAAQ,EAACkH,UAAQ,EAACrG,MAAM,GAAhC,+BACE5K,EAAYmC,KAAI,SAAC+O,GACoB,IAAD,EAAnC,OAAIA,EAAW3P,SAAWD,EAAKJ,GACrB,yBAAgC0J,MAAOsG,EAAW3P,OAAlD,mBAA4D9B,EAAMuB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOgQ,EAAW3P,iBAAlG,aAA4D,EAA+CwC,MAA9FmN,EAAW3P,QAE3B,aAKnB,sBAAKoE,UAAU,0BAAf,SACG,uBAAKA,UAAU,oCAAf,UACK6K,EAAUD,MAAMpO,KAAI,SAACmN,EAAMC,GAAP,OACnB,eAAC,GAAD,CAA0BD,KAAMA,EAAMC,MAAOA,EAAOC,OAAQgB,EAAUD,MAAMf,OAAQ5B,OAAQA,EAAQ6B,SAAUA,EAAUC,WAAY,kBA1ElIxO,EA0EmJoO,EAAKpO,QAzEzKuP,EAAa,6BAAKD,GAAN,IAAiBD,MAAOC,EAAUD,MAAMY,QAAO,SAAClQ,GAAD,OAAOA,EAAEC,KAAOA,QAD3D,IAACA,GA0E6JyO,WAAY,kBAtE1K,SAACJ,GACjB,IAAM6B,EAAS,YAAOZ,EAAUD,OAC1Bc,EAAUD,EAAU7B,GAC1B6B,EAAUxP,OAAO2N,EAAO,GACxB6B,EAAUxP,OAAO2N,EAAQ,EAAG,EAAG8B,GAC/BZ,EAAa,6BAAKD,GAAN,IAAiBD,MAAOa,KAiE4JzB,CAAWJ,IAAQK,aAAc,kBA9D/M,SAACL,GACnB,IAAM6B,EAAS,YAAOZ,EAAUD,OAC1Bc,EAAUD,EAAU7B,GAC1B6B,EAAUxP,OAAO2N,EAAO,GACxB6B,EAAUxP,OAAO2N,EAAQ,EAAG,EAAG8B,GAC/BZ,EAAa,6BAAKD,GAAN,IAAiBD,MAAOa,KAyDmMxB,CAAaL,KAApND,EAAKpO,OAExB0M,EAAO,GAEF,yBACG7J,KAAK,SACL4B,UAAU,gKACVuC,QAAS,kBA7Fd,WAChB,IAAMoJ,EAAgB,CACnBvN,KAAM,CACH+L,OAAQhF,GAAWiD,OACnBlM,YAAa+L,EAAO,GAAG1L,QAE1BhB,GAAI0P,KAGPH,EAAa,6BAAKD,GAAN,IAAiBD,MAAM,GAAD,mBAAMC,EAAUD,OAAhB,CAAuBe,OAoFrBC,IAHlB,SAKG,sBAAK5L,UAAU,UAAf,SACG,sBAAKwC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,sEAKjF,eAAC,GAAD,SAGX,uBAAK5C,UAAU,cAAf,UACG,yBAAQ5B,KAAK,SAAS4B,UAAU,uCAAuCuC,QAAS,WAAQ8C,KAAxF,mBACEwF,EAAU9N,QAEN,yBACGqB,KAAK,SACL4B,UAAU,+HACVoE,SAAqC,IAA3ByG,EAAUD,MAAMf,OAC1BtH,QAtEJ,WACdX,EAAS9E,EAAmB,CAAElB,OAAQD,EAAKJ,GAAIwB,SAAS,KACxDsI,KAgEe,kBASA,yBACGjH,KAAK,SACL4B,UAAU,qIACVoE,SAAqC,IAA3ByG,EAAUD,MAAMf,OAC1BtH,QArFL,WACbX,EAAS/E,EAAcgO,IACvBjJ,EAAS9E,EAAmB,CAAElB,OAAQD,EAAKJ,GAAIwB,SAAS,KACxDsI,KA8Ee,2BCrJfwG,GAAW,SAAC,GAEL,IAAD,cADTlQ,EACS,EADTA,KAAMmQ,EACG,EADHA,QAASzD,EACN,EADMA,UAET/N,EAAUgH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMN,WACjDsO,EAAatH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMT,YAAYkB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWD,EAAKJ,SAC9FgQ,EAAajK,aAAY,SAAC1G,GAAD,OAAqBA,EAAMP,YAAYgB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWD,EAAKJ,SAC9FqG,EAAWC,cAJR,EAK+BN,oBAAS,GALxC,mBAKFwK,EALE,KAKYC,EALZ,OAMiCzK,oBAAS,GAN1C,mBAMF0K,EANE,KAMaC,EANb,OAOqC3K,oBAAS,GAP9C,mBAOF4K,EAPE,KAOeC,EAPf,OAQyC7K,oBAAS,GARlD,mBAQF8K,EARE,KAQiBC,EARjB,OASiC/K,qBATjC,mBASFgL,EATE,KASaC,EATb,OAUejL,mBAAiBkL,KAAKC,OAVrC,mBAUF5O,EAVE,KAUI6O,EAVJ,KAYT7K,qBAAU,WACP,IAAM8K,EAAWC,aAAY,kBAAMF,EAAQF,KAAKC,SAAQ,KAExD,OAAO,kBAAMI,cAAcF,OAG9B9K,qBAAU,WACF8G,IAEDmE,aAAO,IAAIN,KAAK7D,EAAWoE,aAC5BpL,EAAS7F,EAAiB6M,IAG7B4D,EAAiBS,aAA0B,IAAIR,KAAK7D,EAAWoE,gBAC/D,CAAClP,IAEJ,IAAqBiK,EAQfmF,EAAe,WAClB,OAAKtE,GAEK6D,KAAKC,MAAQ,KAASS,aAAY,IAAIV,KAAK7D,EAAWoE,YAAcpE,EAAWwE,yBAA2BxE,EAAWwE,uBAA0B,IAF/H,GAY7B,OACG,gBAAC,IAAMlK,SAAP,WACK6I,EAAe,eAAC,GAAD,CAAKzG,KAAMyG,EAAcpQ,KAAMA,EAAM0J,YAAa,kBAAM2G,GAAgB,MAAa,KACpGC,EAAgB,eAAC,GAAD,CAAM3G,KAAM2G,EAAetQ,KAAMA,EAAM0J,YAAa,kBAAM6G,GAAiB,MAAa,KACxGC,EAAkB,eAAC,GAAD,CAAQ7G,KAAM6G,EAAiBxQ,KAAMA,EAAM0J,YAAa,kBAAM+G,GAAmB,IAAQ/D,UAAW,SAAC7I,GAAD,OAAa6I,GAAaA,EAAU7I,MAAe,KACzK6M,EAAoB,eAAC,GAAD,CAAe/G,KAAM+G,EAAmB1Q,KAAMA,EAAM0J,YAAa,kBAX1FiH,GAAqB,SACrB,OAAIf,QAAJ,IAAIA,OAAJ,EAAIA,EAAYtO,QACb2E,EAAS5E,EAAmB,CAAEpB,OAAQD,EAAKJ,GAAI0B,MAAO,YAS0D,KAC9G6O,EACC,uBAAK9L,UAAU,kHAAf,UACG,uBAAKA,UAAU,qCAAf,UACG,uBAAKA,UAAU,YAAf,UACG,8BAAMrE,EAAKyC,OACX,oBAAG4B,UAAU,wBAAb,mBAAuCrE,EAAKE,gBAA5C,QAAwD,kBAExD+M,GAAcyE,aAAS,IAAIZ,KAAK7D,EAAWoE,cAAiBrR,EAAKE,SAE9D,uBAAKmE,UAAU,aAAf,UACG,oBAAGA,UAAU,wBAAb,wBACA,oBAAGA,UAAU,wBAAb,SAAuCuM,EAAa,qBAAiBA,GAAkB,mBAG1F,gCACe,OAAVhB,QAAU,IAAVA,OAAA,EAAAA,EAAYxO,SACT,oBAAGiD,UAAU,UAAb,wBAEC,gBAAC,IAAMkD,SAAP,WACG,yBAAQ9E,KAAK,SAASiF,MAAM,SAASrD,UAAU,sHAAsHuC,QAAS,kBAAM6J,GAAmB,IAAOhI,UA9C1N2D,EA8CgPpM,EAAKoM,QA7C1PA,EAAMyD,QAAO,SAAClQ,GAAD,OAAOA,EAAE4E,OAASP,EAAUuJ,QAAMoE,QAAO,SAACC,EAAKlR,GAAN,OAAekR,EAAMlR,EAAK8D,WAAU,GACvF,IA4Cc,SACG,oBAAGH,UAAU,oBAAb,iBAEH,yBAAQ5B,KAAK,SAASiF,MAAM,MAAMrD,UAAU,uDAAuDuC,QAAS,kBAAMyJ,GAAgB,IAAlI,SACG,oBAAGhM,UAAU,oBAAb,iBAEH,yBAAQ5B,KAAK,SAASiF,MAAM,OAAOrD,UAAU,mDAAmDuC,QAAS,kBAAM2J,GAAiB,IAAhI,SACG,oBAAGlM,UAAU,oBAAb,yBAOrB4I,GAAcyE,aAAS,IAAIZ,KAAK7D,EAAWoE,cAAiBrR,EAAKE,SAC/D,sBAAKmE,UAAU,OAAf,SAAsB,eAACwN,GAAD,CAAmBjE,UAAW2D,QAA2B,QAGvF,uBAAKlN,UAAU,gEAAf,UACG,uBAAKA,UAAU,6EAAf,UACG,iCACG,qBAAIA,UAAU,UAAd,SAA0BrE,EAAKyC,OAC/B,oBAAG4B,UAAU,wBAAb,SAAuCrE,EAAK8R,kBAE/C,sBAAKzN,UAAU,gBAAf,SACG,uBAAKA,UAAU,8BAAf,UACG,uBAAKA,UAAU,oBAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKyC,KAAK,UAAUiL,iBAAiB,kBAAkBhN,QAAQ,cAAc8B,MAAM,6BAAnF,SAAgH,uBAAMI,EAAE,ywCAE3H,6BAAKjH,EAAK4E,WAEb,uBAAKP,UAAU,oBAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKyC,KAAK,UAAUiL,iBAAiB,0BAA0BhN,QAAQ,sBAAsB8B,MAAM,6BAAnG,SAAgI,6BAAG,uBAAMI,EAAE,yiBAE9I,6BAAKjH,EAAKgS,aAEb,uBAAK3N,UAAU,oBAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKyC,KAAK,UAAUD,MAAM,6BAA6BlH,EAAE,MAAMuF,EAAE,MAAMH,QAAQ,cAA/E,SACG,6BACG,uBAAMkC,EAAE,stBAWjB,6BAAKjH,EAAKiS,qBAoBtB,sBAAK5N,UAAU,mDAAf,SACK4I,GAAcyE,aAAS,IAAIZ,KAAK7D,EAAWoE,cAAiBrR,EAAKE,SAE7D,gBAAC,IAAMqH,SAAP,WACG,uBAAKlD,UAAU,oCAAf,UACG,uBAAKA,UAAU,oBAAf,UACG,uBAAKA,UAAU,eAAewC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAAxG,UACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,uFACvE,uBAAMY,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,wCAE1E,qBAAG5C,UAAU,2BAAb,oBACK1F,EAAQe,MAAK,SAACC,GAAD,OAAOA,EAAEiB,UAAF,OAAaqM,QAAb,IAAaA,OAAb,EAAaA,EAAYiF,UAAU9G,MAAM,KAAK,cADvE,iBACK,EAAuEmB,UAAU7M,MAAK,SAACC,GAAD,OAAOA,EAAEiB,UAAF,OAAaqM,QAAb,IAAaA,OAAb,EAAaA,EAAYiF,qBAD3H,aACK,EAAkIpT,KACpI,sBAAKuF,UAAU,eAAewC,MAAM,6BAA6B9B,QAAQ,YAAY+B,KAAK,eAA1F,SACG,uBAAME,SAAS,UAAUC,EAAE,2IAA2IC,SAAS,cAHrL,UAKKvI,EAAQe,MAAK,SAACC,GAAD,OAAOA,EAAEiB,UAAF,OAAaqM,QAAb,IAAaA,OAAb,EAAaA,EAAY1M,YAAY6K,MAAM,KAAK,cALzE,iBAKK,EAAyEmB,UAAU7M,MAAK,SAACC,GAAD,OAAOA,EAAEiB,UAAF,OAAaqM,QAAb,IAAaA,OAAb,EAAaA,EAAY1M,uBAL7H,aAKK,EAAsIzB,WAG9I,wBAAMuF,UAAU,6BAAhB,cAAgDuM,EAAa,qBAAiBA,GAAkB,cAAhG,WAES,OAAVhB,QAAU,IAAVA,OAAA,EAAAA,EAAYxO,UAER,uBAAKiD,UAAU,iEAAf,UACG,oBAAGA,UAAU,UAAb,wBACA,yBAAQ5B,KAAK,SAAS4B,UAAU,mEAAmEuC,QAAS,kBAAM+J,GAAqB,IAAvI,sBAGT,sBAAKtM,UAAU,mBAAf,SACG,+BAAK,eAACwN,GAAD,CAAmBjE,UAAW2D,aAKzC,uBAAKlN,UAAU,2CAAf,UACG,uBAAKA,UAAU,oBAAf,UACG,uBAAKA,UAAU,eAAewC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAAxG,UACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,uFACvE,uBAAMY,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,wCAE1E,oBAAG5C,UAAU,SAAb,mBAAwB1F,EAAQe,MAAK,SAACC,GAAD,aAAOA,EAAEiB,UAAF,UAAaZ,EAAKE,gBAAlB,aAAa,EAAekL,MAAM,KAAK,cAAnF,iBAAwB,EAAgEmB,UAAU7M,MAAK,SAACC,GAAD,OAAOA,EAAEiB,SAAWZ,EAAKE,mBAAhI,aAAwB,EAAmHpB,OAC3I,wBAAMuF,UAAU,kCAAhB,cAAqDrE,EAAKE,SAA1D,UAEH,gCACe,OAAV0P,QAAU,IAAVA,OAAA,EAAAA,EAAYxO,SACT,KACC,gBAAC,IAAMmG,SAAP,WACG,yBACG9E,KAAK,SACL4B,UAAU,gIACVuC,QAAS,kBAAM6J,GAAmB,IAHrC,oBAMA,yBAAQhO,KAAK,SAAS4B,UAAU,8DAA8DuC,QAAS,kBAAM+J,GAAqB,IAAlI,gCAOxB,uBAAKtM,UAAU,MAAf,UACG,uBAAKA,UAAU,yBAAf,UACG,qBAAGA,UAAU,OAAb,mBAA0B,wBAAMA,UAAU,6BAAhB,UAA+CrE,EAAKyK,SAAWzK,EAAK4K,eAApE,OAA0F5K,EAAKyK,eACvHzK,EAAKE,YAAY,OAAC0P,QAAD,IAACA,OAAD,EAACA,EAAYxO,UAE7B,gBAAC,IAAMmG,SAAP,WACG,yBAAQ9E,KAAK,SAAS4B,UAAU,iEAAiEuC,QAAS,kBAAMyJ,GAAgB,IAAhI,iBACA,yBAAQ5N,KAAK,SAAS4B,UAAU,wDAAwDuC,QAAS,kBAAM2J,GAAiB,IAAxH,wBAIT,sBAAKlM,UAAU,OAAf,SACKrE,EAAKoM,MAAMZ,QAAQnB,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE6B,KAAO+F,EAAE/F,KAAQ,EAAK+F,EAAE/F,KAAO7B,EAAE6B,MAAS,EAAI,KAAI1D,KAAI,SAACuL,GAAD,OAC3F,qBAAG/H,UAAU,iBAAb,WA1LCiF,EA0L4G8C,EAAM7H,KAzLrI+E,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,MAyLrE,KAA8HW,EAAM5H,SAApI,YAAmC4H,EAAM7H,KAAO6H,EAAM5H,SAAW4H,EAAMC,YAAcrM,EAAKJ,IA1L1F,IAAC0J,iBAoMzB4G,GAASiC,aAAe,CACrBhC,SAAS,EACTzD,UAAW,IAGCwD,UCpLAkC,GApEC,WAAO,IAAD,EACgBzM,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAAlEI,EADW,EACXA,SAAUF,EADC,EACDA,MAAOC,EADN,EACMA,MACjBQ,EAAYgH,aAAY,SAAC1G,GAAD,OAAqBA,KAA7CN,QAER,OACG,eAAC,IAAM4I,SAAP,eACiBlJ,IAAbD,EAEK,eAAC,IAAMmJ,SAAP,UACG,eAAC,GAAD,MAIH,gBAAC,IAAMA,SAAP,WACG,oBAAGlD,UAAU,gBAAb,qBACA,qBAAIA,UAAU,gBAAd,SAAgCjG,IAChC,+BACKO,EAAQkC,KAAI,SAACyL,GAAD,OAAYA,EAAOC,UAAU1L,KAAI,SAACX,GAAD,OAAeA,EAASmS,UAAYnS,EAASmS,SAASnE,OAAS,EAExG,uBAAK7J,UAAU,mDAAf,UACG,6BAAK,YAAInE,EAASmS,UAAU7G,MAAM,GAAI,GAAGC,KAAK,OAC9C,eAAC,IAAD,CAAMjE,GAAE,mBAActH,EAASU,QAAUyD,UAAU,+BAAnD,oBAFoEnE,EAASU,QAKjF,aAER,uBAAKyD,UAAU,iBAAf,UACG,qBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,OAAf,SACqE,IAAhEnG,EAAM2R,QAAO,SAAClQ,GAAD,OAAOA,EAAE0D,SAAWY,EAAWqO,WAASpE,OAEjD,iCACG,oDACA,eAAC,IAAD,CAAM1G,GAAG,mBAAmBnD,UAAU,8CAAtC,2BAIH,+BACKnG,EAAM2R,QAAO,SAAClQ,GAAD,OAAOA,EAAE0D,SAAWY,EAAWqO,WAASzR,KAAI,SAAC0R,GAAD,OACxD,+BAAmBA,EAAKC,gBAAgB/K,iBAAxC,gBAAyEgL,aAAoB,IAAI3B,KAAKyB,EAAKG,KAAM,CAAEC,WAAW,MAAtHJ,EAAK3S,cAM/B,uBAAKyE,UAAU,iBAAf,UACG,qBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,8BAAf,SACsB,IAAjBlG,EAAM+P,OAEF,iCACG,sDACA,eAAC,IAAD,CAAM1G,GAAG,mBAAmBnD,UAAU,8CAAtC,2BAIH,YAAIlG,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAED,KAAO6H,EAAE7H,KAAQ,EAAK6H,EAAE7H,KAAOC,EAAED,MAAS,EAAI,KAAI5B,KAAI,SAACb,GAAD,OACjF,eAAC,GAAD,CAAUA,KAAMA,EAAMmQ,SAAO,GAAMnQ,EAAKJ,kBCM1DgT,GAzDW,SAAC,GAAuC,IAArClJ,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,KAAM3J,EAAiB,EAAjBA,KACrC/B,EAAY0H,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAAnDC,QADsD,EAElC0H,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAA3DF,EAFsD,EAEtDA,SAAUG,EAF4C,EAE5CA,MACZ0H,EAAWC,cACX2M,EAAUC,cAJ8C,EAKhClN,oBAAS,GALuB,mBAKvDmN,EALuD,KAK9CC,EAL8C,KAOxD7I,EAAgBR,EAAO,kFAAoF,SAE3GsJ,EAAY,uCAAG,WAAO/S,GAAP,eAAAwC,EAAA,yDACb1C,EADa,wDAGlBgT,GAAW,GAHO,SAIGnK,GAAYtK,EAAOH,EAAU8B,EAA7B,OAAuCF,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMyC,MAJhD,OAIZmB,EAJY,OAKlBqC,EAAS7G,EAAQwE,IAEjBiP,EAAQ9S,KAAK,UAPK,2CAAH,sDAUZmT,EAAgB,SAAChT,GACpB,OAAI6S,EACM,yBAGN9U,EAAUiC,EAASiT,MACb,yBAAQ1Q,KAAK,SAAS4B,UAAU,+DAA+DuC,QAAS,kBAAMqM,EAAa/S,EAASA,WAApI,iBAGH,uBAAMmE,UAAU,0BAAhB,mCAGV,OACG,uBAAKA,UAAW8F,EAAhB,UACG,sBAAK9F,UAAU,8DAA8DuC,QAAS8C,IACtF,sBAAKrF,UAAU,8FAAf,SACG,uBAAKA,UAAU,oCAAf,UACG,sBAAIA,UAAU,6BAAd,6BAAsDrE,QAAtD,IAAsDA,OAAtD,EAAsDA,EAAMyC,QAC5D,qBAAG4B,UAAU,eAAb,8CAAwDrE,QAAxD,IAAwDA,OAAxD,EAAwDA,EAAMoT,kBAAkBlF,OAAhF,KAA+F,OAAJlO,QAAI,IAAJA,OAAA,EAAAA,EAAMoT,oBAAqBpT,EAAKoT,kBAAkBlF,OAAS,EAAI,YAAc,WAAxK,OACA,qCACIlO,QADJ,IACIA,OADJ,EACIA,EAAMoT,kBAAkBvS,KAAI,SAACX,GAAD,OAC1B,sBAAImE,UAAU,yCAAd,UACG,kCAAQnE,EAASA,SAAjB,QAAkCA,EAASiT,MAAM1L,iBAAjD,eACEyL,EAAchT,KAFyCA,EAASA,SAAWA,EAASiT,YAM/F,sBAAK9O,UAAU,wBAAf,SACM0O,EAEI,oBAAG1O,UAAU,iCAAb,4BADD,yBAAQ5B,KAAK,SAAS4B,UAAU,uGAAuGuC,QAAS8C,EAAhJ,8BCoGT2J,GA1JG,WACf,IAAMrV,EAAO2H,aAAY,SAAC1G,GAAD,OAAqBA,KADzB,EAEK2G,qBAFL,mBAEdzH,EAFc,KAEPmV,EAFO,OAGS1N,oBAAS,GAHlB,mBAGd2N,EAHc,KAGHC,EAHG,OAIW5N,mBAAS,SAJpB,mBAId6N,EAJc,KAIJC,EAJI,OAKa9N,oBAAS,GALtB,mBAKd+N,EALc,KAKHC,EALG,OAMmBhO,qBANnB,mBAMdiO,EANc,KAMAC,EANA,KAQfC,EAAQ,uCAAG,4BAAArR,EAAA,sEACSmG,EAAmB7K,EAAKM,QAAQC,MAAOP,EAAKA,KAAKI,UAD1D,QACR4V,EADQ,QAEL7V,MAAMkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAED,KAAO6H,EAAE7H,KAAQ,EAAK6H,EAAE7H,KAAOC,EAAED,MAAS,EAAI,KAChF6Q,EAASU,EAAS7V,OAHJ,2CAAH,qDAMR8V,EAAc,SAACjU,GAAD,OACjBA,EAAKoT,kBAAkBzB,QAAO,SAACuC,EAAMC,GAAP,OAAiBD,EAAKf,MAAQgB,EAAKhB,MAAQe,EAAOC,KAAOhB,OAgD1F,OA7CAhN,qBAAU,YACM,SAACmD,GACX,GAAKnL,EAAL,CAIA,IAAIiW,EAEJ,OAAQ9K,GACL,IAAK,OACU8K,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE0Q,kBAAkB,GAAGD,MAAQ7I,EAAE8I,kBAAkB,GAAGD,MAAS,EAAK7I,EAAE8I,kBAAkB,GAAGD,MAAQzQ,EAAE0Q,kBAAkB,GAAGD,OAAU,EAAI,KAAe,YAAIhV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE0Q,kBAAkB,GAAGD,MAAQ7I,EAAE8I,kBAAkB,GAAGD,MAAS,EAAK7I,EAAE8I,kBAAkB,GAAGD,MAAQzQ,EAAE0Q,kBAAkB,GAAGD,OAAU,EAAI,KAC5W,MACH,IAAK,OACUiB,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAED,KAAO6H,EAAE7H,KAAQ,EAAK6H,EAAE7H,KAAOC,EAAED,MAAS,EAAI,KAAe,YAAItE,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAED,KAAO6H,EAAE7H,KAAQ,EAAK6H,EAAE7H,KAAOC,EAAED,MAAS,EAAI,KAC5L,MACH,IAAK,eACU2R,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEoP,aAAexH,EAAEwH,aAAgB,EAAKxH,EAAEwH,aAAepP,EAAEoP,cAAiB,EAAI,KAAe,YAAI3T,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEoP,aAAexH,EAAEwH,aAAgB,EAAKxH,EAAEwH,aAAepP,EAAEoP,cAAiB,EAAI,KAC5P,MACH,IAAK,WACUsC,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE+H,SAAWH,EAAEG,SAAY,EAAKH,EAAEG,SAAW/H,EAAE+H,UAAa,EAAI,KAAe,YAAItM,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE+H,SAAWH,EAAEG,SAAY,EAAKH,EAAEG,SAAW/H,EAAE+H,UAAa,EAAI,KAC5N,MACH,IAAK,QACU2J,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEkC,MAAQ0F,EAAE1F,MAAS,EAAK0F,EAAE1F,MAAQlC,EAAEkC,OAAU,EAAI,KAAe,YAAIzG,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEkC,MAAQ0F,EAAE1F,MAAS,EAAK0F,EAAE1F,MAAQlC,EAAEkC,OAAU,EAAI,KACpM,MACH,IAAK,UACUwP,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEuP,QAAU3H,EAAE2H,QAAW,EAAK3H,EAAE2H,QAAUvP,EAAEuP,SAAY,EAAI,KAAe,YAAI9T,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEuP,QAAU3H,EAAE2H,QAAW,EAAK3H,EAAE2H,QAAUvP,EAAEuP,SAAY,EAAI,KACpN,MACH,IAAK,UACUmC,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEsP,QAAU1H,EAAE0H,QAAW,EAAK1H,EAAE0H,QAAUtP,EAAEsP,SAAY,EAAI,KAAe,YAAI7T,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEsP,QAAU1H,EAAE0H,QAAW,EAAK1H,EAAE0H,QAAUtP,EAAEsP,SAAY,EAAI,KACpN,MACH,QACeoC,EAAZb,EAAqB,YAAIpV,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE4B,MAAQgG,EAAEhG,MAAS,EAAKgG,EAAEhG,MAAQ5B,EAAE4B,OAAU,EAAI,KAAe,YAAInG,GAAOkM,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE4B,MAAQgG,EAAEhG,MAAS,EAAKgG,EAAEhG,MAAQ5B,EAAE4B,OAAU,EAAI,KAI1MgP,EAASc,IAGZ/J,CAAKoJ,KACL,CAACA,EAAUF,IAEdpN,qBAAU,WACP4N,MACA,IAGA,gBAAC,IAAMxM,SAAP,WACG,eAAC,GAAD,CAAmBoC,KAAMgK,EAAW3T,KAAM6T,EAAcnK,YAAa,kBAAMkK,GAAa,MACxF,qBAAIvP,UAAU,gBAAd,4BACA,uBAAKA,UAAU,YAAf,UACG,yBAAQ5B,KAAK,SAAS4B,UAAU,yBAAyBuC,QAAS,kBAAM4M,GAAUD,IAAlF,SACG,iDAAK1M,MAAM,6BAA6B9B,QAAQ,YAAY+B,KAAK,WAAeyM,EAAY,CAAEc,UAAW,2BAA8B,IAAvI,IAA4IhQ,UAAU,gBAAtJ,UAAsK,uBAAM4C,EAAE,kBAAkBH,KAAK,SAAS,uBAAMG,EAAE,uDAEzN,0BAAQnI,KAAK,OAAOc,GAAG,OAAOyE,UAAU,2DAA2DgF,SAAU,SAAChD,GAAD,OAAOqN,EAAYrN,EAAEG,OAAO8C,QAAzI,UACG,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,eAAd,0BACA,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,WAAd,uBACA,yBAAQA,MAAM,QAAd,mBACA,yBAAQA,MAAM,UAAd,qBACA,yBAAQA,MAAM,UAAd,2BAGN,uBAAKjF,UAAU,yBAAf,WACMlG,GAEG,gBAAC,IAAMoJ,SAAP,WACG,sBAAKlD,UAAU,iDAAf,SACG,eAAC,GAAD,MAEH,sBAAKA,UAAU,iDAAf,SACG,eAAC,GAAD,MAEH,sBAAKA,UAAU,iDAAf,SACG,eAAC,GAAD,SAXf,OAeKlG,QAfL,IAeKA,OAfL,EAeKA,EAAO0C,KAAI,SAACb,GAAD,OACV,0BAAQyC,KAAK,SAAS4B,UAAU,yFAA2JuC,QAAS,WAAQgN,GAAa,GAAOE,EAAgB9T,IAAhP,UACG,uBAAKqE,UAAU,yCAAf,UACG,uBAAKA,UAAU,YAAf,UACG,8BAAMrE,EAAKyC,OACX,oBAAG4B,UAAU,wBAAb,SAAuCrE,EAAK8R,kBAE/C,uBAAKzN,UAAU,aAAf,UACG,qBAAGA,UAAU,wBAAb,UAAuCrE,EAAKoT,kBAAkBlF,OAA9D,gBACA,qBAAG7J,UAAS,kBAAc4P,EAAYjU,GAAQhC,EAAKA,KAAKC,QAAW,eAAiB,IAApF,UAA4FgW,EAAYjU,GAAMyH,iBAA9G,oBAGN,uBAAKpD,UAAU,YAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKiQ,QAAQ,MAAMxN,KAAK,UAAUD,MAAM,6BAA6B9B,QAAQ,oBAAoBgN,iBAAiB,wBAAlH,SACG,6BACG,uBAAM9K,EAAE,udAIjB,6BAAKjH,EAAKyK,cAEb,uBAAKpG,UAAU,YAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKyC,KAAK,UAAUiL,iBAAiB,kBAAkBhN,QAAQ,cAAc8B,MAAM,6BAAnF,SAAgH,uBAAMI,EAAE,ywCAE3H,6BAAKjH,EAAK4E,WAEb,uBAAKP,UAAU,YAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKiQ,QAAQ,MAAMxN,KAAK,UAAUD,MAAM,6BAA6BlH,EAAE,MAAMuF,EAAE,MAAMH,QAAQ,cAA7F,SACG,6BACG,uBAAMkC,EAAE,stBAWjB,6BAAKjH,EAAKiS,aAEb,uBAAK5N,UAAU,YAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKyC,KAAK,UAAUiL,iBAAiB,0BAA0BhN,QAAQ,sBAAsB8B,MAAM,6BAAnG,SAAgI,6BAAG,uBAAMI,EAAE,yiBAE9I,6BAAKjH,EAAKgS,eAhD8GhS,EAAKsE,MAAQtE,EAAK4E,MAAQ5E,EAAK8R,aAAe9R,EAAKyK,oB,oBC3CjL8J,GAhDI,SAAC,GAEP,IAAD,EADThB,EACS,EADTA,UAAWE,EACF,EADEA,SAAUnH,EACZ,EADYA,OAAQnO,EACpB,EADoBA,MAAOqW,EAC3B,EAD2BA,aAE5B7V,EAAYgH,aAAY,SAAC1G,GAAD,OAAqBA,KAA7CN,QADC,EAEmCiH,mBAA0B,QAF7D,mBAEF6O,EAFE,KAEcC,EAFd,KA6BT,OACG,uBAAKrQ,UAAU,QAAf,UACG,0BAAQ5B,KAAK,SAAS4B,UAAU,uDAAuDuC,QAAS,WALnG8N,EAAqC,IAAnBD,EAAuB,OAAS,IAK/C,UACG,uBAAMpQ,UAAS,sBAAoC,SAAnBoQ,EAA4B,aAAe,cAC3E,qBAAIpQ,UAAU,UAAd,mBAA0B1F,EAAQe,MAAK,SAACC,GAAD,OAAOA,EAAEiB,SAAW0L,YAA3D,aAA0B,EAA0CxN,UAEvE,eAAC,KAAD,CAAec,GAAE,oBAAe0M,GAAUjI,UAAS,oBAAeiI,GAAUqI,SAAU,IAAK7P,OAAQ2P,EAAnG,SACG,sBAAKpQ,UAAU,yBAAf,SAhCS,SAACuQ,GAChB,OAAQnB,GACL,IAAK,QACF,OAAO,YAAImB,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAWiJ,EAAYjJ,EAAEhG,MAAMuQ,cAAcnS,EAAE4B,OAAS5B,EAAE4B,MAAMuQ,cAAcvK,EAAEhG,UAC1G,IAAK,OACF,OAAO,YAAIsQ,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAWiJ,EAAYjJ,EAAE7H,KAAKoS,cAAcnS,EAAED,MAAQC,EAAED,KAAKoS,cAAcvK,EAAE7H,SACvG,IAAK,eACF,OAAO,YAAImS,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAWiJ,EAAY7Q,EAAEoP,aAAa+C,cAAcvK,EAAEwH,cAAgBxH,EAAEwH,aAAa+C,cAAcnS,EAAEoP,iBAC/H,IAAK,WACF,OAAOyB,EAAY,YAAIqB,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE+H,SAAWH,EAAEG,SAAY,EAAKH,EAAEG,SAAW/H,EAAE+H,UAAa,EAAI,KAAM,YAAImK,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE+H,SAAWH,EAAEG,SAAY,EAAKH,EAAEG,SAAW/H,EAAE+H,UAAa,EAAI,KACpN,IAAK,QACF,OAAO8I,EAAY,YAAIqB,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEkC,MAAQ0F,EAAE1F,MAAS,EAAK0F,EAAE1F,MAAQlC,EAAEkC,OAAU,EAAI,KAAM,YAAIgQ,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEkC,MAAQ0F,EAAE1F,MAAS,EAAK0F,EAAE1F,MAAQlC,EAAEkC,OAAU,EAAI,KAC5L,IAAK,UACF,OAAO2O,EAAY,YAAIqB,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEuP,QAAU3H,EAAE2H,QAAW,EAAK3H,EAAE2H,QAAUvP,EAAEuP,SAAY,EAAI,KAAM,YAAI2C,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEuP,QAAU3H,EAAE2H,QAAW,EAAK3H,EAAE2H,QAAUvP,EAAEuP,SAAY,EAAI,KAC5M,IAAK,WACF,OAAOsB,EAAY,YAAIqB,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEsP,QAAU1H,EAAE0H,QAAW,EAAK1H,EAAE0H,QAAUtP,EAAEsP,SAAY,EAAI,KAAM,YAAI4C,GAAOvK,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAEsP,QAAU1H,EAAE0H,QAAW,EAAK1H,EAAE0H,QAAUtP,EAAEsP,SAAY,EAAI,KAC5M,QACG,OAAO4C,GAgBFE,CAAU3W,GAAO0C,KAAI,SAACb,GAAD,OACpB,eAAC,GAAD,CAAUA,KAAMA,EAAoB0M,UAAW,SAAC7I,GAAD,OAAa2Q,EAAa3Q,KAA9C7D,EAAKJ,eC0BnCmV,GAtED,WAAO,IACV5W,EAAUwH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAAjDG,MACAK,EAAgBmH,aAAY,SAAC1G,GAAD,OAAqBA,KAAjDT,YAFS,EAGmBoH,qBAHnB,mBAGVoP,EAHU,KAGEC,EAHF,OAIarP,oBAAS,GAJtB,mBAIV2N,EAJU,KAICC,EAJD,OAKe5N,mBAAS,QALxB,mBAKV6N,EALU,KAKAC,EALA,OAMiB9N,mBAAS,IAN1B,mBAMV8G,EANU,KAMC8H,EAND,KAiCjB,OAzBArO,qBAAU,WACP,IAAMvC,EAAoB,GAC1BzF,EAAM+W,SAAQ,SAAClV,GACZ,GAAKA,EAAKE,SAOC0D,EAAO5D,EAAKE,SAASkL,MAAM,KAAK,MAGxCxH,EAAO5D,EAAKE,SAASkL,MAAM,KAAK,IAAM,IAFtCxH,EAAO5D,EAAKE,SAASkL,MAAM,KAAK,IAAIrL,KAAKC,QAPzC,GAAIA,EAAKG,cAAgB3B,EAAYiC,MAAK,SAACd,GAAD,OAAOA,EAAEM,SAAWD,EAAKJ,MAAK,CAAC,IAAD,EAC/DuV,EAAiB,UAAG3W,EAAYkB,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWD,EAAKJ,aAA7C,aAAG,EAA+CW,YAAY6K,MAAM,KAAK,IAC/FxH,EAAOuR,GAAqBvR,EAAOuR,IAAsB,IAAIpV,KAAKC,QAElE4D,EAAOwR,QAAUxR,EAAOwR,SAAW,IAAIrV,KAAKC,MAStD,IAAMqV,EAAUnW,OAAOoW,KAAK1R,GAAQyG,OAAOsH,QAAO,SAAC4D,EAAgBC,GAGhE,OADAD,EAAIC,GAAO5R,EAAO4R,GACXD,IACP,IACHN,EAAcI,KACd,CAAClX,EAAOK,IAGR,gBAAC,IAAM+I,SAAP,WACG,qBAAIlD,UAAU,gBAAd,wBACgB,KAAdqI,GAEC,uBAAKrI,UAAU,mFAAf,UACG,6BAAKqI,IACL,yBAAQrI,UAAU,6BAA6B5B,KAAK,SAASmE,QAAS,kBAAM4N,EAAa,KAAzF,SACG,sBAAK3N,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,EAAGV,EAAE,gCAKjF,uBAAK5C,UAAU,YAAf,UACG,yBAAQ5B,KAAK,SAAS4B,UAAU,yBAAyBuC,QAAS,kBAAM4M,GAAUD,IAAlF,SACG,iDAAK1M,MAAM,6BAA6B9B,QAAQ,YAAY+B,KAAK,WAAgByM,EAAY,CAAEc,UAAW,2BAA8B,IAAxI,IAA6IhQ,UAAU,gBAAvJ,UAAuK,uBAAM4C,EAAE,kBAAkBH,KAAK,SAAS,uBAAMG,EAAE,uDAE1N,0BAAQnI,KAAK,OAAOc,GAAG,OAAOyE,UAAU,2DAA2DgF,SAAU,SAAChD,GAAD,OAAOqN,EAAYrN,EAAEG,OAAO8C,QAAzI,UACG,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,eAAd,0BACA,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,WAAd,uBACA,yBAAQA,MAAM,QAAd,mBACA,yBAAQA,MAAM,UAAd,qBACA,yBAAQA,MAAM,UAAd,2BAGN,+BACK0L,GAAc9V,OAAOoW,KAAKN,GAAYnU,KAAI,SAAC+T,GAAD,OACzC,eAAC,GAAD,CAAwBtI,OAAQsI,EAAOzW,MAAO6W,EAAWJ,GAAQrB,UAAWA,EAAWE,SAAUA,EAAUe,aAAcA,GAAxGI,YCxDjBa,GAbD,kBACX,iCACG,uBAAKpR,UAAU,eAAf,UACG,eAAC,IAAD,CAASqR,OAAK,EAAClO,GAAG,SAASnD,UAAU,YAAYsR,gBAAgB,gBAAjE,mBACA,eAAC,IAAD,CAASD,OAAK,EAAClO,GAAG,mBAAmBnD,UAAU,YAAYsR,gBAAgB,gBAA3E,yBAEH,gBAAC,IAAD,WACG,eAAC,IAAD,CAAOD,OAAK,EAACE,KAAK,SAASC,UAAWd,KACtC,eAAC,IAAD,CAAOa,KAAK,mBAAmBC,UAAWxC,YC0EpCyC,GArEG,WACf,IAAMvX,EAAQoH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,QAAQC,SACvDI,EAAUgH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMN,WACjDsH,EAAWC,cAHI,EAIyBN,mBAAyB,IAJlD,mBAIdmQ,EAJc,KAIGC,EAJH,KAgCrB,OA1BA7P,qBAAU,YACS,uCAAG,4BAAAzD,EAAA,yDACO,IAAnB/D,EAAQuP,OADI,gCAEOrF,GAAgBtK,GAFvB,OAEP0X,EAFO,OAE+BtX,QAC5CsH,EAAU1E,EAAW0U,IAHR,2CAAH,qDAMhBC,KACA,IAEH/P,qBAAU,WACP,IAAMiO,EAAwB,GAC9BzV,EAAQuW,SAAQ,SAAC5I,GACd,IAAM6J,EAA4B,CAAEvV,OAAQ0L,EAAO1L,OAAQ9B,KAAMwN,EAAOxN,KAAMyN,UAAW,IACzF6H,EAAOrU,KAAKoW,GACZ7J,EAAOC,UAAU2I,SAAQ,SAAChV,GAGf,IAAD,EAFHA,EAASuC,OAASsB,EAAaqS,KAChCD,EAAa5J,UAAUxM,KAAK,CAAEsW,OAAQnW,EAAUoW,WAAY,KAE5D,UAAAH,EAAa5J,UAAU7M,MAAK,SAACC,GAAD,OAAOA,EAAE0W,OAAOzV,SAAT,UAAwBV,EAASU,OAAOwK,MAAM,KAAK,GAAnD,YAAyDlL,EAASU,OAAOwK,MAAM,KAAK,cAAvH,SAA+HkL,WAAWvW,KAAKG,SAIxJ8V,EAAmB5B,KACnB,CAACzV,IAGD,eAAC,IAAM4I,SAAP,UACG,sBAAKlD,UAAU,QAAf,SACK0R,GAEI,eAAC,IAAMxO,SAAP,UACG,sBAAKlD,UAAU,8BAAf,SACK0R,EAAgBlV,KAAI,SAACyL,GAAD,OACnB,iCACG,qBAAIjI,UAAU,WAAd,SAA2BiI,EAAOxN,OAClC,qBAAIuF,UAAU,YAAd,SACIiI,EAAOC,UAAU1L,KAAI,SAACX,GAAD,OACnB,gBAAC,IAAMqH,SAAP,WACG,qBAAIlD,UAAU,6CAAd,SAA2D,eAAC,IAAD,CAAMmD,GAAE,kBAAatH,EAASmW,OAAOzV,QAArC,SAAiDV,EAASmW,OAAOvX,SAC1HoB,EAASoW,WAAWpI,OAAS,GAE5B,qBAAI7J,UAAU,OAAd,SAEMnE,EAASoW,WAAWzV,KAAI,SAAC0V,GAAD,OACrB,qBAA2BlS,UAAU,6CAArC,SAAkF,eAAC,IAAD,CAAMmD,GAAE,kBAAa+O,EAAU3V,QAA/B,SAA2C2V,EAAUzX,QAA9HyX,EAAU3V,eAPbV,EAASmW,OAAOzV,eAJpC0L,EAAO1L,oBCO7B4V,GA1DM,WAAO,IAAD,EAChBjY,EAAUoH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAAjDC,MACA2B,EAAauW,cAAbvW,SAFgB,EAGM0F,qBAHN,mBAGjB8Q,EAHiB,KAGRC,EAHQ,OAIE/Q,qBAJF,mBAIV4C,GAJU,WAMxBrC,qBAAU,YACU,uCAAG,4BAAAzD,EAAA,+EAEOmG,GAAgBtK,EAAO2B,GAF9B,OAER0D,EAFQ,OAGd+S,EAAW/S,EAAO1D,UAHJ,gDAKdsI,EAAS,KAAe3E,SALV,yDAAH,qDASjB+S,KACA,IAKH,OACG,gBAAC,IAAMrP,SAAP,WACG,uBAAKlD,UAAU,OAAf,UACG,qBAAIA,UAAU,WAAd,gBAA2BqS,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAS5X,OACpC,oCAAOoB,EAAP,WAEM,OAAPwW,QAAO,IAAPA,OAAA,EAAAA,EAASrE,WAER,sBAAKhO,UAAU,wDAAf,SACG,6BAAK,YAAIqS,EAAQrE,UAAU7G,MAAM,GAAI,GAAGC,KAAK,UAG1C,OAAPiL,QAAO,IAAPA,OAAA,EAAAA,EAASG,aAER,gBAAC,IAAMtP,SAAP,WACG,oBAAGlD,UAAU,8CAAb,wBADH,OAEIqS,QAFJ,IAEIA,GAFJ,UAEIA,EAASG,kBAFb,aAEI,EAAqBhW,KAAI,SAACiW,GAAD,OACvB,iCACG,oBAAGzS,UAAU,YAAb,SAA2ByS,EAAUhY,OACrC,oBAAGuF,UAAU,6BAAb,SAA4CyS,EAAUlJ,UAAY,YAAc,kBAChF,qBAAIvJ,UAAU,OAAd,SACKyS,EAAUC,UAAUvL,QAAQnB,MAAK,SAAC3H,EAAG4H,GAAJ,OAAU5H,EAAE6B,KAAKsQ,cAAcvK,EAAE/F,SAAO1D,KAAI,SAACmW,GAAD,OAC5E,sBAAI3S,UAAU,OAAd,UACG,gCA1BLiF,EA0BuB0N,EAASzS,KAzBnD+E,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,MAyB/D,iBAA0Cf,KAAKuM,MAAQD,EAASxS,SAAWwS,EAASE,eAAkB,IAAO,IAAM,IAAIC,QAAQ,GAA/H,QACA,oBAAG9S,UAAU,wBAAb,mBAAyC2S,EAASxS,SAASiD,iBAA3D,eAAkFuP,EAASE,eAAezP,sBAFnFuP,EAASzS,MAzBtC,IAAC+E,SAoBGwN,EAAUlX,cC4CvBwX,GA3EC,SAAC,GAAuC,IAArC1N,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,KAAM4I,EAAiB,EAAjBA,KAC7BM,EAAUC,cACV7M,EAAWC,cACXlI,EAAO2H,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAHA,EAItBsH,oBAAS,GAJa,mBAI7CmN,EAJ6C,KAIpCC,EAJoC,OAK1BpN,mBAAiB,IALS,mBAK7CtE,EAL6C,KAKtCkH,EALsC,KAM9C2B,EAAgBR,EAAO,kFAAoF,SAEjHxD,qBAAU,WACP6M,GAAW,GACXxK,EAAS,MACT,CAAC+J,IAEJ,IAAM8E,EAAW,uCAAG,4BAAA3U,EAAA,6DACjBsQ,GAAW,GADM,kBAGOnK,EAAY7K,EAAKI,SAAUJ,EAAKO,MAAOuF,EAASwT,SAHvD,OAGR1T,EAHQ,OAIdqC,EAAS7G,EAAQwE,IAEjBiP,EAAQ9S,KAAK,UANC,kDAQdiT,GAAW,GACXxK,EAAS,KAAe3E,SATV,0DAAH,qDAajB,OACG,uBAAKQ,UAAW8F,EAAhB,UACG,sBAAK9F,UAAU,8DAA8DuC,QAAS8C,IACtF,sBAAKrF,UAAU,8FAAf,SACG,uBAAKA,UAAU,oCAAf,UACG,qBAAIA,UAAU,6BAAd,wCACA,uBAAKA,UAAU,OAAf,UACG,oBAAGA,UAAU,wBAAb,yBACA,sCAAKkO,QAAL,IAAKA,OAAL,EAAKA,EAAMgF,OAAO9P,iBAAlB,iBAEH,uBAAKpD,UAAU,OAAf,UACG,oBAAGA,UAAU,wBAAb,2BACA,sCAAKkO,QAAL,IAAKA,OAAL,EAAKA,EAAMiF,WAAX,OAA6BjF,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMiF,YAAa,EAAI,IAAM,SAErE,uBAAKnT,UAAU,OAAf,UACG,oBAAGA,UAAU,wBAAb,8BACA,+BACKkO,IAASA,EAAKgF,OAAUhF,EAAKgF,QAAUhF,EAAKkF,KAAO,MAAOhQ,iBAC3D,IAFJ,iBAKDnG,GAEI,sBAAK+C,UAAU,qDAAf,SACG,6BAAK/C,MAGd,sBAAK+C,UAAU,wBAAf,SACM0O,EAaE,oBAAG1O,UAAU,iCAAb,4BAXC,gBAAC,IAAMkD,SAAP,WACG,yBAAQ9E,KAAK,SAAS4B,UAAU,iEAAiEuC,QAAS8C,EAA1G,mBACA,yBACGjH,KAAK,SACL4B,UAAU,+IACVoE,SAAUsK,GAAYzR,EAAM4M,OAAS,EACrCtH,QAASyQ,EAJZ,oCCoBZhE,GArFG,WACf,IAAMrV,EAAO2H,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAD/B,EAEKsH,qBAFL,mBAEd1H,EAFc,KAEPwZ,EAFO,OAGa9R,oBAAS,GAHtB,mBAGd+N,EAHc,KAGHC,EAHG,OAImBhO,qBAJnB,mBAId+R,EAJc,KAIAC,EAJA,KAarB,OAPAzR,qBAAU,YACO,uCAAG,sBAAAzD,EAAA,kEACdgV,EADc,SACE7O,EAAsB7K,EAAKO,OAD7B,mBACqCL,OADrC,yDAAH,qDAGd2Z,KACA,IAGA,gBAAC,IAAMtQ,SAAP,WACG,eAAC,GAAD,CAASoC,KAAMgK,EAAWpB,KAAMoF,EAAcjO,YAAa,WAAQkK,GAAa,GAAQgE,OAAgBvZ,MACxG,qBAAIgG,UAAU,gBAAd,6BACA,uBAAKA,UAAU,yBAAf,WACMnG,GAEG,gBAAC,IAAMqJ,SAAP,WACG,sBAAKlD,UAAU,iDAAf,SACG,eAAC,GAAD,MAEH,sBAAKA,UAAU,iDAAf,SACG,eAAC,GAAD,MAEH,sBAAKA,UAAU,iDAAf,SACG,eAAC,GAAD,SAXf,OAeKnG,QAfL,IAeKA,OAfL,EAeKA,EAAO2C,KAAI,SAAC0R,GAAD,OACV,0BAAQ9P,KAAK,SAAS4B,UAAU,mGAA6IuC,QAAS,WAAQgN,GAAa,GAAOgE,EAAgBrF,IAAlO,UACG,uBAAKlO,UAAU,mCAAf,UACG,uBAAKA,UAAU,oBAAf,UACG,sBAAKA,UAAU,eAAf,SACG,sBAAKwC,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,IAAKV,EAAE,oLAG7E,qBAAI5C,UAAU,UAAd,SAA0BkO,EAAKgF,OAAO9P,sBAEzC,+BACK8K,EAAKuF,oBACD,oBAAGzT,UAAU,eAAb,sCAGZ,oBAAGA,UAAU,wBAAb,SAAuCkO,EAAK9P,OAC5C,uBAAK4B,UAAU,OAAf,UACG,uBAAKA,UAAU,YAAf,UACG,sBAAKA,UAAU,eAAeqD,MAAM,OAApC,SACG,sBAAKb,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,EAAGV,EAAE,+FAG3E,6BAAKsL,EAAKiF,gBAEb,uBAAKnT,UAAU,YAAf,UACG,oBAAGA,UAAU,mCAAmCqD,MAAM,kBAAtD,eACA,+BACG,kCAAQ6K,EAAKkF,KAAb,OACA,wBAAMpT,UAAU,wBAAhB,cAEKkO,EAAKgF,QAAUhF,EAAKkF,KAAO,KAC5B,IAHJ,oBAQN,qBAAGpT,UAAU,6CAAb,kCAEI,KACEkO,EAAKgF,OAAUhF,EAAKgF,QAAUhF,EAAKkF,KAAO,MAAOhQ,iBACnD,IAJJ,kBArCkI8K,EAAKgF,OAAShF,EAAK9P,KAAO8P,EAAKkF,gBC8CvK1C,GA3ED,WAAO,IAAD,EACWpP,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAA3DF,EADS,EACTA,SAAUG,EADD,EACCA,MADD,EAEUoH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAA1DE,EAFS,EAETA,MAAOD,EAFE,EAEFA,QACTgI,EAAWC,cAHA,EAIeN,qBAJf,mBAIVzC,EAJU,KAIA4U,EAJA,KAMXC,EAAS,uCAAG,WAAO7T,GAAP,eAAAzB,EAAA,+EAESmG,EAAezK,EAAUG,EAAO4F,GAFzC,OAENP,EAFM,OAGZqC,EAASzG,EAAYoE,EAAO5F,KAAKE,QACjC6Z,EAAY,CAAEtV,KAAM,UAAWoB,QAAS,+BAJ5B,gDAMZkU,EAAY,CAAEtV,KAAM,QAASoB,QAAS,KAAeA,UANzC,yDAAH,sDAaf,OACG,gBAAC,IAAM0D,SAAP,WACG,qBAAIlD,UAAU,gBAAd,wBACElB,GAEC,uBAAKkB,UAAS,mEAAgF,YAAlBlB,EAASV,KAAqB,8BAAgC,2BAA1I,UACG,6BAAKU,EAASU,UACd,yBAAQQ,UAAS,kBAA+B,YAAlBlB,EAASV,KAAqB,uBAAyB,sBAAwBA,KAAK,SAASmE,QAAS,kBAAMmR,OAAY1Z,IAAtJ,SACG,sBAAKwI,MAAM,6BAA6BC,KAAK,OAAO/B,QAAQ,YAAY6C,OAAO,eAA/E,SACG,uBAAMC,cAAc,QAAQC,eAAe,QAAQH,YAAa,EAAGV,EAAE,gCAKjF,qBAAI5C,UAAU,eAAd,2BACA,sBAAKA,UAAU,yBAAf,SACM,YAAInG,GAAO2R,QAAO,SAAClQ,GAAD,OAAOA,EAAE0D,SAAWY,EAAWqO,WAAUpE,OAAS,EAClE,YAAIhQ,GAAO2R,QAAO,SAAClQ,GAAD,OAAOA,EAAE0D,SAAWY,EAAWqO,WAASzR,KAAI,SAAC0R,GAAD,OAC7D,uBAAKlO,UAAU,2DAAf,UACG,uBAAKA,UAAU,OAAf,UACG,oBAAGA,UAAU,wBAAb,8BACA,+BAAKkO,EAAKC,gBAAgB/K,iBAA1B,iBAEH,iCACG,oBAAGpD,UAAU,wBAAb,iBACA,6BAAKoO,aAAoB,IAAI3B,KAAKyB,EAAKG,KAAM,CAAEC,WAAW,SAE3D1U,EAAUsU,EAAKC,iBAEd,sBAAKnO,UAAU,OAAf,SACG,yBAAQ5B,KAAK,SAAS4B,UAAU,kDAAkDuC,QAAS,kBAAMoR,EAAUzF,EAAK3S,KAAhH,uBAZsE2S,EAAK3S,OAiBrF,oBAAGyE,UAAU,eAAb,sCAER,qBAAIA,UAAU,eAAd,0BACA,sBAAKA,UAAU,yBAAf,SACK,YAAInG,GAAO2R,QAAO,SAAClQ,GAAD,OAAOA,EAAE0D,SAAWY,EAAWqO,WAASzR,KAAI,SAAC0R,GAAD,OAC7D,uBAAKlO,UAAU,2DAAf,UACG,uBAAKA,UAAU,OAAf,UACG,oBAAGA,UAAU,wBAAb,8BACA,+BAAKkO,EAAKC,gBAAgB/K,iBAA1B,iBAEH,iCACG,oBAAGpD,UAAU,wBAAb,oBACA,8BAlDIiF,EAkDciJ,EAAKlP,OAjDtCiG,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,aA0CC8G,EAAK3S,IA3C3E,IAAC0J,WCVV2O,GAbD,kBACX,iCACG,uBAAK5T,UAAU,eAAf,UACG,eAAC,IAAD,CAASqR,OAAK,EAAClO,GAAG,SAASnD,UAAU,YAAYsR,gBAAgB,gBAAjE,wBACA,eAAC,IAAD,CAASD,OAAK,EAAClO,GAAG,mBAAmBnD,UAAU,YAAYsR,gBAAgB,gBAA3E,2BAEH,gBAAC,IAAD,WACG,eAAC,IAAD,CAAOD,OAAK,EAACE,KAAK,SAASC,UAAWd,KACtC,eAAC,IAAD,CAAOa,KAAK,mBAAmBC,UAAWxC,YCqGpC6E,GA1GC,WAAO,IACZ3Z,EAAUoH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMX,WAAjDC,MACAJ,EAAUwH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMjB,QAAjDG,MACFM,EAAakH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMR,cACpDE,EAAUgH,aAAY,SAAC1G,GAAD,OAAqBA,EAAMN,WACjDsH,EAAWC,cALE,EAMeN,qBANf,mBAMZ2G,EANY,KAMDI,EANC,OAOK/G,mBAAiBkL,KAAKC,OAP3B,mBAOZ5O,EAPY,KAON6O,EAPM,OAQqBpL,qBARrB,mBAQZuS,EARY,KAQEC,EARF,KAUbC,EAAY,uCAAG,WAAO/L,GAAP,eAAA5J,EAAA,6DAClB0V,EAAgB9L,GAChBK,OAAatO,GAFK,SAGEwK,GAAiBtK,EAAO+N,GAH1B,OAGZpJ,EAHY,OAGmCqJ,UACrDI,EAAazJ,GAJK,2CAAH,sDAOlBiD,qBAAU,YACS,uCAAG,4BAAAzD,EAAA,yDACO,IAAnB/D,EAAQuP,OADI,gCAEOrF,GAAgBtK,GAFvB,OAEP0X,EAFO,OAE+BtX,QAC5CsH,EAAU1E,EAAW0U,IAHR,2CAAH,qDAMhBC,GAGA,IAAMjF,EAAWC,aAAY,kBAAMF,EAAQF,KAAKC,SAAQ,KAExD,OAAO,kBAAMI,cAAcF,MAC3B,IAEH9K,qBAAU,WACgB,IAAnBxH,EAAQuP,QACZmK,EAAa1Z,EAAQ,GAAGiC,UACxB,CAACjC,IAEJwH,qBAAU,YACY,uCAAG,sBAAAzD,EAAA,sDACV,OAAT6J,QAAS,IAATA,KAAW2I,QAAX,uCAAmB,WAAOhV,GAAP,eAAAwC,EAAA,0DACZvE,EAAMsC,MAAK,SAACd,GAAD,OAAOA,EAAEO,WAAaA,EAASU,UAD9B,gCAEMiI,GAActK,EAAO2B,EAASU,QAFpC,OAEPsC,EAFO,OAGb+C,EAASzF,EAAiB,CAAE8X,UAAWxH,KAAKC,MAAOpQ,OAAQuC,EAAKhD,YAHnD,2CAAnB,uDADmB,2CAAH,qDAQnBqY,KACA,CAAChM,EAAWpO,IAEf,IAAMqa,EAAqB,SAACtY,GACzB,IAAMgD,EAAOzE,EAAWiB,MAAK,SAACC,GAAD,OAAOA,EAAEgB,OAAOC,SAAWV,EAASU,UAKjE,OAAKsC,GAA4C,KAAhC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMvC,OAAOyJ,YAAY8D,QAItC,OACGhL,QADH,IACGA,OADH,EACGA,EAAMvC,OAAOyJ,YAAYoB,QAAQnB,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE9B,OAAS0J,EAAE1J,OAAU,EAAK0J,EAAE1J,OAAS8B,EAAE9B,QAAW,EAAI,KAAIC,KAAI,SAACqK,GAAD,OAC/G,uBAAK7G,UAAU,eAAf,UACG,oBAAGA,UAAU,YAAb,UAVaiF,EAU2B4B,EAAOtK,OATrD0I,EAAM6B,cAAcC,MAAM,KAAKvK,KAAI,SAACwK,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,MAAIC,KAAK,QAUjF,qBAAGpH,UAAU,OAAb,uBAAgC6G,EAAOF,kBAAkBvD,oBACzD,qBAAGpD,UAAU,OAAb,mBAA4B6G,EAAOJ,aAAeI,EAAOH,QAAQtD,iBAAjE,cACA,qBAAGpD,UAAU,OAAb,oBAA6B6G,EAAOJ,aAAeI,EAAOH,QAAQtD,iBAAlE,gBAJgCyD,EAAOtK,OAASsK,EAAOJ,aAAeI,EAAOL,eATjE,IAACvB,KAIZ,oBAAGjF,UAAU,6BAAb,gCAePoU,EAAiB,SAACvY,GACrB,IAAMgD,EAAOzE,EAAWiB,MAAK,SAACC,GAAD,OAAOA,EAAEgB,OAAOC,SAAWV,EAASU,UAEjE,OAAKsC,EAEC,WAAN,OAAkBuP,aAAoB,IAAI3B,KAAK5N,EAAKoV,WAAY,CAAE3F,WAAW,KAFzD,MAKvB,OACG,gBAAC,IAAMpL,SAAP,WACG,qBAAIlD,UAAU,gBAAd,qBACA,oBAAGA,UAAU,6BAAb,oBACE1F,EAAQkC,KAAI,SAACyL,GAAD,OACX,yBAA4B7J,KAAK,SAAS4B,UAAS,iCAA4B8T,IAAiB7L,EAAO1L,OAAS,gBAAkB,IAAM0I,MAAOgD,EAAO1L,OAAQgG,QAAS,SAACP,GAAD,OAAOgS,EAAahS,EAAEqS,cAAcpP,QAA3M,SAAqNgD,EAAOxN,MAA/MwN,EAAO1L,WAEvB,sBAAKyD,UAAU,yBAAf,SACMkI,EAKGA,EAAUlC,MAAK,SAAC3H,EAAG4H,GAAJ,OAAY5H,EAAE5D,KAAOwL,EAAExL,KAAQ,EAAKwL,EAAExL,KAAO4D,EAAE5D,MAAS,EAAI,KAAI+B,KAAI,SAACX,GAAD,OAChF,uBAAKmE,UAAU,iDAAf,UACG,uBAAKA,UAAU,kEAAf,UACG,qBAAIA,UAAU,UAAd,SAA0BnE,EAASpB,OACnC,oBAAGuF,UAAU,wBAAb,SAAuClC,GAAQsW,EAAevY,QAE/DsY,EAAmBtY,KAL6CA,EAASU,WAJjF,eAAC,GAAD,UCkFH+X,OAtIf,YAAgC,IAAjBC,EAAgB,EAAhBA,OAAgB,EACkBhT,mBAAmE,IADrF,mBACrBiT,EADqB,KACJC,EADI,OAEWnT,aAAY,SAAC1G,GAAD,OAAqBA,KAAhEX,EAFoB,EAEpBA,QAASI,EAFW,EAEXA,YAAaV,EAFF,EAEEA,KACxBiI,EAAWC,cACXsP,EAAM1U,aAAaiY,QAAQ,UAEjC5S,qBAAU,WACP,QAAY9H,IAARmX,GAA6B,OAARA,EAAzB,CAEA,IAAMwD,EAAShY,KAAKiY,MAAMzD,GAE1BvP,EAAS3G,EAAS0Z,IAEA,uCAAG,kCAAAtW,EAAA,+EAEMmG,EAAYmQ,EAAO5a,SAAU4a,EAAOza,OAF1C,UAETqF,EAFS,OAGfqC,EAAS7G,EAAQwE,KAGbA,EAAO5F,KAAKG,MAAMsC,MAAK,SAACd,GAAD,YAAsBtB,IAAfsB,EAAEO,YANrB,iCAOY2I,GAAemQ,EAAOza,MAAOya,EAAO5a,UAPhD,kBAOJD,MAEF+W,QAAN,uCAAc,WAAOlV,GAAP,iBAAA0C,EAAA,0DACP1C,EAAKG,aADE,gCAEqB0I,GAAoBmQ,EAAOza,MAAOya,EAAO5a,SAAU4B,EAAKG,cAF7E,gBAGwB,QADxB8M,EAFA,EAEAA,YACOiM,cACZjT,EAASnG,EAAcmN,IAJlB,2CAAd,uDATY,wCAAAvK,EAAA,MAmBI,4BAAAA,EAAA,sEACImG,GAAgBmQ,EAAOza,OAD3B,OACV0X,EADU,OACmCtX,QACnDsH,EAAU1E,EAAW0U,IAFL,2CAnBJ,qDAuBfkD,GAGMC,EAAkBtY,aAAaiY,QAAQ,cAEnC,QADJta,EAAiC,OAApB2a,EAA2BpY,KAAKiY,MAAMG,GAAqC,YACpF,IAAV3a,KAAYoC,KAAI,SAACqC,GAAD,OACb+C,EAASzF,EAAiB0C,OA7Bd,kDAgCgB,+BAA3B,KAAeW,UAChBoC,EAASjH,KACT8B,aAAawG,WAAW,WAlCZ,0DAAH,oDAsClB+R,MACA,IAEH,IAAMC,EAAiB,SAACpW,GACrBqW,QAAQC,IAAItW,GACZ+C,EAAS9E,EAAmB,CAAElB,OAAQiD,EAAKjD,OAAQmB,SAAS,KAC5D6E,EAAS5E,EAAmB6B,KAGzBuW,EAAoB,uCAAG,WAAOvW,GAAP,eAAAR,EAAA,yDACtBQ,EAAKT,OAAS+G,GAAWiD,OADH,uBAEvBxG,EAASnG,EAAcoD,EAAKA,OAFL,SAIG2F,GAAavK,EAAQC,MAAOD,EAAQF,SAAW8E,EAAKA,KAAoBjD,QAJ3E,OAIjBiN,EAJiB,OAKvBjH,EAASxG,EAAWyN,EAAYlN,OALT,uBAOvBiG,EAAS1G,EAAY2D,EAAKA,KAAkBjF,UAC5CgI,EAASxG,EAAYyD,EAAKA,KAAkBlD,OARrB,4CAAH,sDAYpB0Z,EAA2B,SAACC,GAC/BA,EAAO/P,cAAc9I,aAAaiY,QAAQ,gBAGvCa,EAA4B,SAAC1W,GAChC+C,EAASzF,EAAiB,CAAE8X,UAAWxH,KAAKC,MAAOpQ,OAAQuC,EAAKhD,aA4BnE,OAzBAiG,qBAAU,WACPzH,EAAYwW,QAAZ,+BAAAxS,EAAA,MAAoB,WAAOhC,GAAP,mBAAAgC,EAAA,yDACXkN,EAAaiJ,EAAgBnZ,MAAK,SAACC,GAAD,OAAOA,EAAEM,SAAWS,EAAKT,WAG7DS,EAAKU,SAAYwO,EAJJ,uBAKR5P,EAAOhC,EAAKG,MAAMuB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOc,EAAKT,UALpC,SAMS,IAAI2Y,EAAOta,EAAQC,MACvCD,EAAQF,SAAUsC,EAAMV,EAAMhC,EAAKC,QACnC4b,IAAcP,GACdO,IAAcJ,GACdI,IAAcH,GACdG,IAAcD,IAXH,cAMRE,EANQ,gBAYRA,EAASC,MAZD,OAadjB,EAAmB,GAAD,mBAAKD,GAAL,CAAsB,CAAE5Y,OAAQS,EAAKT,OAAQ6Z,eAbjD,UAiBZpZ,EAAKU,UAAWwO,EAjBJ,kCAkBRA,EAAWkK,SAASE,OAlBZ,QAmBdlB,EAAmBD,EAAgBhJ,QAAO,SAAClQ,GAAD,OAAOA,EAAEM,SAAW2P,EAAW3P,WAnB3D,4CAApB,yDAsBA,CAACvB,IAGD,eAAC,IAAM6I,SAAP,eACwBlJ,IAAlBC,EAAQC,OAAyC,OAAlBD,EAAQC,OAA2C,IAAzBD,EAAQC,MAAM2P,aAC/C7P,IAArBC,EAAQF,UAA+C,OAArBE,EAAQF,UAAiD,IAA5BE,EAAQF,SAAS8P,OAAgB,eAAC+L,GAAD,IAChG,gBAAC,IAAM1S,SAAP,WACG,eAAC,GAAD,IACA,sBAAKlD,UAAU,2CAAf,SACG,sBAAKA,UAAU,+BAAf,SAC8B,IAAzB/F,EAAQC,MAAM2P,QAEV,gBAAC,IAAD,WACG,eAAC,IAAD,CAAOwH,OAAK,EAACE,KAAK,IAAIC,UAAWzD,KACjC,eAAC,IAAD,CAAOwD,KAAK,SAASC,UAAWJ,KAChC,eAAC,IAAD,CAAOG,KAAK,SAASC,UAAWoC,KAChC,eAAC,IAAD,CAAOrC,KAAK,WAAWC,UAAWqC,KAClC,eAAC,IAAD,CAAOtC,KAAK,qBAAqBC,UAAWqE,KAC5C,eAAC,WAAD,CAAUC,SAAU,yBAApB,SACG,eAAC,IAAD,CAAOzE,OAAK,EAACE,KAAK,WAAWC,UAAWuE,oBC3JtET,GAASE,IAAyB,ICZzB,WACb,OAAO,IAAIjB,OAAO,IAA0B,4CDa9CyB,IAASC,OACN,eAAC,IAAMC,WAAP,UACG,eAAC,IAAD,CAAU7Y,MAAOA,EAAjB,SACG,eAAC,IAAD,CAAe8Y,SAAS,WAAxB,SACG,eAAC,GAAD,CAAK5B,OAAQe,WAItB1Q,SAASwR,eAAe,W","file":"static/js/main.32a8d23c.chunk.js","sourcesContent":["import Bottleneck from 'bottleneck';\nimport {\n   Status, Account, User, ShipsAvailable, Systems, Loans, Market, Purchase, Locations, FlightPlanRes, ShipInfo, OwnedShips, Jettison, CargoType, DepositResponse, Location, LocationResponse,\n} from './types';\n\n// IMPORTANT: camelCase used because: https://github.com/pmmmwh/react-refresh-webpack-plugin/blob/main/docs/TROUBLESHOOTING.md#usage-with-indirection-like-workers-and-js-templates\n// webworkers that reference this Api file will throw an error if PascalCase is used.\nenum fetchMethod {\n   Get = 'get',\n   Post = 'post',\n   Put = 'put',\n}\n\nconst BASE_URL = 'https://api.spacetraders.io';\n\nconst limiter = new Bottleneck({\n   minTime: 500,\n   maxConcurrent: 1,\n});\n\nconst wait = (time:number) => (\n   new Promise((resolve) => setTimeout(resolve, time))\n);\n\nasync function authFetch<T>(\n   url: string, token: string, type: fetchMethod, payload: Record<string, any> = {}, retry = 0,\n): Promise<T> {\n   let response;\n\n   if (type === fetchMethod.Get) {\n      response = await limiter.schedule(async () => {\n         const data = await fetch(url, {\n            method: type,\n            headers: {\n               Authorization: `Bearer ${token}`,\n            },\n         });\n         return data;\n      });\n   } else {\n      response = await limiter.schedule(async () => {\n         const data = await fetch(url, {\n            method: type,\n            headers: {\n               Authorization: `Bearer ${token}`,\n               'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n         });\n         return data;\n      });\n   }\n\n   // Retry 3 times if rate limit error\n   if (response.status === 429 && retry < 3) {\n      const header = response.headers.get('retry-after');\n      const retryAfter = header ? parseInt(header, 10) * 1000 : 1000;\n      await wait(retryAfter);\n      authFetch(url, token, type, payload, retry + 1);\n   }\n\n   if (response.status === 401) {\n      throw new Error('Invalid username or token.');\n   }\n\n   const result = await response.json();\n\n   if (response.status >= 400) {\n      throw new Error(result.error.message);\n   }\n\n   return result;\n}\n\nexport default {\n   async getStatus() {\n      const response = await fetch(`${BASE_URL}/game/status`);\n      const result = await response.json() as Status;\n\n      return result;\n   },\n\n   async getToken(username: string) {\n      const response = await fetch(`${BASE_URL}/users/${username}/token`, { method: fetchMethod.Post });\n\n      if (response.status >= 400) {\n         throw new Error('Username already exists');\n      }\n\n      const result = await response.json() as Account;\n\n      return result;\n   },\n\n   async getUser(username: string, token: string) {\n      const url = `${BASE_URL}/users/${username}`;\n      return authFetch<User>(url, token, fetchMethod.Get);\n   },\n\n   async getLoansAvailable(token: string) {\n      const url = `${BASE_URL}/game/loans`;\n      return authFetch<Loans>(url, token, fetchMethod.Get);\n   },\n\n   async getLoansOwned(username: string, token: string) {\n      const url = `${BASE_URL}/users/${username}/loans`;\n      return authFetch<Loans>(url, token, fetchMethod.Get);\n   },\n\n   async newLoan(username: string, token: string, type: string) {\n      const url = `${BASE_URL}/users/${username}/loans`;\n      return authFetch<User>(url, token, fetchMethod.Post, { type });\n   },\n\n   async replayLoan(username: string, token: string, loanId: string) {\n      const url = `${BASE_URL}/users/${username}/loans/${loanId}`;\n      return authFetch<User>(url, token, fetchMethod.Put);\n   },\n\n   async availableShips(token: string, className = '') {\n      const url = `${BASE_URL}/game/ships`;\n      return authFetch<ShipsAvailable>(url, token, fetchMethod.Get, { class: className });\n   },\n\n   async ownedShips(token: string, username: string) {\n      const url = `${BASE_URL}/users/${username}/ships`;\n      return authFetch<OwnedShips>(url, token, fetchMethod.Get);\n   },\n\n   async buyShip(token: string, username: string, location: string, type: string) {\n      const url = `${BASE_URL}/users/${username}/ships`;\n      return authFetch<User>(url, token, fetchMethod.Post, { location, type });\n   },\n\n   async shipInfo(token: string, username: string, shipId: string) {\n      const url = `${BASE_URL}/users/${username}/ships/${shipId}`;\n      return authFetch<ShipInfo>(url, token, fetchMethod.Get);\n   },\n\n   async systemsInfo(token: string) {\n      const url = `${BASE_URL}/game/systems`;\n      return authFetch<Systems>(url, token, fetchMethod.Get);\n   },\n\n   async getLocations(token: string, location: string) {\n      const url = `${BASE_URL}/game/systems/${location}/locations`;\n      return authFetch<Locations>(url, token, fetchMethod.Get);\n   },\n\n   async getLocation(token: string, location: string) {\n      const url = `${BASE_URL}/game/locations/${location}`;\n      return authFetch<LocationResponse>(url, token, fetchMethod.Get);\n   },\n\n   async getMarket(token: string, symbol: string) {\n      const url = `${BASE_URL}/game/locations/${symbol}/marketplace`;\n      return authFetch<Market>(url, token, fetchMethod.Get);\n   },\n\n   async purchaseOrder(token: string, username: string, shipId: string, good: string, quantity: number) {\n      const url = `${BASE_URL}/users/${username}/purchase-orders`;\n      return authFetch<Purchase>(url, token, fetchMethod.Post, { shipId, good, quantity });\n   },\n\n   async sellOrder(token: string, username: string, shipId: string, good: CargoType, quantity: number) {\n      const url = `${BASE_URL}/users/${username}/sell-orders`;\n      return authFetch<Purchase>(url, token, fetchMethod.Post, { shipId, good, quantity });\n   },\n\n   async depositGoods(token: string, structureId: string, shipId: string, good: CargoType, quantity: number) {\n      const url = `${BASE_URL}/game/structures/${structureId}/deposit`;\n      return authFetch<DepositResponse>(url, token, fetchMethod.Post, { shipId, good, quantity });\n   },\n\n   async deleteOrder(token: string, username: string, shipId: string, good: string, quantity: number) {\n      const url = `${BASE_URL}/users/${username}/ships/${shipId}/jettison`;\n      return authFetch<Jettison>(url, token, fetchMethod.Put, { good, quantity });\n   },\n\n   async createFlightPlan(token: string, username: string, shipId: string, destination: string) {\n      const url = `${BASE_URL}/users/${username}/flight-plans`;\n      return authFetch<FlightPlanRes>(url, token, fetchMethod.Post, { shipId, destination });\n   },\n\n   async queryFlightPlan(token: string, username: string, planId: string) {\n      const url = `${BASE_URL}/users/${username}/flight-plans/${planId}`;\n      return authFetch<FlightPlanRes>(url, token, fetchMethod.Get);\n   },\n\n   async warpJump(token: string, username: string, shipId: string) {\n      const url = `${BASE_URL}/users/${username}/warp-jump`;\n      return authFetch<FlightPlanRes>(url, token, fetchMethod.Post, { shipId });\n   },\n};\n","import { configureStore, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n   FlightPlan, Planet, OwnedLoan, OwnedShip, User, System, Jettison,\n} from '../Api/types';\nimport { WorkerError } from '../App';\nimport { Steps } from '../components/Automation/Models';\n\nexport interface StoredMarket {\n   updatedAt: number,\n   planet: Planet,\n}\n\ninterface InitialState {\n   user: {\n      credits: number,\n      loans: OwnedLoan[],\n      ships: OwnedShip[],\n      username: string | undefined\n   },\n   account: {\n      token: string,\n      username: string\n   },\n   flightPlans: FlightPlan[],\n   marketData: StoredMarket[],\n   automations: Steps[],\n   systems: System[],\n}\n\nconst initialState: InitialState = {\n   user: {\n      credits: 0,\n      loans: [],\n      ships: [],\n      username: undefined,\n   },\n   account: {\n      token: '',\n      username: '',\n   },\n   flightPlans: [],\n   marketData: [],\n   automations: [],\n   systems: [],\n};\n\nconst spacetraders = createSlice({\n   name: 'spacetraders',\n   initialState,\n   reducers: {\n      reset: (state) => {\n         Object.assign(state, initialState);\n      },\n      setUser: (state, { payload }:PayloadAction<User>) => {\n         state.user = payload.user;\n      },\n      setToken: (state, { payload }:PayloadAction<{ username:string, token:string }>) => {\n         state.account = payload;\n      },\n      setCredits: (state, { payload }:PayloadAction<number>) => {\n         state.user.credits = payload;\n      },\n      updateLoans: (state, { payload }:PayloadAction<OwnedLoan[]>) => {\n         state.user.loans = payload;\n      },\n      updateShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         Object.assign(state.user.ships.find((x) => x.id === payload.id), payload);\n      },\n      updateShips: (state, { payload }:PayloadAction<OwnedShip[]>) => {\n         state.user.ships = payload;\n      },\n      addFlightPlan: (state, { payload }:PayloadAction<FlightPlan>) => {\n         state.flightPlans.push(payload);\n         // when in transit, ship location is 'undefined'\n         const ship = state.user.ships.find((x) => x.id === payload.shipId);\n         if (ship) {\n            ship.location = undefined;\n            ship.flightPlanId = payload.id;\n         }\n      },\n      removeFlightPlan: (state, { payload }:PayloadAction<FlightPlan>) => {\n         if (state.flightPlans.findIndex((x) => x.id === payload.id) > -1) {\n            state.flightPlans.splice(state.flightPlans.findIndex((x) => x.id === payload.id), 1);\n\n            // update ship with new location\n            const ship = state.user.ships.find((x) => x.id === payload.shipId);\n            if (ship) {\n               ship.location = payload.destination;\n               ship.flightPlanId = undefined;\n            }\n         }\n      },\n      updateMarketData: (state, { payload }:PayloadAction<StoredMarket>) => {\n         // check state for existing market object\n         if (state.marketData.some((item) => (item.planet.symbol === payload.planet.symbol))) {\n            state.marketData = state.marketData.map((item) => ((item.planet.symbol === payload.planet.symbol) ? payload : item));\n         } else {\n            state.marketData.push(payload);\n         }\n         localStorage.setItem('marketData', JSON.stringify(state.marketData));\n      },\n      addAutomation: (state, { payload }:PayloadAction<Steps>) => {\n         // check for existing automation for given ship and replace if it exists\n         if (state.automations.findIndex((x) => x.shipId === payload.shipId) !== -1) {\n            state.automations.splice(state.automations.findIndex((x) => x.shipId === payload.shipId), 1);\n         }\n\n         state.automations.push(payload);\n      },\n      setAutomationState: (state, { payload }:PayloadAction<{ shipId: string, enabled: boolean}>) => {\n         const ship = state.automations.find((x) => x.shipId === payload.shipId);\n         if (ship) {\n            ship.enabled = payload.enabled;\n         }\n      },\n      addAutomationError: (state, { payload }:PayloadAction<WorkerError>) => {\n         const ship = state.automations.find((x) => x.shipId === payload.shipId);\n         if (ship) {\n            ship.error = payload.error;\n         }\n      },\n      setSystems: (state, { payload }:PayloadAction<System[]>) => {\n         state.systems = payload;\n      },\n   },\n});\n\nexport const {\n   setUser, setToken, setCredits, updateShip, addFlightPlan, removeFlightPlan,\n   updateMarketData, addAutomation, setAutomationState, addAutomationError, reset,\n   updateShips, setSystems, updateLoans,\n} = spacetraders.actions;\n\nconst { reducer } = spacetraders;\n\n// STORE\n\nconst store = configureStore({\n   reducer,\n   preloadedState: undefined,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","export enum LoanType {\n   Startup = 'STARTUP',\n}\n\nexport enum LocationType {\n   Planet = 'PLANET',\n   Moon = 'MOON',\n   GasGiant = 'GAS_GIANT',\n   Asteroid = 'ASTEROID',\n   Wormhole = 'WORMHOLE',\n   Nebula = 'NEBULA',\n}\n\nexport enum CargoType {\n   Chemicals = 'CHEMICALS',\n   Construction = 'CONSTRUCTION_MATERIALS',\n   Consumer = 'CONSUMER_GOODS',\n   Electronics = 'ELECTRONICS',\n   Food = 'FOOD',\n   Fuel = 'FUEL',\n   Machinery = 'MACHINERY',\n   Metals = 'METALS',\n   Research = 'RESEARCH',\n   ShipParts = 'SHIP_PARTS',\n   ShipPlating = 'SHIP_PLATING',\n   Textiles = 'TEXTILES',\n   Workers = 'WORKERS',\n}\n\nexport enum LoanStatus {\n   Current = 'CURRENT',\n   Paid = 'PAID',\n   PaidLate = 'PAID_LATE',\n}\n\nexport interface Status {\n   status: string;\n}\n\nexport interface Account {\n   token: string,\n   user: {\n      createdAt: string,\n      credits: number,\n      id: string,\n      email: string,\n      picture: string,\n      updatedAt: string,\n      username: string,\n   }\n}\n\nexport interface Loans {\n   loans: Loan[],\n}\n\nexport interface Loan {\n   type: string,\n   amount: number,\n   collateralRequired: boolean,\n   rate: number,\n   termInDays: number,\n}\n\nexport interface OwnedLoan {\n   due: Date,\n   id: string,\n   repaymentAmount: number,\n   status: LoanStatus,\n   type: LoanType,\n}\n\nexport interface ShipsAvailable {\n   ships: Ship[],\n}\n\nexport interface OwnedShips {\n   ships: OwnedShip[]\n}\n\nexport interface ShipInfo {\n   ship: OwnedShip,\n}\n\nexport interface Ship {\n   class: string,\n   manufacturer: string,\n   maxCargo: number,\n   plating: number,\n   purchaseLocations: PurchaseLocation[],\n   speed: number,\n   type: string,\n   weapons: number,\n}\n\nexport interface OwnedShip {\n   cargo: Cargo[],\n   class: string,\n   flightPlanId?: string,\n   id: string,\n   location?: string,\n   manufacturer: string,\n   maxCargo: number,\n   plating: number,\n   spaceAvailable: number,\n   speed: number,\n   type: string,\n   weapons: number,\n   x: number,\n   y: number,\n}\n\nexport interface Cargo {\n   good: CargoType,\n   quantity: number,\n   totalVolume: number,\n}\n\nexport interface PurchaseLocation {\n   location: string,\n   price: number,\n}\n\nexport interface User {\n   user: {\n      credits: number,\n      loans: OwnedLoan[],\n      ships: OwnedShip[],\n      username: string,\n   }\n}\n\nexport interface Location {\n   symbol: string,\n   type: LocationType,\n   name: string,\n   x: number,\n   y: number,\n   anomaly?: string,\n   messages?: string[],\n   structures?: Structure[]\n}\n\nexport interface Locations {\n   locations: Location[],\n}\n\nexport interface Structure {\n   id: string,\n   name: string,\n   completed: boolean,\n   materials: StructureMaterials[],\n}\n\nexport interface LocationResponse {\n   location: Location,\n   dockedShips: number,\n}\n\nexport interface System {\n   symbol: string,\n   name: string,\n   locations: Location[],\n}\n\nexport interface Systems {\n   systems: System[],\n}\n\nexport interface Market {\n   location: Planet,\n}\n\nexport interface Marketplace {\n   symbol: string,\n   volumePerUnit: number,\n   pricePerUnit: number,\n   spread: number,\n   quantityAvailable: number,\n}\n\nexport interface Planet {\n   marketplace: Marketplace[],\n   name: string,\n   symbol: string,\n   type: string,\n   x: number,\n   y: number,\n}\n\nexport interface Purchase {\n   credits: number,\n   order: Order,\n   ship: OwnedShip,\n}\n\nexport interface Order {\n   good: string,\n   pricePerUnit: number,\n   quantity: number,\n   total: number,\n}\n\nexport interface StructureMaterials {\n   good: CargoType,\n   quantity: number,\n   targetQuantity: number,\n}\n\nexport interface DepositResponse {\n   deposit: {\n      good: CargoType,\n      quantity: number,\n   },\n   structure: Structure,\n}\n\nexport interface Jettison {\n   good: CargoType,\n   quantityRemaining: number,\n   shipId: string,\n}\n\nexport interface FlightPlanRes {\n   flightPlan: FlightPlan,\n}\n\nexport interface FlightPlan {\n   arrivesAt: Date,\n   departure: string,\n   destination: string,\n   distance: number,\n   fuelConsumed: number,\n   fuelRemaining: number,\n   id: string,\n   shipId: string,\n   terminatedAt: Date | null,\n   timeRemainingInSeconds: number,\n}\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ModalPlaceholder = () => (\n   <ContentLoader\n      speed={2}\n      width={400}\n      height={60}\n      viewBox=\"0 0 400 60\"\n      backgroundColor=\"#D1D5DB\"\n      foregroundColor=\"#ecebeb\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"400\" height=\"44\" />\n   </ContentLoader>\n);\n\nexport const CardLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={400}\n      height={60}\n      viewBox=\"0 0 400 60\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"20\" />\n      <rect x=\"0\" y=\"45\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n   </ContentLoader>\n);\n\nexport const HeaderLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={200}\n      height={20}\n      viewBox=\"0 0 200 20\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"20\" />\n   </ContentLoader>\n);\n\nexport const ProfileLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={300}\n      height={200}\n      viewBox=\"0 0 300 200\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"20\" />\n      <rect x=\"0\" y=\"30\" rx=\"15\" ry=\"15\" width=\"250\" height=\"30\" />\n   </ContentLoader>\n);\n\nexport const AutoStepLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={398}\n      height={100}\n      viewBox=\"0 0 398 100\"\n      backgroundColor=\"#D1D5DB\"\n      foregroundColor=\"#E5E7EB\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"398\" height=\"48\" />\n      <rect x=\"0\" y=\"50\" rx=\"5\" ry=\"5\" width=\"398\" height=\"48\" />\n   </ContentLoader>\n);\n\nexport const MarketCardLoader = () => (\n   <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n      <div className=\"flex justify-between items-center pb-2 border-b border-gray-700\">\n         <ContentLoader\n            speed={2}\n            width={100}\n            height={20}\n            viewBox=\"0 0 100 20\"\n            backgroundColor=\"#9CA3AF\"\n            foregroundColor=\"#D1D5DB\"\n         >\n            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"20\" />\n         </ContentLoader>\n      </div>\n      <div className=\"text-sm my-3\">\n         <ContentLoader\n            speed={2}\n            width={175}\n            height={70}\n            viewBox=\"0 0 175 70\"\n            backgroundColor=\"#9CA3AF\"\n            foregroundColor=\"#D1D5DB\"\n         >\n            <rect x=\"0\" y=\"0\" rx=\"7.5\" ry=\"7.5\" width=\"125\" height=\"15\" />\n            <rect x=\"15\" y=\"25\" rx=\"7.5\" ry=\"7.5\" width=\"150\" height=\"15\" />\n            <rect x=\"15\" y=\"50\" rx=\"7.5\" ry=\"7.5\" width=\"150\" height=\"15\" />\n         </ContentLoader>\n      </div>\n   </div>\n);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { reset, RootState } from '../store';\nimport { HeaderLoader } from './SkeletonLoaders';\n\nconst NavBar = () => {\n   const user = useSelector((state:RootState) => state.user);\n   const { token } = useSelector((state:RootState) => state.account);\n   const [dropDownOpen, setDropDownOpen] = useState(false);\n   const ref = useRef<HTMLDivElement>(null);\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      // All to close the user dropdown on page click\n      const pageEvent = (e:MouseEvent) => {\n         if (ref.current !== null && !ref.current.contains(e.target as Node)) {\n            setDropDownOpen(false);\n         }\n      };\n\n      if (dropDownOpen) {\n         window.addEventListener('mousedown', pageEvent);\n      }\n\n      return () => {\n         window.removeEventListener('mousedown', pageEvent);\n      };\n   }, [dropDownOpen]);\n\n   const logout = () => {\n      dispatch(reset());\n      localStorage.removeItem('apiKey');\n      // note, not removing market data from localStorage\n   };\n\n   return (\n      <div className=\"px-8 text-gray-50 w-full min-h-16 bg-gray-900 flex justify-between items-center\">\n         <div className=\"flex items-center\">\n            <div className=\"relative mr-1 pt-1\">\n               <button type=\"button\" className=\"text-gray-50 hover:text-gray-300\" onClick={() => setDropDownOpen(true)}>\n                  <svg className=\"mt-1 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                     <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n               </button>\n               { dropDownOpen\n               && (\n                  <div ref={ref} className=\"origin-top-left absolute left-0 mt-2 w-72 rounded-sm shadow-lg text-gray-700 bg-gray-200 ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                     <div className=\"py-1\" role=\"none\">\n                        <p className=\"text-gray-900 text-xs px-4 pt-2\">Token</p>\n                        <p className=\"text-xs px-4 pt-1\">{ token }</p>\n                        <button type=\"button\" className=\"block w-full text-left px-4 py-2 mt-2 text-sm hover:bg-gray-300 hover:text-gray-900\" role=\"menuitem\" onClick={logout}>\n                           Log out\n                        </button>\n                     </div>\n                  </div>\n               )}\n            </div>\n            {user.username === undefined\n               ? <HeaderLoader />\n               : (\n                  <React.Fragment>\n                     <h1><NavLink to=\"/\" className=\"hover:text-yellow-600\">{user.username}</NavLink></h1>\n                     <span className=\"text-xs text-gray-400 ml-4\">{ user.credits.toLocaleString() } credits</span>\n                  </React.Fragment>\n               )}\n         </div>\n         <div className=\"flex flex-row\">\n            <NavLink to=\"/ships\" title=\"ships\" className=\"w-7 h-7 mx-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" strokeWidth={1.3} viewBox=\"0 0 512.001 512.001\">\n                  <path d=\"m226 182.707h60v30h-60z\" />\n                  <path d=\"m482 340.339-95.167-73.476c-25.568-19.74-40.833-50.809-40.833-83.112v-46.044c0-28.454-8.007-56.148-23.156-80.091-14.729-23.279-35.535-42.055-60.168-54.298l-6.676-3.318-6.676 3.318c-24.632 12.243-45.438 31.019-60.168 54.298-15.148 23.943-23.156 51.637-23.156 80.091v46.044c0 32.303-15.265 63.372-40.833 83.112l-95.167 73.476v111.662h106v60h240v-60h106zm-226-306.578c32.849 18.929 54.461 51.693 59.067 88.946h-118.133c4.605-37.254 26.217-70.018 59.066-88.946zm-60 118.946h120v269.294h-120zm90 299.294v30h-60v-30zm-226-96.924 83.5-64.468c8.403-6.488 15.934-13.932 22.5-22.106v153.498h-106zm106 96.924h30v30h-30zm180 30h-30v-30h30zm106-60h-106v-153.498c6.565 8.174 14.096 15.618 22.499 22.106l83.501 64.468z\" />\n               </svg>\n            </NavLink>\n            <NavLink to=\"/loans\" title=\"loans\" className=\"w-7 h-7 mx-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n               </svg>\n            </NavLink>\n            <NavLink to=\"/markets\" title=\"Markets\" className=\"w-7 h-7 mx-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\n               </svg>\n            </NavLink>\n            <NavLink to=\"/systems\" title=\"locations\" className=\"w-7 h-7 mx-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" />\n               </svg>\n            </NavLink>\n         </div>\n      </div>\n   );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Api from '../Api';\nimport { setToken, setUser } from '../store';\n\nconst GetApiKey = () => {\n   const [userName, setUserName] = useState('');\n   const [userToken, setUserToken] = useState('');\n   const [formValid, setFormValid] = useState(false);\n   const [signIn, setSignIn] = useState(false);\n   const [error, setError] = useState('');\n   const dispatch = useDispatch();\n   const [disabled, setDisabled] = useState(false);\n\n   const getApiKey = async (e: React.FormEvent) => {\n      setDisabled(true);\n      e.preventDefault();\n      if (formValid) {\n         try {\n            const token = await Api.getToken(userName);\n            localStorage.setItem('apiKey', JSON.stringify({ username: token.user.username, token: token.token }));\n            dispatch(setToken({ username: token.user.username, token: token.token }));\n            const user = await Api.getUser(token.user.username, token.token);\n            dispatch(setUser(user));\n         } catch (err:unknown) {\n            setDisabled(false);\n            setError((err as Error).message);\n         }\n      }\n   };\n\n   const Login = async (e: React.FormEvent) => {\n      setDisabled(true);\n      e.preventDefault();\n      if (formValid) {\n         try {\n            // Validate the user/token\n            const user = await Api.getUser(userName, userToken);\n\n            localStorage.setItem('apiKey', JSON.stringify({ username: userName, token: userToken }));\n            dispatch(setToken({ username: userName, token: userToken }));\n            dispatch(setUser(user));\n         } catch (err:unknown) {\n            setDisabled(false);\n            setError((err as Error).message);\n         }\n      }\n   };\n\n   const validate = () => {\n      const valid = document.querySelector('form')?.checkValidity() as boolean;\n      setFormValid(valid);\n   };\n\n   return (\n      <div className=\"bg-gray-800 text-gray-200 w-full h-full flex flex-col items-center justify-center\">\n         <h1 className=\"text-4xl\">Welcome to Vocivos!</h1>\n         <h2 className=\"mb-6\">A SpaceTraders API interface</h2>\n         { error\n            && <p className=\"bg-red-300 text-red-800 px-4 py-3 mb-4\">{ error }</p>}\n         <div className=\"flex items-left flex-col\">\n            { signIn\n               ? (\n                  <div className=\"border border-gray-700 rounded p-7 px-10 shadow-lg bg-gray-900\">\n                     <form className=\"mt-2\">\n                        <div>\n                           <input type=\"text\" placeholder=\"Username\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserName(e.target.value); validate(); }} required />\n                        </div>\n                        <div className=\"mt-3\">\n                           <input type=\"text\" placeholder=\"Token\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserToken(e.target.value); validate(); }} />\n                        </div>\n                        <div className=\"mt-3\">\n                           <button type=\"submit\" className=\"py-2 px-2 w-full text-white bg-green-600 rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-default disabled:bg-green-600\" disabled={disabled} onClick={Login}>Login</button>\n                        </div>\n                     </form>\n                     <p className=\"text-sm mt-4 text-center\">Need an account? <button type=\"button\" className=\"text-yellow-500 hover:text-yellow-400\" onClick={() => setSignIn(false)}>Register</button></p>\n                  </div>\n               )\n               : (\n                  <div className=\"border border-gray-700 rounded p-7 px-10 shadow-lg bg-gray-900\">\n                     <form className=\"mt-2\">\n                        <input type=\"text\" placeholder=\"Username\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserName(e.target.value); validate(); }} required />\n                        <div className=\"mt-3\">\n                           <button type=\"submit\" className=\"py-2 px-2 w-full text-white bg-green-600 rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-default disabled:bg-green-600\" disabled={disabled} onClick={getApiKey}>Sign Up</button>\n                        </div>\n                     </form>\n                     <p className=\"text-sm mt-4 text-center\">Already have an account? <button type=\"button\" className=\"text-yellow-500 hover:text-yellow-400\" onClick={() => setSignIn(true)}>Sign in</button></p>\n                  </div>\n               )}\n         </div>\n      </div>\n   );\n};\n\nexport default GetApiKey;\n","import { CargoType } from '../../Api/types';\n\nexport enum AutoAction {\n   Travel,\n   Buy,\n   Sell,\n}\n\nexport interface TravelStep {\n   action: AutoAction.Travel,\n   destination: string,\n}\n\nexport interface MarketStep {\n   action: AutoAction.Buy | AutoAction.Sell\n   good: CargoType,\n   quantity: number,\n}\n\nexport interface Step {\n   type: TravelStep | MarketStep,\n   id: string,\n}\n\nexport interface Steps {\n   enabled: boolean,\n   shipId: string,\n   steps: Step[],\n   error: string | null,\n}\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport { Marketplace, OwnedShip } from '../../Api/types';\nimport { RootState, setCredits, updateShip } from '../../store';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Buy = ({ handleClose, show, ship }:Props) => {\n   const { token, username } = useSelector((state:RootState) => state.account);\n   const { credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [marketData, setMarketData] = useState<Marketplace[]>();\n   const [selectedMarket, setSelectedMarket] = useState<Marketplace>();\n   const [purchaseQuantity, setPurchaseQuantity] = useState<number>(0);\n   const [working, setWorking] = useState<boolean>(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getMarket = async () => {\n         if (!ship.location) { return; }\n         const data = (await Api.getMarket(token, ship.location)).location.marketplace;\n         // sort market data alphabetically by symbol\n         setMarketData([...data].sort(((a, b) => ((a.symbol > b.symbol) ? 1 : (b.symbol > a.symbol) ? -1 : 0))));\n      };\n      getMarket();\n   }, []);\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const maxQuantity = (): number => {\n      if (!selectedMarket) { return 0; }\n\n      const maxCargo = Math.floor(ship.spaceAvailable / selectedMarket.volumePerUnit);\n\n      if (maxCargo * (selectedMarket.pricePerUnit + selectedMarket.spread) < credits && maxCargo <= selectedMarket.quantityAvailable && maxCargo <= 300) {\n         return maxCargo;\n      } if (maxCargo > selectedMarket.quantityAvailable && selectedMarket.quantityAvailable <= 300) {\n         return selectedMarket.quantityAvailable;\n      } if (Math.floor(credits / (selectedMarket.pricePerUnit + selectedMarket.spread)) > 300) {\n         return 300;\n      }\n\n      return Math.floor(credits / (selectedMarket.pricePerUnit + selectedMarket.spread));\n   };\n\n   const purchaseMarket = async () => {\n      if (!selectedMarket) { return; }\n      try {\n         setWorking(true);\n         const result = await Api.purchaseOrder(token, username, ship.id, selectedMarket.symbol, purchaseQuantity);\n         dispatch(setCredits(result.credits));\n         dispatch(updateShip(result.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err:unknown) {\n         setError((err as Error).message);\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { setSelectedMarket(undefined); handleClose(); }} />\n         <div className=\"modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Market Buy</h3>\n               { error\n                  && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!marketData\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {marketData?.map((market) => (\n                              <div className={`py-3 flex justify-between items-center bg-gray-100 w-full ${selectedMarket ? 'absolute' : ''} ${selectedMarket?.symbol === market.symbol ? 'z-10' : ''}`} key={market.symbol + market.quantityAvailable + market.pricePerUnit + market.volumePerUnit}>\n                                 <div>\n                                    <p className=\"font-semibold\">{ formatString(market.symbol) } <span className=\"ml-3 text-sm text-gray-500 font-normal\">{ market.quantityAvailable.toLocaleString() } units available</span></p>\n                                    <p className=\"text-sm\">{ (market.pricePerUnit + market.spread).toLocaleString() } credit{ (market.pricePerUnit + market.spread) > 1 ? 's' : ''} per unit</p>\n                                 </div>\n                                 { !selectedMarket\n                                    && (\n                                       <div>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm bg-blue-500 text-white px-4 py-1 rounded mr-3 hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             onClick={() => setSelectedMarket(market)}\n                                             disabled={market.quantityAvailable <= 0}\n                                          >Buy\n                                          </button>\n                                       </div>\n                                    )}\n                              </div>\n                           ))}\n                        </div>\n                     )}\n                  { selectedMarket\n                        && (\n                           <div className=\"absolute top-20 w-full text-center\">\n                              <div className=\"flex\">\n                                 <input type=\"number\" min={0} max={maxQuantity()} value={purchaseQuantity} placeholder=\"Quantity\" className=\"flex-grow px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none\" onChange={(e) => setPurchaseQuantity(parseInt(e.target.value, 10))} />\n                                 <button type=\"button\" className=\"ml-2 bg-blue-400 text-gray-100 px-3 py-2 rounded hover:bg-blue-500\" onClick={() => setPurchaseQuantity(maxQuantity)}>Max</button>\n                              </div>\n                              <button\n                                 type=\"button\"\n                                 className=\"mt-2 w-full px-3 py-2 bg-green-400 text-white rounded hover:bg-green-500 disabled:opacity-50 disabled:bg-green-400 disabled:cursor-default\"\n                                 disabled={(purchaseQuantity * (selectedMarket.pricePerUnit + selectedMarket.spread) <= 0) || ((purchaseQuantity * (selectedMarket.pricePerUnit + selectedMarket.spread) > credits) || (working))}\n                                 onClick={purchaseMarket}\n                              >\n                                 <span className={working ? 'hidden' : 'inline'}>Purchase for { (purchaseQuantity * (selectedMarket.pricePerUnit + selectedMarket.spread)).toLocaleString() } credit{ purchaseQuantity * (selectedMarket.pricePerUnit + selectedMarket.spread) > 1 ? 's' : ''}</span>\n                                 <span className={!working ? 'hidden' : 'inline'}>Please wait...</span>\n                              </button>\n                              <button type=\"button\" className=\"text-red-400 mt-3 hover:text-red-500\" onClick={() => { setSelectedMarket(undefined); setError(''); setPurchaseQuantity(0); }}>Back</button>\n                           </div>\n                        )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Buy;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport {\n   Cargo, LocationType, Marketplace, OwnedShip,\n} from '../../Api/types';\nimport { RootState, setCredits, updateShip } from '../../store';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Sell = ({ handleClose, show, ship }:Props) => {\n   const { token, username } = useSelector((state:RootState) => state.account);\n   const { systems } = useSelector((state:RootState) => state);\n   const dispatch = useDispatch();\n   const [marketData, setMarketData] = useState<Marketplace[]>();\n   const [selectedMarket, setSelectedMarket] = useState<Cargo>();\n   const [sellQuantity, setSellQuantity] = useState<number>(0);\n   const [working, setWorking] = useState<boolean>(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getMarket = async () => {\n         if (!ship.location) { return; }\n         const data = (await Api.getMarket(token, ship.location)).location.marketplace;\n         setMarketData(data);\n      };\n      getMarket();\n   }, []);\n\n   const maxQuantity = (): number => {\n      if (!selectedMarket) { return 0; }\n\n      if (selectedMarket.quantity <= 300) {\n         return selectedMarket.quantity;\n      }\n\n      return 300;\n   };\n\n   const sellMarket = async () => {\n      try {\n         if (!selectedMarket) { return; }\n         setWorking(true);\n         const result = await Api.sellOrder(token, username, ship.id, selectedMarket.good, sellQuantity);\n         dispatch(setCredits(result.credits));\n         dispatch(updateShip(result.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const deleteMarket = async () => {\n      try {\n         if (!selectedMarket) { return; }\n         setWorking(true);\n         const result = await Api.deleteOrder(token, username, ship.id, selectedMarket.good, sellQuantity);\n         const shipInfo = await Api.shipInfo(token, username, ship.id);\n         dispatch(updateShip(shipInfo.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err: unknown) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const depositGoods = async () => {\n      try {\n         if (!selectedMarket || !ship.location) { return; }\n         setWorking(true);\n         const result = await Api.depositGoods(token, ship.location, ship.id, selectedMarket.good, sellQuantity);\n         const shipInfo = await Api.shipInfo(token, username, ship.id);\n         dispatch(updateShip(shipInfo.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err: unknown) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const sellPrice = () => {\n      if (selectedMarket && (marketData?.find((x) => x.symbol === selectedMarket.good))) {\n         const good = marketData?.find((x) => x.symbol === selectedMarket.good) as Marketplace;\n         return (sellQuantity * (good.pricePerUnit - good.spread)).toLocaleString();\n      }\n      return null;\n   };\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { setSelectedMarket(undefined); handleClose(); }} />\n         <div className={`modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto ${selectedMarket ? 'min-h-1/3' : ''}`}>\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Your Cargo</h3>\n               { error\n                  && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!marketData\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {ship.cargo?.map((cargo) => (\n                              <div className={`py-3 flex justify-between items-center bg-gray-100 w-full ${selectedMarket ? 'absolute' : ''} ${selectedMarket?.good === cargo.good ? 'z-10' : ''}`} key={cargo.good + cargo.quantity + cargo.totalVolume}>\n                                 <div>\n                                    <p className=\"font-semibold\">{ formatString(cargo.good) } <span className=\"ml-3 text-sm text-gray-500 font-normal\">{ cargo.quantity.toLocaleString() } units available</span></p>\n                                    { marketData?.some((x) => x.symbol === cargo.good)\n                                       && <p className=\"text-sm\">{ sellPrice() } credits per unit</p>}\n                                 </div>\n                                 { !selectedMarket\n                                    && (\n                                       <div>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm bg-blue-500 text-white px-4 py-1 rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             // disabled={!marketData?.some((x) => x.symbol === cargo.good)}\n                                             onClick={() => setSelectedMarket(cargo)}\n                                          >Manage\n                                          </button>\n                                       </div>\n                                    )}\n                              </div>\n                           ))}\n                        </div>\n                     )}\n                  { selectedMarket\n                        && (\n                           <div className=\"absolute top-20 w-full text-center\">\n                              <input type=\"number\" min={0} max={selectedMarket.quantity} value={sellQuantity} placeholder=\"Quantity\" className=\"w-full flex-grow px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none\" onChange={(e) => setSellQuantity(parseInt(e.target.value, 10))} />\n                              <button type=\"button\" className=\"text-sm block text-blue-500 hover:text-blue-600\" onClick={() => setSellQuantity(maxQuantity)}>Set Max Available</button>\n                              <div>\n                                 { !working\n                                    ? (\n                                       <React.Fragment>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm mt-2 mr-3 px-3 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50 disabled:bg-red-500 disabled:cursor-default\"\n                                             disabled={(sellQuantity <= 0) || working}\n                                             onClick={deleteMarket}\n                                          >\n                                             Delete { sellQuantity } units\n                                          </button>\n                                          { systems.find((system) => system.symbol === ship.location?.split('-')[0])?.locations.some((location) => ship.location === location.symbol && location.type === LocationType.Wormhole)\n                                             ? (\n                                                <button\n                                                   type=\"button\"\n                                                   className=\"text-sm mt-2 mr-3 px-3 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 disabled:opacity-50 disabled:bg-purple-500 disabled:cursor-default\"\n                                                   disabled={(sellQuantity <= 0) || working}\n                                                   onClick={depositGoods}\n                                                >\n                                                   Donate { sellQuantity } units\n                                                </button>\n                                             ) : null}\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm mt-2 px-3 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50 disabled:bg-green-500 disabled:cursor-default\"\n                                             disabled={(sellQuantity <= 0) || working || (!sellPrice())}\n                                             onClick={sellMarket}\n                                          >\n                                             { sellPrice() !== null\n                                                ? <span className={working ? 'hidden' : 'inline'}>Sell for { sellPrice() } credits</span>\n                                                : <span>Unable to sell</span>}\n                                          </button>\n                                       </React.Fragment>\n                                    )\n                                    : (\n                                       <p>Please wait...</p>\n                                    )}\n                              </div>\n                              <button type=\"button\" className=\"flex items-center text-sm text-red-400 mt-3 hover:text-red-500\" onClick={() => { setSelectedMarket(undefined); setError(''); setSellQuantity(0); }}>\n                                 <svg className=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                    <path fillRule=\"evenodd\" d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                                 </svg>\n                                 Back\n                              </button>\n                           </div>\n                        )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Sell;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport {\n   OwnedShip, Location, LocationType, CargoType, FlightPlan,\n} from '../../Api/types';\nimport {\n   addFlightPlan, RootState, setCredits, updateShip, updateShips,\n} from '../../store';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   shipError: (message:string) => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Travel = ({\n   handleClose, shipError, show, ship,\n}: Props) => {\n   const { token, username } = useSelector((state:RootState) => state.account);\n   const dispatch = useDispatch();\n   const [locations, setLocations] = useState<Location[]>();\n   const [error, setError] = useState<string>('');\n   const [autoBuyFuel, setAutoBuyFuel] = useState(true);\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getLocations = async () => {\n         if (!ship.location) { return; }\n         const loc = (await Api.getLocations(token, ship.location.split('-')[0])).locations;\n         setLocations(loc);\n      };\n      getLocations();\n   }, []);\n\n   const createFlightPlan = async (type: LocationType, location: string, retry = true) => {\n      try {\n         let result: FlightPlan;\n         if (type === LocationType.Wormhole && ship.location === location) {\n            result = (await Api.warpJump(token, username, ship.id)).flightPlan;\n         } else {\n            result = (await Api.createFlightPlan(token, username, ship.id, location)).flightPlan;\n         }\n         dispatch(addFlightPlan(result));\n         handleClose();\n         // ship fuel and cargo space change after flight plan, so update the ship\n         const updatedShip = await Api.shipInfo(token, username, ship.id);\n         dispatch(updateShip(updatedShip.ship));\n      } catch (err: unknown) {\n         const { message } = err as Error;\n         // Try to automatically buy the required fuel if ship has insufficient fuel\n         if (retry && autoBuyFuel && message && message.startsWith('Ship has insufficient fuel for flight plan')) {\n            const requiredFuelString = message.match(/\\d+/);\n            if (requiredFuelString) {\n               try {\n                  const fuel = parseInt(requiredFuelString[0], 10);\n                  const result = await Api.purchaseOrder(token, username, ship.id, CargoType.Fuel, fuel);\n                  dispatch(setCredits(result.credits));\n                  dispatch(updateShip(result.ship));\n                  createFlightPlan(type, location, false);\n               } catch (e: unknown) {\n                  setError((e as Error).message);\n               }\n            }\n         } else {\n            setError(message);\n            // If the ship failed a warp jump, it's destroyed so we should update the ships\n            if (type === LocationType.Wormhole) {\n               const { ships } = await Api.ownedShips(token, username);\n               dispatch(updateShips(ships));\n               shipError(message);\n            }\n         }\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-3\">Set Destination</h3>\n               <div className=\"text-sm mb-4\">\n                  <label htmlFor=\"autoBuyFuel\" className=\"flex items-center cursor-pointer\">\n                     <input type=\"checkbox\" id=\"autoBuyFuel\" name=\"autoBuyFuel\" checked={autoBuyFuel} onChange={(e) => setAutoBuyFuel(e.target.checked)} />\n                     <span className=\"ml-1\">Automatically buy required fuel</span>\n                  </label>\n               </div>\n               { error\n               && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!locations\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {locations.map((location) => (\n                              <div className=\"py-2 flex justify-between items-center\" key={location.symbol + location.name}>\n                                 <div>\n                                    <p>{ location.name }</p>\n                                    <p className=\"text-sm text-gray-500\">{ location.symbol }</p>\n                                 </div>\n                                 <div>\n                                    { ship.location === location.symbol && location.type !== LocationType.Wormhole\n                                       ? <p className=\"text-sm text-gray-600 cursor-default\">Current location</p>\n                                       : (\n                                          <button\n                                             type=\"button\"\n                                             className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             onClick={() => createFlightPlan(location.type, location.symbol)}\n                                          >{ location.type === LocationType.Wormhole && ship.location === location.symbol ? 'Warp' : 'Travel' }\n                                          </button>\n                                       )}\n                                 </div>\n                              </div>\n                           ))}\n                        </div>\n                     )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Travel;\n","import React from 'react';\n\ninterface Props {\n   completed: number,\n}\n\nconst TravelProgressBar = (props: Props) => {\n   const { completed } = props;\n\n   return (\n      <div className=\"h-0.5 w-full text-right bg-gray-600\">\n         <div className=\"h-full text-right bg-green-500\" style={{ width: `${completed}%`, transition: 'width 0.5s ease' }}>\n            <span />\n         </div>\n      </div>\n   );\n};\n\nexport default TravelProgressBar;\n","import React from 'react';\nimport { Location, CargoType } from '../../Api/types';\nimport {\n   AutoAction, MarketStep, Step, TravelStep,\n} from './Models';\n\ninterface Props {\n   step: Step,\n   index: number,\n   length: number,\n   system: Location[],\n   editStep: (value: Step) => void,\n   deleteStep: () => void,\n   moveStepUp: () => void,\n   moveStepDown: () => void,\n}\n\nconst StepButton = ({\n   step, index, length, system, editStep, deleteStep, moveStepUp, moveStepDown,\n}: Props) => {\n   const editAction = (value: string) => {\n      switch (value) {\n         case '0':\n            editStep({ ...step, type: { action: AutoAction.Travel, destination: system[0].symbol } });\n            break;\n         case '1':\n            editStep({ ...step, type: { action: AutoAction.Buy, good: CargoType.Chemicals, quantity: 0 } });\n            break;\n         case '2':\n            editStep({ ...step, type: { action: AutoAction.Sell, good: CargoType.Chemicals, quantity: 0 } });\n            break;\n         default:\n            null;\n      }\n   };\n\n   const editSubAction = (value: string) => {\n      // Need the action equality check for typescript\n      if (step.type.action !== AutoAction.Travel) {\n         if (Number.isNaN(parseInt(value, 10))) {\n            editStep({ ...step, type: { ...step.type, good: value as CargoType } });\n         } else {\n            editStep({ ...step, type: { ...step.type, quantity: parseInt(value, 10) } });\n         }\n      } else {\n         editStep({ ...step, type: { ...step.type, destination: value as string } });\n      }\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const travelComp = () => (\n      <React.Fragment>\n         <p className=\"text-sm\">to</p>\n         <select\n            name={`dest-${step.id}`}\n            id={`dest-${step.id}`}\n            className=\"text-sm ml-3 bg-gray-100 border-b border-yellow-500 appearance-none cursor-pointer\"\n            value={(step.type as TravelStep).destination}\n            onChange={(e) => editSubAction(e.target.value)}\n         >\n            {system.map((loc) => (\n               <option value={loc.symbol} key={`${step.id}-${loc.name}`}>{ loc.name } ({ loc.symbol })</option>\n            ))}\n         </select>\n      </React.Fragment>\n   );\n\n   const buyComp = () => (\n      <React.Fragment>\n         <select\n            name={`buy-${step.id}`}\n            id={`buy-${step.id}`}\n            className=\"text-sm ml-1 bg-gray-100 border-b border-yellow-500 appearance-none cursor-pointer\"\n            value={(step.type as MarketStep).good}\n            onChange={(e) => editSubAction(e.target.value)}\n         >\n            {Object.values(CargoType).map((type) => (\n               <option value={type} key={`${step.id}-buy-${type}`}>{ formatString(type) }</option>\n            ))}\n         </select>\n         <input\n            type=\"number\"\n            min={-1}\n            max={300}\n            value={(step.type as MarketStep).quantity}\n            className=\"text-sm w-1/4 ml-2 border border-gray-200 focus:outline-none focus:border-blue-300\"\n            onChange={(e) => editSubAction(e.target.value)}\n         />\n         <span className=\"text-xs ml-0.5\">(-1 = max)</span>\n      </React.Fragment>\n   );\n\n   const sellComp = () => (\n      <React.Fragment>\n         <select\n            name={`buy-${step.id}`}\n            id={`buy-${step.id}`}\n            className=\"text-sm ml-1 bg-gray-100 border-b border-yellow-500 appearance-none cursor-pointer\"\n            value={(step.type as MarketStep).good}\n            onChange={(e) => editSubAction(e.target.value)}\n         >\n            {Object.values(CargoType).map((type) => (\n               <option value={type} key={`${step.id}-sell-${type}`}>{ formatString(type) }</option>\n            ))}\n         </select>\n         <input\n            type=\"number\"\n            min={-1}\n            max={300}\n            value={(step.type as MarketStep).quantity}\n            className=\"text-sm w-1/4 ml-2 border border-gray-200 focus:outline-none focus:border-blue-300\"\n            onChange={(e) => editSubAction(e.target.value)}\n         />\n         <span className=\"text-xs ml-0.5\">(-1 = max)</span>\n      </React.Fragment>\n   );\n\n   const getSubAction = (action: number): JSX.Element => {\n      switch (action) {\n         case AutoAction.Travel:\n            return travelComp();\n         case AutoAction.Buy:\n            return buyComp();\n         case AutoAction.Sell:\n            return sellComp();\n         default:\n            return <div />;\n      }\n   };\n\n   return (\n      <div className=\"flex justify-between items-center w-full h-12 my-1 py-1 px-2 border border-gray-400 rounded-sm text-gray-500 hover:border-blue-300\">\n         <div className=\"flex flex-col w-4\">\n            { index !== 0\n               && (\n                  <button type=\"button\" className=\"mb-1 w-4 h-4 hover:text-black\" onClick={moveStepUp}>\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n                     </svg>\n                  </button>\n               )}\n            { index !== length - 1\n               && (\n                  <button type=\"button\" className=\"w-4 h-4 hover:text-black\" onClick={moveStepDown}>\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                     </svg>\n                  </button>\n               )}\n         </div>\n         <div className=\"flex items-center w-full px-2 text-left\">\n            <select\n               name={`stepType-${step.id}`}\n               id={`stepType-${step.id}`}\n               className=\"text-sm mr-2 bg-gray-100 border-b border-yellow-500 appearance-none cursor-pointer\"\n               value={step.type.action}\n               onChange={(e) => editAction(e.target.value)}\n            >\n               <option value=\"0\">Travel</option>\n               <option value=\"1\">Buy</option>\n               <option value=\"2\">Sell</option>\n            </select>\n            { getSubAction(step.type.action) }\n         </div>\n         <button type=\"button\" className=\"text-red-400 hover:text-white hover:bg-red-400 rounded-full\" onClick={deleteStep}>\n            <div className=\"w-5 h-5\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.4} d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n               </svg>\n            </div>\n         </button>\n      </div>\n   );\n};\n\nexport default StepButton;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport { OwnedShip, Location } from '../../Api/types';\nimport {\n   addAutomation, RootState, setAutomationState,\n} from '../../store';\nimport { AutoStepLoader } from '../SkeletonLoaders';\nimport { AutoAction, Step, Steps } from './Models';\nimport StepButton from './StepButton';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip,\n}\n\nconst AutomateModal = ({ handleClose, show, ship }: Props) => {\n   const { token } = useSelector((state:RootState) => state.account);\n   const automations = useSelector((state:RootState) => state.automations);\n   const { ships } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [autoSteps, setAutoSteps] = useState<Steps>({\n      shipId: ship.id, steps: [], enabled: false, error: null,\n   });\n   const [system, setSystem] = useState<Location[]>([]);\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-50' : 'hidden';\n\n   useEffect(() => {\n      const getLocations = async () => {\n         const loc = (await Api.getLocations(token, 'OE')).locations;\n         setSystem(loc);\n\n         const currentAutomation = automations.find((x) => x.shipId === ship.id);\n         if (currentAutomation) {\n            setAutoSteps(currentAutomation);\n         }\n      };\n      getLocations();\n   }, []);\n\n   const makeId = () => {\n      let id = '';\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < 24; i += 1) {\n         id += chars.charAt(Math.floor(Math.random() * 62));\n      }\n      return id;\n   };\n\n   const addNewStep = () => {\n      const newStep: Step = {\n         type: {\n            action: AutoAction.Travel,\n            destination: system[0].symbol,\n         },\n         id: makeId(),\n      };\n\n      setAutoSteps({ ...autoSteps, steps: [...autoSteps.steps, newStep] });\n   };\n\n   const deleteStep = (id: string) => {\n      setAutoSteps({ ...autoSteps, steps: autoSteps.steps.filter((x) => x.id !== id) });\n   };\n\n   const moveStepUp = (index: number) => {\n      const tempArray = [...autoSteps.steps];\n      const element = tempArray[index];\n      tempArray.splice(index, 1);\n      tempArray.splice(index - 1, 0, element);\n      setAutoSteps({ ...autoSteps, steps: tempArray });\n   };\n\n   const moveStepDown = (index: number) => {\n      const tempArray = [...autoSteps.steps];\n      const element = tempArray[index];\n      tempArray.splice(index, 1);\n      tempArray.splice(index + 1, 0, element);\n      setAutoSteps({ ...autoSteps, steps: tempArray });\n   };\n\n   const editStep = (value: Step) => {\n      const updated = autoSteps.steps.map((step) => (step.id === value.id ? { ...step, type: value.type } : step));\n      setAutoSteps({ ...autoSteps, steps: updated });\n   };\n\n   const runAuto = () => {\n      dispatch(addAutomation(autoSteps));\n      dispatch(setAutomationState({ shipId: ship.id, enabled: true }));\n      handleClose();\n   };\n\n   const stopAuto = () => {\n      dispatch(setAutomationState({ shipId: ship.id, enabled: false }));\n      handleClose();\n   };\n\n   const copyAutomation = (shipId:string) => {\n      const steps = automations.find((x) => x.shipId === shipId)?.steps;\n      if (!steps) { return; }\n      setAutoSteps({ ...autoSteps, steps });\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { handleClose(); }} />\n         <div className=\"modal-container flex flex-col bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold\">Automate</h3>\n               <p className=\"text-sm mt-2 mb-1\">Steps will begin at ship&apos;s current location</p>\n               <p className=\"text-sm\">Browser tab must be kept open for automation to run.</p>\n            </div>\n            { autoSteps.error\n            && (\n               <div className=\"px-6 mb-4\">\n                  <p className=\"bg-red-300 text-red-800 py-3 px-4\">{ autoSteps.error }</p>\n               </div>\n            )}\n            { automations.length > 0\n            && (\n               <div className=\"flex items-center p-4 pt-0\">\n                  <select name=\"copyAutomation\" id=\"copyAutomation\" className=\"text-sm ml-2 bg-gray-100 border-b border-yellow-500 appearance-none cursor-pointer\" onChange={(e) => copyAutomation(e.target.value)}>\n                     <option disabled selected value=\"\"> -- Copy from -- </option>\n                     { automations.map((automation) => {\n                        if (automation.shipId !== ship.id) {\n                           return <option key={automation.shipId} value={automation.shipId}>{ ships.find((x) => x.id === automation.shipId)?.type }</option>;\n                        }\n                        return null;\n                     })}\n                  </select>\n               </div>\n            )}\n            <div className=\"flex flex-grow p-4 pt-0\">\n               <div className=\"w-full border border-gray-300 p-2\">\n                  { autoSteps.steps.map((step, index) => (\n                     <StepButton key={step.id} step={step} index={index} length={autoSteps.steps.length} system={system} editStep={editStep} deleteStep={() => deleteStep(step.id)} moveStepUp={() => moveStepUp(index)} moveStepDown={() => moveStepDown(index)} />\n                  ))}\n                  {system[0]\n                     ? (\n                        <button\n                           type=\"button\"\n                           className=\"flex justify-center items-center w-full py-2 bg-gray-300 border border-gray-400 rounded-sm text-gray-500 cursor-pointer hover:bg-gray-400 hover:text-gray-600\"\n                           onClick={() => addNewStep()}\n                        >\n                           <div className=\"w-6 h-6\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.4} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                           </div>\n                        </button>\n                     )\n                     : <AutoStepLoader />}\n               </div>\n            </div>\n            <div className=\"text-center\">\n               <button type=\"button\" className=\"mb-1 text-red-500 hover:text-red-600\" onClick={() => { handleClose(); }}>Close</button>\n               { autoSteps.enabled\n                  ? (\n                     <button\n                        type=\"button\"\n                        className=\"mt-2 w-full px-3 py-2 bg-red-500 text-white hover:bg-red-600 disabled:opacity-50 disabled:bg-red-400 disabled:cursor-default\"\n                        disabled={autoSteps.steps.length === 0}\n                        onClick={stopAuto}\n                     >Stop\n                     </button>\n                  )\n                  : (\n                     <button\n                        type=\"button\"\n                        className=\"mt-2 w-full px-3 py-2 bg-green-500 text-white hover:bg-green-600 disabled:opacity-50 disabled:bg-green-400 disabled:cursor-default\"\n                        disabled={autoSteps.steps.length === 0}\n                        onClick={runAuto}\n                     >Run\n                     </button>\n                  )}\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default AutomateModal;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n   formatDistanceToNowStrict, getUnixTime, isFuture, isPast,\n} from 'date-fns';\nimport {\n   Cargo, CargoType, OwnedShip,\n} from '../../Api/types';\nimport { addAutomationError, removeFlightPlan, RootState } from '../../store';\nimport Buy from '../Markets/Buy';\nimport Sell from '../Markets/Sell';\nimport Travel from './Travel';\nimport TravelProgressBar from './TravelProgress';\nimport AutomateModal from '../Automation/AutomateModal';\n\ninterface Props {\n   ship: OwnedShip,\n   compact?: boolean,\n   shipError?: (message:string) => void,\n}\n\nconst ShipCard = ({\n   ship, compact, shipError,\n}:Props) => {\n   const systems = useSelector((state:RootState) => state.systems);\n   const flightPlan = useSelector((state:RootState) => state.flightPlans.find((x) => x.shipId === ship.id));\n   const automation = useSelector((state:RootState) => state.automations.find((x) => x.shipId === ship.id));\n   const dispatch = useDispatch();\n   const [showBuyModal, setBuyModalShow] = useState(false);\n   const [showSellModal, setSellModalShow] = useState(false);\n   const [showTravelModal, setTravelModalShow] = useState(false);\n   const [showAutomateModal, setAutomateModalShow] = useState(false);\n   const [remainingTime, setRemainingTime] = useState<string>();\n   const [time, setTime] = useState<number>(Date.now());\n\n   useEffect(() => {\n      const interval = setInterval(() => setTime(Date.now()), 1000);\n\n      return () => clearInterval(interval);\n   });\n\n   useEffect(() => {\n      if (!flightPlan) { return; }\n\n      if (isPast(new Date(flightPlan.arrivesAt))) {\n         dispatch(removeFlightPlan(flightPlan));\n      }\n\n      setRemainingTime(formatDistanceToNowStrict(new Date(flightPlan.arrivesAt)));\n   }, [time]);\n\n   const fuelIsEmpty = (cargo:Cargo[]) => {\n      const fuel = cargo.filter((x) => x.good === CargoType.Fuel).reduce((acc, item) => acc + item.quantity, 0);\n      return !(fuel > 0);\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const calcProgress = ():number => {\n      if (!flightPlan) { return 0; }\n\n      return (((Date.now() / 1000) - (getUnixTime(new Date(flightPlan.arrivesAt)) - flightPlan.timeRemainingInSeconds)) / flightPlan.timeRemainingInSeconds) * 100;\n   };\n\n   const closeModal = () => {\n      setAutomateModalShow(false);\n      if (automation?.error) {\n         dispatch(addAutomationError({ shipId: ship.id, error: null }));\n      }\n   };\n\n   return (\n      <React.Fragment>\n         { showBuyModal ? <Buy show={showBuyModal} ship={ship} handleClose={() => setBuyModalShow(false)} /> : null }\n         { showSellModal ? <Sell show={showSellModal} ship={ship} handleClose={() => setSellModalShow(false)} /> : null }\n         { showTravelModal ? <Travel show={showTravelModal} ship={ship} handleClose={() => setTravelModalShow(false)} shipError={(message) => shipError && shipError(message)} /> : null }\n         { showAutomateModal ? <AutomateModal show={showAutomateModal} ship={ship} handleClose={() => closeModal()} /> : null }\n         { compact ? (\n            <div className=\"p-3 bg-gray-900 border border-gray-700 rounded divide-y divide-gray-500 hover:border-yellow-900 hover:shadow-xl\">\n               <div className=\"flex justify-between items-center \">\n                  <div className=\"text-left\">\n                     <h3>{ ship.type }</h3>\n                     <p className=\"text-xs text-gray-400\">{ ship.location ?? 'In transit' }</p>\n                  </div>\n                  { (flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                     ? (\n                        <div className=\"text-right\">\n                           <p className=\"text-xs text-gray-400\">In Transit</p>\n                           <p className=\"text-xs text-gray-300\">{ remainingTime ? `Arrives in ${remainingTime}` : 'ETA Unknown' }</p>\n                        </div>\n                     ) : (\n                        <div>\n                           { automation?.enabled\n                              ? <p className=\"text-sm\">Automating</p>\n                              : (\n                                 <React.Fragment>\n                                    <button type=\"button\" title=\"Travel\" className=\"mr-2 w-6 h-6 bg-blue-500 rounded hover:bg-blue-600 disabled:opacity-50 disabled:bg-blue-500 disabled:cursor-default\" onClick={() => setTravelModalShow(true)} disabled={fuelIsEmpty(ship.cargo)}>\n                                       <p className=\"text-sm font-bold\">T</p>\n                                    </button>\n                                    <button type=\"button\" title=\"Buy\" className=\"mr-2 w-6 h-6 bg-green-500 rounded hover:bg-green-600\" onClick={() => setBuyModalShow(true)}>\n                                       <p className=\"text-sm font-bold\">B</p>\n                                    </button>\n                                    <button type=\"button\" title=\"Sell\" className=\"mr-2 w-6 h-6 bg-red-500 rounded hover:bg-red-600\" onClick={() => setSellModalShow(true)}>\n                                       <p className=\"text-sm font-bold\">S</p>\n                                    </button>\n                                 </React.Fragment>\n                              )}\n                        </div>\n                     )}\n               </div>\n               { (flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                  ? <div className=\"mt-2\"><TravelProgressBar completed={calcProgress()} /></div> : null}\n            </div>\n         ) : (\n            <div className=\"focus:outline-none bg-gray-900 border border-gray-700 rounded\">\n               <div className=\"flex justify-between items-center p-3 bg-gray-700 border-b border-gray-600\">\n                  <div>\n                     <h3 className=\"text-xl\">{ ship.type }</h3>\n                     <p className=\"text-xs text-gray-400\">{ ship.manufacturer }</p>\n                  </div>\n                  <div className=\"flex flex-col\">\n                     <div className=\"grid grid-cols-3 gap-2 mt-1\">\n                        <div className=\"flex items-center\">\n                           <div className=\"w-5 h-5 mr-1\">\n                              <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 358.121c0-68.38-26.629-132.667-74.98-181.02-48.353-48.352-112.64-74.98-181.02-74.98s-132.667 26.629-181.02 74.98c-48.351 48.353-74.98 112.64-74.98 181.02v15h205.016c4.085 12.323 12.371 22.642 23.657 29.305 8.558 5.052 17.953 7.453 27.236 7.453 18.406 0 36.36-9.448 46.376-26.413 1.956-3.313 3.522-6.781 4.717-10.345h204.998zm-235.548 10.093c-6.656 11.276-21.247 15.037-32.526 8.378-5.463-3.225-9.343-8.384-10.925-14.528-1.583-6.144-.679-12.535 2.547-17.998s8.385-9.343 14.528-10.925c1.976-.509 3.977-.76 5.964-.76 4.194 0 8.328 1.12 12.034 3.308 5.463 3.225 9.343 8.384 10.925 14.528 1.583 6.143.679 12.535-2.547 17.997zm31.689-25.093c-.032-.129-.057-.259-.09-.388-2.296-8.916-6.74-16.908-12.887-23.425l43.106-73.015-25.834-15.252-43.106 73.015c-8.675-2.233-17.819-2.264-26.737.032-13.903 3.581-25.58 12.362-32.879 24.726-2.674 4.53-4.636 9.344-5.882 14.307h-173.34c1.992-30.247 9.976-58.88 22.75-84.742l33.311 19.232 15-25.98-33.274-19.21c16.444-24.477 37.541-45.578 62.018-62.022l19.212 33.276 25.98-15-19.236-33.318c25.861-12.774 54.5-20.737 84.746-22.729v38.493h30v-38.493c30.246 1.992 58.885 9.955 84.746 22.729l-19.236 33.318 25.98 15 19.212-33.276c24.477 16.444 45.573 37.545 62.018 62.022l-33.274 19.21 15 25.98 33.311-19.232c12.774 25.862 20.758 54.495 22.75 84.742z\" /></svg>\n                           </div>\n                           <p>{ ship.speed }</p>\n                        </div>\n                        <div className=\"flex items-center\">\n                           <div className=\"w-4 h-4 mr-1\">\n                              <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 510.192 510.192\" viewBox=\"0 0 510.192 510.192\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m510.192 0-122.656 13.628-300.462 300.463-22.694-22.694 33.301-33.3-21.213-21.213-54.514 54.513c10.689 10.689 55.253 55.254 65.86 65.861l-87.814 87.814 65.12 65.12 87.813-87.814c10.633 10.632 55.212 55.211 65.861 65.86l54.513-54.514-21.213-21.213-33.3 33.301-22.694-22.693 300.464-300.463zm-467.766 445.072 22.693-22.694 22.695 22.695-22.694 22.693zm66.602-21.212-22.695-22.695 22.694-22.693 22.694 22.694zm358.881-314.976-293.022 293.022-22.693-22.694 252.835-252.835-21.213-21.213-252.835 252.835-22.694-22.693 293.021-293.023 74.927-8.325z\" /></g></svg>\n                           </div>\n                           <p>{ ship.weapons }</p>\n                        </div>\n                        <div className=\"flex items-center\">\n                           <div className=\"w-4 h-4 mr-1\">\n                              <svg fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                                 <g>\n                                    <path d=\"M461.144,60.883L260.312,0.633c-2.809-0.844-5.808-0.844-8.62,0L50.858,60.883c-6.345,1.903-10.69,7.743-10.69,14.367\n                                       v220.916c0,28.734,11.632,58.148,34.573,87.425c17.522,22.36,41.762,44.813,72.048,66.736\n                                       c50.877,36.828,100.975,59.42,103.083,60.363c1.95,0.873,4.039,1.31,6.129,1.31c2.089,0,4.179-0.436,6.129-1.31\n                                       c2.108-0.943,52.205-23.535,103.082-60.363c30.285-21.923,54.525-44.376,72.047-66.736c22.941-29.276,34.573-58.69,34.573-87.425\n                                       V75.25C471.833,68.626,467.489,62.786,461.144,60.883z M441.833,296.166c0,50.852-51.023,98.534-93.826,129.581\n                                       c-38.374,27.833-77.291,47.583-92.005,54.678c-14.714-7.095-53.632-26.845-92.006-54.678\n                                       c-42.804-31.047-93.828-78.729-93.828-129.581V86.41l185.833-55.75l185.832,55.75V296.166z\"\n                                    />\n                                 </g>\n                              </svg>\n                           </div>\n                           <p>{ ship.plating }</p>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               {/* {automation?.enabled\n                  ? (\n                     <div className=\"flex items-center justify-end\">\n                        {automation.error\n                        && (\n                           <div className=\"w-6 h-6 mr-1 pt-0.5\" title=\"Automation error\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#EF4444\">\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.8} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                              </svg>\n                           </div>\n                        )}\n                        <p className=\"text-xs\">Automating</p>\n                        <button type=\"button\" className=\"text-xs ml-2 px-2 py-1 bg-purple-500 rounded hover:bg-purple-600\" onClick={() => setAutomateModalShow(true)}>Tasks</button>\n                     </div>\n                  ) : null} */}\n               <div className=\"py-3 px-3 pl-2 border-b border-gray-700 relative\">\n                  {(flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                     ? (\n                        <React.Fragment>\n                           <div className=\"flex items-center justify-between\">\n                              <div className=\"flex items-center\">\n                                 <svg className=\"w-6 h-6 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                 </svg>\n                                 <p className=\"flex items-center mt-0.5\">\n                                    { systems.find((x) => x.symbol === flightPlan?.departure.split('-')[0])?.locations.find((x) => x.symbol === flightPlan?.departure)?.name }\n                                    <svg className=\"h-4 w-4 mx-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                       <path fillRule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                                    </svg>\n                                    { systems.find((x) => x.symbol === flightPlan?.destination.split('-')[0])?.locations.find((x) => x.symbol === flightPlan?.destination)?.name }\n                                 </p>\n                              </div>\n                              <span className=\"text-sm text-gray-400 mt-1\">({ remainingTime ? `Arrives in ${remainingTime}` : 'ETA Unknown' })</span>\n                           </div>\n                           { automation?.enabled\n                              && (\n                                 <div className=\"relative z-10 w-full flex items-center justify-end pr-0.5 mt-2\">\n                                    <p className=\"text-xs\">Automating</p>\n                                    <button type=\"button\" className=\"text-xs ml-2 px-2 py-1 bg-purple-500 rounded hover:bg-purple-600\" onClick={() => setAutomateModalShow(true)}>Tasks</button>\n                                 </div>\n                              )}\n                           <div className=\"absolute inset-0\">\n                              <div><TravelProgressBar completed={calcProgress()} /></div>\n                           </div>\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"w-full flex justify-between items-center\">\n                           <div className=\"flex items-center\">\n                              <svg className=\"h-6 w-6 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                              </svg>\n                              <p className=\"pt-0.5\">{ systems.find((x) => x.symbol === ship.location?.split('-')[0])?.locations.find((x) => x.symbol === ship.location)?.name }</p>\n                              <span className=\"ml-1 pt-1 text-sm text-gray-400\">({ ship.location })</span>\n                           </div>\n                           <div>\n                              { automation?.enabled\n                                 ? null : (\n                                    <React.Fragment>\n                                       <button\n                                          type=\"button\"\n                                          className=\"text-xs mr-2 px-2 py-1 bg-blue-500 rounded hover:bg-blue-600 disabled:opacity-50 disabled:bg-blue-500 disabled:cursor-default\"\n                                          onClick={() => setTravelModalShow(true)}\n                                       >Travel\n                                       </button>\n                                       <button type=\"button\" className=\"text-xs px-2 py-1 bg-purple-500 rounded hover:bg-purple-600\" onClick={() => setAutomateModalShow(true)}>Automate</button>\n                                    </React.Fragment>\n                                 )}\n                           </div>\n                        </div>\n                     )}\n               </div>\n               <div className=\"p-3\">\n                  <div className=\"flex items-center mb-2\">\n                     <p className=\"mr-3\">Cargo <span className=\"ml-2 text-sm text-gray-400\">{ ship.maxCargo - ship.spaceAvailable } of { ship.maxCargo }</span></p>\n                     { ship.location && !automation?.enabled\n                     && (\n                        <React.Fragment>\n                           <button type=\"button\" className=\"text-xs mr-2 px-2 py-1 bg-green-500 rounded hover:bg-green-600\" onClick={() => setBuyModalShow(true)}>Buy</button>\n                           <button type=\"button\" className=\"text-xs px-2 py-1 bg-red-500 rounded hover:bg-red-600\" onClick={() => setSellModalShow(true)}>Sell</button>\n                        </React.Fragment>\n                     )}\n                  </div>\n                  <div className=\"pl-3\">\n                     { ship.cargo.slice().sort((a, b) => ((a.good > b.good) ? 1 : (b.good > a.good) ? -1 : 0)).map((cargo) => (\n                        <p className=\"text-sm py-0.5\" key={cargo.good + cargo.quantity + cargo.totalVolume + ship.id}>{ formatString(cargo.good) } ({ cargo.quantity } units)</p>\n                     ))}\n                  </div>\n               </div>\n            </div>\n         )}\n      </React.Fragment>\n   );\n};\n\nShipCard.defaultProps = {\n   compact: false,\n   shipError: '',\n};\n\nexport default ShipCard;\n","import { formatDistanceToNow } from 'date-fns';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { LoanStatus } from '../Api/types';\nimport { RootState } from '../store';\nimport ShipCard from './Ships/ShipCard';\nimport { ProfileLoader } from './SkeletonLoaders';\n\nconst Profile = () => {\n   const { username, loans, ships } = useSelector((state:RootState) => state.user);\n   const { systems } = useSelector((state:RootState) => state);\n\n   return (\n      <React.Fragment>\n         {username === undefined\n            ? (\n               <React.Fragment>\n                  <ProfileLoader />\n               </React.Fragment>\n            )\n            : (\n               <React.Fragment>\n                  <p className=\"text-gray-400\">Welcome</p>\n                  <h2 className=\"text-3xl mb-4\">{ username }</h2>\n                  <div>\n                     { systems.map((system) => system.locations.map((location) => (location.messages && location.messages.length > 0\n                        ? (\n                           <div className=\"text-sm p-4 bg-blue-800 text-blue-200 rounded-sm\" key={location.symbol}>\n                              <p>{ [...location.messages].slice(0, -2).join(' ') }</p>\n                              <Link to={`/systems/${location.symbol}`} className=\"underline text-xs mt-1 block\">View</Link>\n                           </div>\n                        )\n                        : null)))}\n                  </div>\n                  <div className=\"my-4 min-h-1/4\">\n                     <h3 className=\"text-xl mb-4\">Loans</h3>\n                     <div className=\"pl-5\">\n                        { loans.filter((x) => x.status === LoanStatus.Current).length === 0\n                           ? (\n                              <div>\n                                 <p>You have no loans!</p>\n                                 <Link to=\"/loans/available\" className=\"text-sm text-yellow-700 hover:text-blue-600\">Get a loan</Link>\n                              </div>\n                           )\n                           : (\n                              <div>\n                                 { loans.filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                                    <p key={loan.id}>{ loan.repaymentAmount.toLocaleString() } credits due { formatDistanceToNow(new Date(loan.due), { addSuffix: true }) }</p>\n                                 ))}\n                              </div>\n                           )}\n                     </div>\n                  </div>\n                  <div className=\"mb-4 min-h-1/4\">\n                     <h3 className=\"text-xl mb-4\">Ships</h3>\n                     <div className=\"pl-5 grid grid-cols-4 gap-3\">\n                        { ships.length === 0\n                           ? (\n                              <div>\n                                 <p>You have no ships :(</p>\n                                 <Link to=\"/ships/available\" className=\"text-sm text-yellow-700 hover:text-blue-600\">Buy a ship</Link>\n                              </div>\n                           )\n                           : (\n                              [...ships].sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0)).map((ship) => (\n                                 <ShipCard ship={ship} compact key={ship.id} />\n                              ))\n                           )}\n                     </div>\n                  </div>\n               </React.Fragment>\n            )}\n      </React.Fragment>\n   );\n};\n\nexport default Profile;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Api from '../../Api';\nimport { PurchaseLocation, Ship } from '../../Api/types';\nimport { RootState, setUser } from '../../store';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: Ship | undefined\n}\n\nconst PurchaseShipModal = ({ handleClose, show, ship }:Props) => {\n   const { credits } = useSelector((state:RootState) => state.user);\n   const { username, token } = useSelector((state:RootState) => state.account);\n   const dispatch = useDispatch();\n   const history = useHistory();\n   const [loading, setLoading] = useState(false);\n\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900' : 'hidden';\n\n   const purchaseShip = async (location:string) => {\n      if (!ship) { return; }\n\n      setLoading(true);\n      const result = await Api.buyShip(token, username, location, ship?.type);\n      dispatch(setUser(result));\n      handleClose;\n      history.push('/ships');\n   };\n\n   const renderButtons = (location: PurchaseLocation) => {\n      if (loading) {\n         return <div />;\n      }\n\n      if (credits > location.price) {\n         return <button type=\"button\" className=\"px-5 py-1 bg-green-500 rounded text-white hover:bg-green-400\" onClick={() => purchaseShip(location.location)}>Buy</button>;\n      }\n\n      return <span className=\"text-xs text-yellow-500\">Insufficient credits</span>;\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Purchase { ship?.type }</h3>\n               <p className=\"text-sm mb-5\">This ship is available in { ship?.purchaseLocations.length } { ship?.purchaseLocations && ship.purchaseLocations.length > 1 ? 'locations' : 'location' }:</p>\n               <ul>\n                  {ship?.purchaseLocations.map((location) => (\n                     <li className=\"flex justify-between items-center my-3\" key={location.location + location.price}>\n                        <span>{ location.location } for { location.price.toLocaleString() } credits </span>\n                        { renderButtons(location) }\n                     </li>\n                  ))}\n               </ul>\n               <div className=\"flex justify-end pt-2\">\n                  { !loading\n                     ? (<button type=\"button\" className=\"px-4 py-1 text-red-500 text-sm border border-red-500 rounded hover:text-red-400 hover:border-red-400\" onClick={handleClose}>Close</button>\n                     ) : <p className=\"text-sm text-yellow-500 italic\">Please Wait...</p>}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PurchaseShipModal;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport { Ship } from '../../Api/types';\nimport { RootState } from '../../store';\nimport { CardLoader } from '../SkeletonLoaders';\nimport PurchaseShipModal from './PurchaseShipModal';\n\nconst Available = () => {\n   const user = useSelector((state:RootState) => state);\n   const [ships, setShips] = useState<Ship[]>();\n   const [sortOrder, setOrder] = useState(false);\n   const [sortType, setSortType] = useState('class');\n   const [showModal, setModalShow] = useState(false);\n   const [selectedShip, setSelectedShip] = useState<Ship>();\n\n   const GetShips = async () => {\n      const getShips = await Api.availableShips(user.account.token, user.user.username);\n      getShips.ships.sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0));\n      setShips(getShips.ships);\n   };\n\n   const lowestPrice = (ship: Ship) => (\n      ship.purchaseLocations.reduce((prev, curr) => (prev.price < curr.price ? prev : curr)).price\n   );\n\n   useEffect(() => {\n      const sort = (value:string) => {\n         if (!ships) {\n            return;\n         }\n\n         let sorted;\n\n         switch (value) {\n            case 'cost':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.purchaseLocations[0].price > b.purchaseLocations[0].price) ? 1 : (b.purchaseLocations[0].price > a.purchaseLocations[0].price) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.purchaseLocations[0].price < b.purchaseLocations[0].price) ? 1 : (b.purchaseLocations[0].price < a.purchaseLocations[0].price) ? -1 : 0));\n               break;\n            case 'type':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.type < b.type) ? 1 : (b.type < a.type) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0));\n               break;\n            case 'manufacturer':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.manufacturer > b.manufacturer) ? 1 : (b.manufacturer > a.manufacturer) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.manufacturer < b.manufacturer) ? 1 : (b.manufacturer < a.manufacturer) ? -1 : 0));\n               break;\n            case 'maxCargo':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.maxCargo > b.maxCargo) ? 1 : (b.maxCargo > a.maxCargo) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.maxCargo < b.maxCargo) ? 1 : (b.maxCargo < a.maxCargo) ? -1 : 0));\n               break;\n            case 'speed':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.speed > b.speed) ? 1 : (b.speed > a.speed) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.speed < b.speed) ? 1 : (b.speed < a.speed) ? -1 : 0));\n               break;\n            case 'plating':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.plating > b.plating) ? 1 : (b.plating > a.plating) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.plating < b.plating) ? 1 : (b.plating < a.plating) ? -1 : 0));\n               break;\n            case 'weapons':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.weapons > b.weapons) ? 1 : (b.weapons > a.weapons) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.weapons < b.weapons) ? 1 : (b.weapons < a.weapons) ? -1 : 0));\n               break;\n            default:\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.class > b.class) ? 1 : (b.class > a.class) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.class < b.class) ? 1 : (b.class < a.class) ? -1 : 0));\n               break;\n         }\n\n         setShips(sorted);\n      };\n\n      sort(sortType);\n   }, [sortType, sortOrder]);\n\n   useEffect(() => {\n      GetShips();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <PurchaseShipModal show={showModal} ship={selectedShip} handleClose={() => setModalShow(false)} />\n         <h2 className=\"text-3xl mb-5\">Purchase Ships</h2>\n         <div className=\"flex mb-5\">\n            <button type=\"button\" className=\"cursor-pointer w-6 h-6\" onClick={() => setOrder(!sortOrder)}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#E5E7EB\" {...(sortOrder ? { transform: 'rotate(180) scale(-1,1)' } : {})} className=\"origin-center\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" /></svg>\n            </button>\n            <select name=\"sort\" id=\"sort\" className=\"appearance-none bg-gray-800 text-gray-200 cursor-pointer\" onChange={(e) => setSortType(e.target.value)}>\n               <option value=\"type\">Name</option>\n               <option value=\"manufacturer\">Manufacturer</option>\n               <option value=\"cost\">Cost</option>\n               <option value=\"maxCargo\">Max Cargo</option>\n               <option value=\"speed\">Speed</option>\n               <option value=\"plating\">Plating</option>\n               <option value=\"weapons\">Weapons</option>\n            </select>\n         </div>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !ships\n               && (\n                  <React.Fragment>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                  </React.Fragment>\n               )}\n            { ships?.map((ship) => (\n               <button type=\"button\" className=\"p-3 bg-gray-900 border border-gray-700 rounded hover:border-yellow-900 hover:shadow-xl\" key={ship.class + ship.speed + ship.manufacturer + ship.maxCargo} onClick={() => { setModalShow(true); setSelectedShip(ship); }}>\n                  <div className=\"flex justify-between items-center mb-5\">\n                     <div className=\"text-left\">\n                        <h3>{ ship.type }</h3>\n                        <p className=\"text-xs text-gray-400\">{ ship.manufacturer }</p>\n                     </div>\n                     <div className=\"text-right\">\n                        <p className=\"text-xs text-gray-400\">{ ship.purchaseLocations.length } available</p>\n                        <p className={`text-sm ${(lowestPrice(ship) > user.user.credits) ? 'text-red-400' : ''}`}>{ lowestPrice(ship).toLocaleString() } credits</p>\n                     </div>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg version=\"1.1\" fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 485.32 485.32\" enableBackground=\"new 0 0 485.32 485.32\">\n                           <g>\n                              <path d=\"m480.76,79.05c-0.6-0.2-235-78.3-235-78.3-2.1-1-4.1-1-6.2,0l-231.9,76.3c-5.8,2.4-7.2,7.4-7.2,10.3v313.3c0,5.2 3.1,9.3 7.2,10.3l229,73.2c3.5,1.3 7.3,1.8 12.1,0l228.9-73.2c4.1-2.1 7.2-6.2 7.2-10.3v-313.3c5.68434e-14-3.1-1-6.2-4.1-8.3zm-238.1-56.7l198.9,63.9-75.1,24.1-196-64.5 72.2-23.5zm-10.3,438l-211.3-67v-291.4l211.3,67.6v290.8zm10.3-310.2l-198.9-62.8 93.7-30.6 195.3,64.5-90.1,28.9zm10.3,310.2v-291.6l105.1-33.3v32.3l20.6-8.8v-30l85.5-27v290.4h0.1l-211.3,68z\" />\n                           </g>\n                        </svg>\n                     </div>\n                     <p>{ ship.maxCargo }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 358.121c0-68.38-26.629-132.667-74.98-181.02-48.353-48.352-112.64-74.98-181.02-74.98s-132.667 26.629-181.02 74.98c-48.351 48.353-74.98 112.64-74.98 181.02v15h205.016c4.085 12.323 12.371 22.642 23.657 29.305 8.558 5.052 17.953 7.453 27.236 7.453 18.406 0 36.36-9.448 46.376-26.413 1.956-3.313 3.522-6.781 4.717-10.345h204.998zm-235.548 10.093c-6.656 11.276-21.247 15.037-32.526 8.378-5.463-3.225-9.343-8.384-10.925-14.528-1.583-6.144-.679-12.535 2.547-17.998s8.385-9.343 14.528-10.925c1.976-.509 3.977-.76 5.964-.76 4.194 0 8.328 1.12 12.034 3.308 5.463 3.225 9.343 8.384 10.925 14.528 1.583 6.143.679 12.535-2.547 17.997zm31.689-25.093c-.032-.129-.057-.259-.09-.388-2.296-8.916-6.74-16.908-12.887-23.425l43.106-73.015-25.834-15.252-43.106 73.015c-8.675-2.233-17.819-2.264-26.737.032-13.903 3.581-25.58 12.362-32.879 24.726-2.674 4.53-4.636 9.344-5.882 14.307h-173.34c1.992-30.247 9.976-58.88 22.75-84.742l33.311 19.232 15-25.98-33.274-19.21c16.444-24.477 37.541-45.578 62.018-62.022l19.212 33.276 25.98-15-19.236-33.318c25.861-12.774 54.5-20.737 84.746-22.729v38.493h30v-38.493c30.246 1.992 58.885 9.955 84.746 22.729l-19.236 33.318 25.98 15 19.212-33.276c24.477 16.444 45.573 37.545 62.018 62.022l-33.274 19.21 15 25.98 33.311-19.232c12.774 25.862 20.758 54.495 22.75 84.742z\" /></svg>\n                     </div>\n                     <p>{ ship.speed }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg version=\"1.1\" fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                           <g>\n                              <path d=\"M461.144,60.883L260.312,0.633c-2.809-0.844-5.808-0.844-8.62,0L50.858,60.883c-6.345,1.903-10.69,7.743-10.69,14.367\n                                 v220.916c0,28.734,11.632,58.148,34.573,87.425c17.522,22.36,41.762,44.813,72.048,66.736\n                                 c50.877,36.828,100.975,59.42,103.083,60.363c1.95,0.873,4.039,1.31,6.129,1.31c2.089,0,4.179-0.436,6.129-1.31\n                                 c2.108-0.943,52.205-23.535,103.082-60.363c30.285-21.923,54.525-44.376,72.047-66.736c22.941-29.276,34.573-58.69,34.573-87.425\n                                 V75.25C471.833,68.626,467.489,62.786,461.144,60.883z M441.833,296.166c0,50.852-51.023,98.534-93.826,129.581\n                                 c-38.374,27.833-77.291,47.583-92.005,54.678c-14.714-7.095-53.632-26.845-92.006-54.678\n                                 c-42.804-31.047-93.828-78.729-93.828-129.581V86.41l185.833-55.75l185.832,55.75V296.166z\"\n                              />\n                           </g>\n                        </svg>\n                     </div>\n                     <p>{ ship.plating }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 510.192 510.192\" viewBox=\"0 0 510.192 510.192\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m510.192 0-122.656 13.628-300.462 300.463-22.694-22.694 33.301-33.3-21.213-21.213-54.514 54.513c10.689 10.689 55.253 55.254 65.86 65.861l-87.814 87.814 65.12 65.12 87.813-87.814c10.633 10.632 55.212 55.211 65.861 65.86l54.513-54.514-21.213-21.213-33.3 33.301-22.694-22.693 300.464-300.463zm-467.766 445.072 22.693-22.694 22.695 22.695-22.694 22.693zm66.602-21.212-22.695-22.695 22.694-22.693 22.694 22.694zm358.881-314.976-293.022 293.022-22.693-22.694 252.835-252.835-21.213-21.213-252.835 252.835-22.694-22.693 293.021-293.023 74.927-8.325z\" /></g></svg>\n                     </div>\n                     <p>{ ship.weapons }</p>\n                  </div>\n               </button>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Available;\n","import React, { useState } from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport { useSelector } from 'react-redux';\nimport { OwnedShip } from '../../Api/types';\nimport { RootState } from '../../store';\nimport ShipCard from './ShipCard';\n\ninterface Props {\n   sortOrder: boolean,\n   sortType: string,\n   system: string,\n   ships: OwnedShip[],\n   setShipError: (message:string) => void,\n}\n\nconst ShipsGroup = ({\n   sortOrder, sortType, system, ships, setShipError,\n}:Props) => {\n   const { systems } = useSelector((state:RootState) => state);\n   const [collapseHeight, setCollapseHeight] = useState<number | 'auto'>('auto');\n\n   const sortShips = (group:OwnedShip[]) => {\n      switch (sortType) {\n         case 'class':\n            return [...group].sort((a, b) => (sortOrder ? b.class.localeCompare(a.class) : a.class.localeCompare(b.class)));\n         case 'type':\n            return [...group].sort((a, b) => (sortOrder ? b.type.localeCompare(a.type) : a.type.localeCompare(b.type)));\n         case 'manufacturer':\n            return [...group].sort((a, b) => (sortOrder ? a.manufacturer.localeCompare(b.manufacturer) : b.manufacturer.localeCompare(a.manufacturer)));\n         case 'maxCargo':\n            return sortOrder ? [...group].sort((a, b) => ((a.maxCargo > b.maxCargo) ? 1 : (b.maxCargo > a.maxCargo) ? -1 : 0)) : [...group].sort((a, b) => ((a.maxCargo < b.maxCargo) ? 1 : (b.maxCargo < a.maxCargo) ? -1 : 0));\n         case 'speed':\n            return sortOrder ? [...group].sort((a, b) => ((a.speed > b.speed) ? 1 : (b.speed > a.speed) ? -1 : 0)) : [...group].sort((a, b) => ((a.speed < b.speed) ? 1 : (b.speed < a.speed) ? -1 : 0));\n         case 'plating':\n            return sortOrder ? [...group].sort((a, b) => ((a.plating > b.plating) ? 1 : (b.plating > a.plating) ? -1 : 0)) : [...group].sort((a, b) => ((a.plating < b.plating) ? 1 : (b.plating < a.plating) ? -1 : 0));\n         case 'weaponse':\n            return sortOrder ? [...group].sort((a, b) => ((a.weapons > b.weapons) ? 1 : (b.weapons > a.weapons) ? -1 : 0)) : [...group].sort((a, b) => ((a.weapons < b.weapons) ? 1 : (b.weapons < a.weapons) ? -1 : 0));\n         default:\n            return group;\n      }\n   };\n\n   const toggleCollapse = () => {\n      setCollapseHeight(collapseHeight === 0 ? 'auto' : 0);\n   };\n\n   return (\n      <div className=\"mb-10\">\n         <button type=\"button\" className=\"flex items-center border-b border-gray-600 pb-2 mb-4\" onClick={() => toggleCollapse()}>\n            <span className={`mr-2 mt-0.5 ${collapseHeight === 'auto' ? 'arrow-down' : 'arrow-up'}`} />\n            <h3 className=\"text-xl\">{ systems.find((x) => x.symbol === system)?.name }</h3>\n         </button>\n         <AnimateHeight id={`locations-${system}`} className={`locations-${system}`} duration={250} height={collapseHeight}>\n            <div className=\"grid grid-cols-4 gap-4\">\n               { sortShips(ships).map((ship) => (\n                  <ShipCard ship={ship} key={ship.id} shipError={(message) => setShipError(message)} />\n               ))}\n            </div>\n         </AnimateHeight>\n      </div>\n   );\n};\n\nexport default ShipsGroup;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { OwnedShip } from '../../Api/types';\nimport { RootState } from '../../store';\nimport ShipsGroup from './ShipsGroup';\n\nexport interface shipGroups {\n   [index:string]: OwnedShip[];\n}\n\nconst Owned = () => {\n   const { ships } = useSelector((state:RootState) => state.user);\n   const { flightPlans } = useSelector((state:RootState) => state);\n   const [shipGroups, setShipGroups] = useState<shipGroups>();\n   const [sortOrder, setOrder] = useState(false);\n   const [sortType, setSortType] = useState('type');\n   const [shipError, setShipError] = useState('');\n\n   useEffect(() => {\n      const result:shipGroups = {};\n      ships.forEach((ship) => {\n         if (!ship.location) {\n            if (ship.flightPlanId || flightPlans.some((x) => x.shipId === ship.id)) {\n               const destinationSystem = flightPlans.find((x) => x.shipId === ship.id)?.destination.split('-')[0] as string;\n               (result[destinationSystem] = result[destinationSystem] || []).push(ship);\n            } else {\n               (result.UNKNOWN = result.UNKNOWN || []).push(ship);\n            }\n         } else if (result[ship.location.split('-')[0]]) {\n            result[ship.location.split('-')[0]].push(ship);\n         } else {\n            result[ship.location.split('-')[0]] = [];\n            result[ship.location.split('-')[0]].push(ship);\n         }\n      });\n      const ordered = Object.keys(result).sort().reduce((obj:shipGroups, key) => {\n         // eslint-disable-next-line no-param-reassign\n         obj[key] = result[key];\n         return obj;\n      }, {});\n      setShipGroups(ordered);\n   }, [ships, flightPlans]);\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Ships</h2>\n         { shipError !== ''\n         && (\n            <div className=\"flex justify-between items-center text-sm py-3 px-2 bg-red-400 text-red-900 mb-5\">\n               <p>{ shipError }</p>\n               <button className=\"w-4 h-4 hover:text-red-700\" type=\"button\" onClick={() => setShipError('')}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n               </button>\n            </div>\n         )}\n         <div className=\"flex mb-5\">\n            <button type=\"button\" className=\"cursor-pointer w-6 h-6\" onClick={() => setOrder(!sortOrder)}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#E5E7EB\" {... (sortOrder ? { transform: 'rotate(180) scale(-1,1)' } : {})} className=\"origin-center\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" /></svg>\n            </button>\n            <select name=\"sort\" id=\"sort\" className=\"appearance-none bg-gray-800 text-gray-200 cursor-pointer\" onChange={(e) => setSortType(e.target.value)}>\n               <option value=\"type\">Name</option>\n               <option value=\"manufacturer\">Manufacturer</option>\n               <option value=\"cost\">Cost</option>\n               <option value=\"maxCargo\">Max Cargo</option>\n               <option value=\"speed\">Speed</option>\n               <option value=\"plating\">Plating</option>\n               <option value=\"weapons\">Weapons</option>\n            </select>\n         </div>\n         <div>\n            { shipGroups && Object.keys(shipGroups).map((group) => (\n               <ShipsGroup key={group} system={group} ships={shipGroups[group]} sortOrder={sortOrder} sortType={sortType} setShipError={setShipError} />\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Owned;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Available from './Available';\nimport Owned from './Owned';\n\nconst Ships = () => (\n   <div>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/ships\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Owned</NavLink>\n         <NavLink exact to=\"/ships/available\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Purchase</NavLink>\n      </div>\n      <Switch>\n         <Route exact path=\"/ships\" component={Owned} />\n         <Route path=\"/ships/available\" component={Available} />\n      </Switch>\n   </div>\n);\n\nexport default Ships;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Api from '../../Api';\nimport { Location, LocationType } from '../../Api/types';\nimport { RootState, setSystems } from '../../store';\n\ninterface SortedSystem {\n   symbol: string,\n   name: string,\n   locations: SortedLocation[],\n}\n\ninterface SortedLocation {\n   parent: Location,\n   satellites: Location[],\n}\n\nconst SystemMap = () => {\n   const token = useSelector((state:RootState) => state.account.token);\n   const systems = useSelector((state:RootState) => state.systems);\n   const dispatch = useDispatch();\n   const [sortedLocations, setSortedLocations] = useState<SortedSystem[]>([]);\n\n   useEffect(() => {\n      const GetSystems = async () => {\n         if (systems.length === 0) {\n            const temp = (await Api.systemsInfo(token)).systems;\n            dispatch((setSystems(temp)));\n         }\n      };\n      GetSystems();\n   }, []);\n\n   useEffect(() => {\n      const sorted:SortedSystem[] = [];\n      systems.forEach((system) => {\n         const sortedSystem:SortedSystem = { symbol: system.symbol, name: system.name, locations: [] };\n         sorted.push(sortedSystem);\n         system.locations.forEach((location) => {\n            if (location.type !== LocationType.Moon) {\n               sortedSystem.locations.push({ parent: location, satellites: [] });\n            } else {\n               sortedSystem.locations.find((x) => x.parent.symbol === (`${location.symbol.split('-')[0]}-${location.symbol.split('-')[1]}`))?.satellites.push(location);\n            }\n         });\n      });\n      setSortedLocations(sorted);\n   }, [systems]);\n\n   return (\n      <React.Fragment>\n         <div className=\"h-1/4\">\n            { sortedLocations\n               && (\n                  <React.Fragment>\n                     <div className=\"grid gap-3 grid-cols-4 mt-4\">\n                        { sortedLocations.map((system) => (\n                           <div key={system.symbol}>\n                              <h2 className=\"text-3xl\">{ system.name }</h2>\n                              <ul className=\"mt-3 pl-5\">\n                                 {system.locations.map((location) => (\n                                    <React.Fragment key={location.parent.symbol}>\n                                       <li className=\"py-1 underline hover:text-yellow-600 w-max\"><Link to={`systems/${location.parent.symbol}`}>{ location.parent.name }</Link></li>\n                                       { location.satellites.length > 0\n                                       && (\n                                          <ul className=\"pl-5\">\n                                             {\n                                                location.satellites.map((satellite) => (\n                                                   <li key={satellite.symbol} className=\"py-1 underline hover:text-yellow-600 w-max\"><Link to={`systems/${satellite.symbol}`}>{ satellite.name }</Link></li>\n                                                ))\n                                             }\n                                          </ul>\n                                       )}\n                                    </React.Fragment>\n                                 ))}\n                              </ul>\n                           </div>\n                        ))}\n                     </div>\n                  </React.Fragment>\n               )}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default SystemMap;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Api from '../../Api';\nimport { RootState } from '../../store';\nimport { Location } from '../../Api/types';\n\nconst LocationInfo = () => {\n   const { token } = useSelector((state:RootState) => state.account);\n   const { location } = useParams<{ location: string }>();\n   const [locInfo, setLocInfo] = useState<Location>();\n   const [error, setError] = useState<string>();\n\n   useEffect(() => {\n      const getLocation = async () => {\n         try {\n            const result = await Api.getLocation(token, location);\n            setLocInfo(result.location);\n         } catch (err: unknown) {\n            setError((err as Error).message);\n         }\n      };\n\n      getLocation();\n   }, []);\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <React.Fragment>\n         <div className=\"mb-4\">\n            <h2 className=\"text-3xl\">{ locInfo?.name }</h2>\n            <h3>({ location })</h3>\n         </div>\n         { locInfo?.messages\n         && (\n            <div className=\"text-sm mb-4 p-4 bg-blue-800 text-blue-200 rounded-sm\">\n               <p>{ [...locInfo.messages].slice(0, -2).join(' ') }</p>\n            </div>\n         )}\n         { locInfo?.structures\n         && (\n            <React.Fragment>\n               <p className=\"mb-2 text-lg border-b border-gray-500 w-max\">Structures</p>\n               {locInfo?.structures?.map((structure) => (\n                  <div key={structure.id}>\n                     <p className=\"font-bold\">{ structure.name }</p>\n                     <p className=\"text-sm mb-2 text-gray-400\">{ structure.completed ? 'Completed' : 'Not completed' }</p>\n                     <ul className=\"pl-3\">\n                        { structure.materials.slice().sort((a, b) => a.good.localeCompare(b.good)).map((material) => (\n                           <li className=\"py-1\" key={material.good}>\n                              <p>{ formatString(material.good) } - {`${(Math.round(((material.quantity / material.targetQuantity) * 100) * 10) / 10).toFixed(1)}%`}</p>\n                              <p className=\"text-sm text-gray-400\">{`${material.quantity.toLocaleString()} of ${material.targetQuantity.toLocaleString()}`}</p>\n                           </li>\n                        ))}\n                     </ul>\n                  </div>\n               ))}\n            </React.Fragment>\n         )}\n      </React.Fragment>\n   );\n};\n\nexport default LocationInfo;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Api from '../../Api';\nimport { Loan, LoanType } from '../../Api/types';\nimport { RootState, setUser } from '../../store';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   loan: Loan | undefined\n}\n\nconst GetLoan = ({ handleClose, show, loan }:Props) => {\n   const history = useHistory();\n   const dispatch = useDispatch();\n   const user = useSelector((state:RootState) => state.account);\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900' : 'hidden';\n\n   useEffect(() => {\n      setLoading(false);\n      setError('');\n   }, [loan]);\n\n   const requestLoan = async () => {\n      setLoading(true);\n      try {\n         const result = await Api.newLoan(user.username, user.token, LoanType.Startup);\n         dispatch(setUser(result));\n         handleClose;\n         history.push('/loans');\n      } catch (err: unknown) {\n         setLoading(false);\n         setError((err as Error).message);\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Request the following loan</h3>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Loan amount</p>\n                  <p>{ loan?.amount.toLocaleString() } credits</p>\n               </div>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Repayment Due</p>\n                  <p>{ loan?.termInDays } day{ loan && loan?.termInDays > 1 ? 's' : '' }</p>\n               </div>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Repayment Amount</p>\n                  <p>\n                     { loan && (loan.amount + (loan.amount * (loan.rate / 100))).toLocaleString() }\n                     {' '} credits\n                  </p>\n               </div>\n               { error\n                  && (\n                     <div className=\"bg-red-300 text-red-800 px-4 py-3 mb-4 text-center\">\n                        <p>{ error }</p>\n                     </div>\n                  )}\n               <div className=\"flex justify-end pt-2\">\n                  { !loading\n                     ? (\n                        <React.Fragment>\n                           <button type=\"button\" className=\"px-4 py-2 text-red-500 text-sm rounded mr-4 hover:text-red-400\" onClick={handleClose}>Close</button>\n                           <button\n                              type=\"button\"\n                              className=\"w-1/4 px-4 py-2 text-white text-sm bg-green-500 rounded hover:bg-green-400 disabled:opacity-50 disabled:cursor-default disabled:bg-green-500\"\n                              disabled={loading || (error.length > 0)}\n                              onClick={requestLoan}\n                           >Get Loan\n                           </button>\n                        </React.Fragment>\n                     )\n                     : <p className=\"text-sm text-yellow-500 italic\">Please Wait...</p>}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default GetLoan;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport { Loan } from '../../Api/types';\nimport { RootState } from '../../store';\nimport { CardLoader } from '../SkeletonLoaders';\nimport GetLoan from './GetLoadModal';\n\nconst Available = () => {\n   const user = useSelector((state:RootState) => state.account);\n   const [loans, setLoans] = useState<Loan[]>();\n   const [showModal, setModalShow] = useState(false);\n   const [selectedLoan, setSelectedLoan] = useState<Loan>();\n\n   useEffect(() => {\n      const GetLoans = async () => {\n         setLoans((await Api.getLoansAvailable(user.token)).loans);\n      };\n      GetLoans();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <GetLoan show={showModal} loan={selectedLoan} handleClose={() => { setModalShow(false); setSelectedLoan(undefined); }} />\n         <h2 className=\"text-3xl mb-5\">Available Loans</h2>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !loans\n               && (\n                  <React.Fragment>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                  </React.Fragment>\n               )}\n            { loans?.map((loan) => (\n               <button type=\"button\" className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left hover:border-yellow-900 hover:shadow-xl\" key={loan.amount + loan.type + loan.rate} onClick={() => { setModalShow(true); setSelectedLoan(loan); }}>\n                  <div className=\"flex justify-between items-start\">\n                     <div className=\"flex items-center\">\n                        <div className=\"w-6 h-6 mr-2\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.1} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                           </svg>\n                        </div>\n                        <h3 className=\"text-lg\">{ loan.amount.toLocaleString() }</h3>\n                     </div>\n                     <div>\n                        { loan.collateralRequired\n                           && <p className=\"text-red-400\">Collateral Required</p> }\n                     </div>\n                  </div>\n                  <p className=\"text-xs text-gray-400\">{ loan.type }</p>\n                  <div className=\"mt-5\">\n                     <div className=\"flex mt-3\">\n                        <div className=\"w-6 h-6 mr-3\" title=\"Term\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                           </svg>\n                        </div>\n                        <p>{ loan.termInDays }</p>\n                     </div>\n                     <div className=\"flex mt-3\">\n                        <p className=\"text-xl text-center w-6 h-6 mr-3\" title=\"Origination fee\">%</p>\n                        <p>\n                           <span>{ loan.rate } </span>\n                           <span className=\"text-gray-400 text-sm\">\n                              (\n                              { loan.amount * (loan.rate / 100)}\n                              {' '}\n                              credits)\n                           </span>\n                        </p>\n                     </div>\n                     <p className=\"mt-3 pt-3 text-sm border-t border-gray-700\">\n                        Total repayment cost:\n                        {' '}\n                        { (loan.amount + (loan.amount * (loan.rate / 100))).toLocaleString() }\n                        {' '}\n                        credits\n                     </p>\n                  </div>\n               </button>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Available;\n","import { formatDistanceToNow } from 'date-fns';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport { LoanStatus } from '../../Api/types';\nimport { RootState, updateLoans } from '../../store';\n\ninterface LoanRepaymentResponse {\n   type: 'Success' | 'Error',\n   message: string\n}\n\nconst Owned = () => {\n   const { username, token } = useSelector((state:RootState) => state.account);\n   const { loans, credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [response, setResponse] = useState<LoanRepaymentResponse>();\n\n   const repayLoan = async (loanId:string) => {\n      try {\n         const result = await Api.replayLoan(username, token, loanId);\n         dispatch(updateLoans(result.user.loans));\n         setResponse({ type: 'Success', message: 'Loan repayed successfully!' });\n      } catch (err: unknown) {\n         setResponse({ type: 'Error', message: (err as Error).message });\n      }\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Loans</h2>\n         { response\n         && (\n            <div className={`flex justify-between items-center text-sm py-3 px-3 mb-5 ${response.type === 'Success' ? 'bg-green-400 text-green-900' : 'bg-red-400 text-red-900'}`}>\n               <p>{ response.message }</p>\n               <button className={`w-4 h-4 ${response.type === 'Success' ? 'hover:text-green-700' : 'hover:text-red-700'}`} type=\"button\" onClick={() => setResponse(undefined)}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n               </button>\n            </div>\n         )}\n         <h3 className=\"text-lg mb-4\">Current Loans</h3>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { ([...loans].filter((x) => x.status === LoanStatus.Current)).length > 0\n               ? [...loans].filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                  <div className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left\" key={loan.id}>\n                     <div className=\"mb-3\">\n                        <p className=\"text-xs text-gray-400\">Repayment Amount</p>\n                        <p>{ loan.repaymentAmount.toLocaleString() } credits</p>\n                     </div>\n                     <div>\n                        <p className=\"text-xs text-gray-400\">Due</p>\n                        <p>{ formatDistanceToNow(new Date(loan.due), { addSuffix: true }) }</p>\n                     </div>\n                     { credits > loan.repaymentAmount\n                     && (\n                        <div className=\"mt-3\">\n                           <button type=\"button\" className=\"py-1 px-2 bg-blue-500 rounded hover:bg-blue-600\" onClick={() => repayLoan(loan.id)}>Repay</button>\n                        </div>\n                     )}\n                  </div>\n               ))\n               : <p className=\"text-sm ml-4\">You have no open loans</p>}\n         </div>\n         <h3 className=\"text-lg my-4\">Closed Loans</h3>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { [...loans].filter((x) => x.status !== LoanStatus.Current).map((loan) => (\n               <div className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left\" key={loan.id}>\n                  <div className=\"mb-3\">\n                     <p className=\"text-xs text-gray-400\">Repayment Amount</p>\n                     <p>{ loan.repaymentAmount.toLocaleString() } credits</p>\n                  </div>\n                  <div>\n                     <p className=\"text-xs text-gray-400\">Status</p>\n                     <p>{ formatString(loan.status) }</p>\n                  </div>\n               </div>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Owned;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Available from './Available';\nimport Owned from './Owned';\n\nconst Loans = () => (\n   <div>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/loans\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Your Loans</NavLink>\n         <NavLink exact to=\"/loans/available\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Get a Loan</NavLink>\n      </div>\n      <Switch>\n         <Route exact path=\"/loans\" component={Owned} />\n         <Route path=\"/loans/available\" component={Available} />\n      </Switch>\n   </div>\n);\n\nexport default Loans;\n","import { formatDistanceToNow } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Api from '../../Api';\nimport { Location } from '../../Api/types';\nimport { RootState, setSystems, updateMarketData } from '../../store';\nimport { MarketCardLoader } from '../SkeletonLoaders';\n\nconst Markets = () => {\n   const { token } = useSelector((state:RootState) => state.account);\n   const { ships } = useSelector((state:RootState) => state.user);\n   const marketData = useSelector((state:RootState) => state.marketData);\n   const systems = useSelector((state:RootState) => state.systems);\n   const dispatch = useDispatch();\n   const [locations, setLocations] = useState<Location[]>();\n   const [time, setTime] = useState<number>(Date.now());\n   const [activeSystem, setActiveSystem] = useState<string>();\n\n   const changeSystem = async (system:string) => {\n      setActiveSystem(system);\n      setLocations(undefined);\n      const data = (await Api.getLocations(token, system)).locations;\n      setLocations(data);\n   };\n\n   useEffect(() => {\n      const GetSystems = async () => {\n         if (systems.length === 0) {\n            const temp = (await Api.systemsInfo(token)).systems;\n            dispatch((setSystems(temp)));\n         }\n      };\n      GetSystems();\n\n      // Update the 'time' state, to refresh \"last updated\" times\n      const interval = setInterval(() => setTime(Date.now()), 60000);\n\n      return () => clearInterval(interval);\n   }, []);\n\n   useEffect(() => {\n      if (systems.length === 0) { return; }\n      changeSystem(systems[0].symbol);\n   }, [systems]);\n\n   useEffect(() => {\n      const getMarketData = async () => {\n         locations?.forEach(async (location) => {\n            if (ships.some((x) => x.location === location.symbol)) {\n               const data = await Api.getMarket(token, location.symbol);\n               dispatch(updateMarketData({ updatedAt: Date.now(), planet: data.location }));\n            }\n         });\n      };\n      getMarketData();\n   }, [locations, ships]);\n\n   const getDataForLocation = (location: Location) => {\n      const data = marketData.find((x) => x.planet.symbol === location.symbol);\n\n      const formatString = (value:string) => (\n         value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n      if (!data || data?.planet.marketplace.length === 0) {\n         return <p className=\"mt-3 text-sm text-gray-400\">No data available</p>;\n      }\n\n      return (\n         data?.planet.marketplace.slice().sort((a, b) => ((a.symbol > b.symbol) ? 1 : (b.symbol > a.symbol) ? -1 : 0)).map((market) => (\n            <div className=\"text-sm my-3\" key={market.symbol + market.pricePerUnit + market.volumePerUnit}>\n               <p className=\"font-bold\">{ formatString(market.symbol) }</p>\n               <p className=\"pl-2\">Quantity: { market.quantityAvailable.toLocaleString() }</p>\n               <p className=\"pl-2\">Buy: { (market.pricePerUnit + market.spread).toLocaleString() } credits</p>\n               <p className=\"pl-2\">Sell: { (market.pricePerUnit - market.spread).toLocaleString() } credits</p>\n            </div>\n         ))\n      );\n   };\n\n   const getUpdatedTime = (location: Location) => {\n      const data = marketData.find((x) => x.planet.symbol === location.symbol);\n\n      if (!data) { return null; }\n\n      return `Updated ${formatDistanceToNow(new Date(data.updatedAt), { addSuffix: true })}`;\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Markets</h2>\n         <p className=\"text-xs text-gray-400 mb-1\">System</p>\n         { systems.map((system) => (\n            <button key={system.symbol} type=\"button\" className={`text-sm mr-4 pb-1 mb-5 ${activeSystem === system.symbol ? 'subMenuActive' : ''}`} value={system.symbol} onClick={(e) => changeSystem(e.currentTarget.value)}>{ system.name }</button>\n         ))}\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !locations\n               ? (\n                  <MarketCardLoader />\n               )\n               : (\n                  locations.sort((a, b) => ((a.name > b.name) ? 1 : (b.name > a.name) ? -1 : 0)).map((location) => (\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\" key={location.symbol}>\n                        <div className=\"flex justify-between items-center pb-2 border-b border-gray-700\">\n                           <h3 className=\"text-xl\">{ location.name }</h3>\n                           <p className=\"text-xs text-gray-400\">{ time && getUpdatedTime(location) }</p>\n                        </div>\n                        { getDataForLocation(location) }\n                     </div>\n                  )))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Markets;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Comlink from 'comlink';\nimport { Automation, WorkerType } from './webworker';\nimport {\n   addAutomationError,\n   addFlightPlan, reset, RootState, setAutomationState, setCredits,\n   setSystems,\n   setToken, setUser, StoredMarket, updateMarketData, updateShip,\n} from './store';\nimport Api from './Api/index';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SignIn from './components/SignIn';\nimport Profile from './components/Profile';\nimport Ships from './components/Ships/Ships';\nimport Systems from './components/Systems/Systems';\nimport Location from './components/Systems/Location';\nimport Loans from './components/Loans/Loans';\nimport {\n   FlightPlan, Market, OwnedShip, Purchase,\n} from './Api/types';\nimport Markets from './components/Markets/Markets';\nimport { AutoAction } from './components/Automation/Models';\n\ninterface Props {\n   Worker: Comlink.Remote<WorkerType>\n}\n\ninterface Token {\n   username: string,\n   token: string\n}\n\nexport interface WorkerDataUpdate {\n   type: AutoAction.Travel | AutoAction.Buy | AutoAction.Sell,\n   data: FlightPlan | Purchase,\n}\n\nexport interface WorkerError {\n   shipId: string,\n   error: string | null,\n}\n\nfunction App({ Worker }:Props) {\n   const [automationsList, setAutomationsList] = useState<{ shipId:string, instance: Comlink.Remote<Automation>}[]>([]);\n   const { account, automations, user } = useSelector((state:RootState) => state);\n   const dispatch = useDispatch();\n   const key = localStorage.getItem('apiKey');\n\n   useEffect(() => {\n      if (key === undefined || key === null) { return; }\n\n      const apiKey = JSON.parse(key) as Token;\n\n      dispatch(setToken(apiKey));\n\n      const FetchAccount = async () => {\n         try {\n            const result = await Api.getUser(apiKey.username, apiKey.token);\n            dispatch(setUser(result));\n\n            // only needed because the ships property on the user response does not contain the 'flightPlanId' property\n            if (result.user.ships.some((x) => x.location === undefined)) {\n               const { ships } = await Api.ownedShips(apiKey.token, apiKey.username);\n\n               ships.forEach(async (ship) => {\n                  if (ship.flightPlanId) {\n                     const { flightPlan } = await Api.queryFlightPlan(apiKey.token, apiKey.username, ship.flightPlanId);\n                     if (flightPlan.terminatedAt === null) {\n                        dispatch(addFlightPlan(flightPlan));\n                     }\n                  }\n               });\n            }\n\n            const getSystems = async () => {\n               const temp = (await Api.systemsInfo(apiKey.token)).systems;\n               dispatch((setSystems(temp)));\n            };\n            getSystems();\n\n            // Update market data stored in local storage\n            const marketDataStore = localStorage.getItem('marketData');\n            const marketData = marketDataStore !== null ? JSON.parse(marketDataStore) as StoredMarket[] : null;\n            marketData?.map((data) => (\n               dispatch(updateMarketData(data))\n            ));\n         } catch (err: unknown) {\n            if ((err as Error).message === 'Invalid username or token.') {\n               dispatch(reset());\n               localStorage.removeItem('apiKey');\n            }\n         }\n      };\n      FetchAccount();\n   }, []);\n\n   const webworkerError = (data:WorkerError) => {\n      console.log(data);\n      dispatch(setAutomationState({ shipId: data.shipId, enabled: false }));\n      dispatch(addAutomationError(data));\n   };\n\n   const webworkerUpdateState = async (data:WorkerDataUpdate) => {\n      if (data.type === AutoAction.Travel) {\n         dispatch(addFlightPlan(data.data as FlightPlan));\n         // ship fuel and cargo space change after flight plan, so update the ship\n         const updatedShip = await Api.shipInfo(account.token, account.username, (data.data as FlightPlan).shipId);\n         dispatch(updateShip(updatedShip.ship));\n      } else {\n         dispatch(setCredits((data.data as Purchase).credits));\n         dispatch(updateShip((data.data as Purchase).ship));\n      }\n   };\n\n   const webworkerGetLocalStorage = (worker: Automation) => {\n      worker.setMarketData(localStorage.getItem('marketData'));\n   };\n\n   const webworkerUpdateMarketData = (data: Market) => {\n      dispatch(updateMarketData({ updatedAt: Date.now(), planet: data.location }));\n   };\n\n   useEffect(() => {\n      automations.forEach(async (item) => {\n         const automation = automationsList.find((x) => x.shipId === item.shipId);\n\n         // If the automation in the store is not enabled and there's no running automation, then we should create a new one and start it.\n         if (item.enabled && !automation) {\n            const ship = user.ships.find((x) => x.id === item.shipId) as OwnedShip;\n            const instance = await new Worker(account.token,\n               account.username, item, ship, user.credits,\n               Comlink.proxy(webworkerError),\n               Comlink.proxy(webworkerUpdateState),\n               Comlink.proxy(webworkerGetLocalStorage),\n               Comlink.proxy(webworkerUpdateMarketData));\n            await instance.run();\n            setAutomationsList([...automationsList, { shipId: item.shipId, instance }]);\n         }\n\n         // If the automation in the store is not enabled and there's an automation worker, we should stop it.\n         if (!item.enabled && automation) {\n            await automation.instance.stop();\n            setAutomationsList(automationsList.filter((x) => x.shipId !== automation.shipId));\n         }\n      });\n   }, [automations]);\n\n   return (\n      <React.Fragment>\n         { (account.token === undefined || account.token === null || account.token.length === 0\n            || account.username === undefined || account.username === null || account.username.length === 0) ? <SignIn /> : (\n               <React.Fragment>\n                  <NavBar />\n                  <div className=\"bg-gray-800 py-4 flex-grow text-gray-200\">\n                     <div className=\"container min-h-full mx-auto\">\n                        { account.token.length !== 0\n                           && (\n                              <Switch>\n                                 <Route exact path=\"/\" component={Profile} />\n                                 <Route path=\"/ships\" component={Ships} />\n                                 <Route path=\"/loans\" component={Loans} />\n                                 <Route path=\"/markets\" component={Markets} />\n                                 <Route path=\"/systems/:location\" component={Location} />\n                                 <Suspense fallback={<div />}>\n                                    <Route exact path=\"/systems\" component={Systems} />\n                                 </Suspense>\n                              </Switch>\n                           )}\n                     </div>\n                  </div>\n               </React.Fragment>\n            )}\n      </React.Fragment>\n   );\n}\n\nexport default App;\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as Comlink from 'comlink';\n/* eslint-disable-next-line import/no-unresolved */\nimport Worker from 'worker-loader!./webworker';\nimport { WorkerType } from './webworker';\nimport App from './App';\nimport store from './store';\n\nconst worker = Comlink.wrap<WorkerType>(new Worker());\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <BrowserRouter basename=\"/Vocivos\">\n            <App Worker={worker} />\n         </BrowserRouter>\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root'),\n);\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/webworker.19696659.worker.js\");\n}\n"],"sourceRoot":""}